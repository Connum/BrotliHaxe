// Generated by Haxe 3.4.0
package haxe.root;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class DefaultFunctions extends haxe.lang.HxObject
{
	public DefaultFunctions(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public DefaultFunctions()
	{
		//line 37 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		haxe.root.DefaultFunctions.__hx_ctor__DefaultFunctions(this);
	}
	
	
	public static void __hx_ctor__DefaultFunctions(haxe.root.DefaultFunctions __hx_this)
	{
	}
	
	
	public static void memcpy_Int(int[] dst, int dst_offset, int[] src, int src_offset, int count)
	{
		//line 20 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		int _g1 = 0;
		//line 20 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		while (( _g1 < count ))
		{
			//line 20 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			int i = _g1++;
			//line 21 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			((int[]) (dst) )[( dst_offset + i )] = ((int) (((int[]) (src) )[( src_offset + i )]) );
		}
		
	}
	
	
	public static void memset_Int(int[] b, int offset, int v, int count)
	{
		//line 16 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		int _g1 = 0;
		//line 16 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		while (( _g1 < count ))
		{
			//line 16 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			int i = _g1++;
			//line 17 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			((int[]) (b) )[( offset + i )] = v;
		}
		
	}
	
	
	public static void memcpy_UInt(int[] dst, int dst_offset, int[] src, int src_offset, int count)
	{
		//line 20 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		int _g1 = 0;
		//line 20 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		while (( _g1 < count ))
		{
			//line 20 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			int i = _g1++;
			//line 21 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			((int[]) (dst) )[( dst_offset + i )] = ((int) (((int[]) (src) )[( src_offset + i )]) );
		}
		
	}
	
	
	public static void memset_UInt(int[] b, int offset, int v, int count)
	{
		//line 16 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		int _g1 = 0;
		//line 16 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		while (( _g1 < count ))
		{
			//line 16 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			int i = _g1++;
			//line 17 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			((int[]) (b) )[( offset + i )] = v;
		}
		
	}
	
	
	public static void memcpyArray(haxe.root.Array<java.lang.Object> dst, int dst_offset, haxe.root.Array<java.lang.Object> src, int src_offset, int count)
	{
		//line 24 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		int _g1 = 0;
		//line 24 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		while (( _g1 < count ))
		{
			//line 24 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			int i = _g1++;
			//line 25 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			dst.__set(( dst_offset + i ), ((int) (haxe.lang.Runtime.toInt(src.__get(( src_offset + i )))) ));
		}
		
	}
	
	
	public static void memcpyVectorArray(int[] dst, int dst_offset, haxe.root.Array<java.lang.Object> src, int src_offset, int count)
	{
		//line 28 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		int _g1 = 0;
		//line 28 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		while (( _g1 < count ))
		{
			//line 28 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			int i = _g1++;
			//line 29 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			((int[]) (dst) )[( dst_offset + i )] = ((int) (haxe.lang.Runtime.toInt(src.__get(( src_offset + i )))) );
		}
		
	}
	
	
	public static void memcpyArrayVector(haxe.root.Array<java.lang.Object> dst, int dst_offset, int[] src, int src_offset, int count)
	{
		//line 32 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		int _g1 = 0;
		//line 32 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
		while (( _g1 < count ))
		{
			//line 32 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			int i = _g1++;
			//line 33 "C:\\Users\\Dominik\\Brotli\\src\\DefaultFunctions.hx"
			dst.__set(( dst_offset + i ), ((int) (((int[]) (src) )[( src_offset + i )]) ));
		}
		
	}
	
	
}


