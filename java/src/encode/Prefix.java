// Generated by Haxe 3.4.0
package encode;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Prefix extends haxe.lang.HxObject
{
	static
	{
		//line 13 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.kNumInsertLenPrefixes = 24;
		//line 14 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.kNumCopyLenPrefixes = 24;
		//line 15 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.kNumCommandPrefixes = 704;
		//line 16 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.kNumBlockLenPrefixes = 26;
		//line 17 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.kNumDistanceShortCodes = 16;
		//line 18 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.kNumDistancePrefixes = 520;
		//line 20 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.kBlockLengthPrefixCode = new haxe.root.Array<encode.prefix.PrefixCodeRange>(new encode.prefix.PrefixCodeRange[]{new encode.prefix.PrefixCodeRange(1, 2), new encode.prefix.PrefixCodeRange(5, 2), new encode.prefix.PrefixCodeRange(9, 2), new encode.prefix.PrefixCodeRange(13, 2), new encode.prefix.PrefixCodeRange(17, 3), new encode.prefix.PrefixCodeRange(25, 3), new encode.prefix.PrefixCodeRange(33, 3), new encode.prefix.PrefixCodeRange(41, 3), new encode.prefix.PrefixCodeRange(49, 4), new encode.prefix.PrefixCodeRange(65, 4), new encode.prefix.PrefixCodeRange(81, 4), new encode.prefix.PrefixCodeRange(97, 4), new encode.prefix.PrefixCodeRange(113, 5), new encode.prefix.PrefixCodeRange(145, 5), new encode.prefix.PrefixCodeRange(177, 5), new encode.prefix.PrefixCodeRange(209, 5), new encode.prefix.PrefixCodeRange(241, 6), new encode.prefix.PrefixCodeRange(305, 6), new encode.prefix.PrefixCodeRange(369, 7), new encode.prefix.PrefixCodeRange(497, 8), new encode.prefix.PrefixCodeRange(753, 9), new encode.prefix.PrefixCodeRange(1265, 10), new encode.prefix.PrefixCodeRange(2289, 11), new encode.prefix.PrefixCodeRange(4337, 12), new encode.prefix.PrefixCodeRange(8433, 13), new encode.prefix.PrefixCodeRange(16625, 24)});
	}
	
	public Prefix(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Prefix()
	{
		//line 63 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		encode.Prefix.__hx_ctor_encode_Prefix(this);
	}
	
	
	public static void __hx_ctor_encode_Prefix(encode.Prefix __hx_this)
	{
	}
	
	
	public static int kNumInsertLenPrefixes;
	
	public static int kNumCopyLenPrefixes;
	
	public static int kNumCommandPrefixes;
	
	public static int kNumBlockLenPrefixes;
	
	public static int kNumDistanceShortCodes;
	
	public static int kNumDistancePrefixes;
	
	public static haxe.root.Array<encode.prefix.PrefixCodeRange> kBlockLengthPrefixCode;
	
	public static void GetBlockLengthPrefixCode(int len, int[] code, int code_off, int[] n_extra, int n_extra_off, int[] extra, int extra_off)
	{
		//line 32 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		((int[]) (code) )[code_off] = 0;
		//line 33 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		while (( ( ((int) (((int[]) (code) )[code_off]) ) < 25 ) && ( len >= encode.Prefix.kBlockLengthPrefixCode.__get(( ((int) (((int[]) (code) )[code_off]) ) + 1 )).offset ) ))
		{
			//line 34 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
			((int[]) (code) )[code_off] = ( ((int) (((int[]) (code) )[code_off]) ) + 1 );
		}
		
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		((int[]) (n_extra) )[n_extra_off] = encode.Prefix.kBlockLengthPrefixCode.__get(((int) (((int[]) (code) )[code_off]) )).nbits;
		//line 37 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		((int[]) (extra) )[extra_off] = ( len - encode.Prefix.kBlockLengthPrefixCode.__get(((int) (((int[]) (code) )[code_off]) )).offset );
	}
	
	
	public static void PrefixEncodeCopyDistance(int distance_code, int num_direct_codes, int postfix_bits, haxe.root.Array<java.lang.Object> code, haxe.root.Array<java.lang.Object> extra_bits)
	{
		//line 45 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		if (( distance_code < ( 16 + num_direct_codes ) )) 
		{
			//line 46 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
			code.__set(0, distance_code);
			//line 47 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
			extra_bits.__set(0, 0);
			//line 48 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
			return ;
		}
		
		//line 50 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		distance_code -= ( 16 + num_direct_codes );
		//line 51 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		distance_code += ( 1 << ( postfix_bits + 2 ) );
		//line 52 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		int bucket = ( encode.Fast_log.Log2Floor(distance_code) - 1 );
		//line 53 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		int postfix_mask = ( (( 1 << postfix_bits )) - 1 );
		//line 54 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		int postfix = ( distance_code & postfix_mask );
		//line 55 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		int prefix = ( ( distance_code >> bucket ) & 1 );
		//line 56 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		int offset = ( ( 2 + prefix ) << bucket );
		//line 57 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		int nbits = ( bucket - postfix_bits );
		//line 58 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		code.__set(0, ( ( ( 16 + num_direct_codes ) + (( ( ( 2 * (( nbits - 1 )) ) + prefix ) << postfix_bits )) ) + postfix ));
		//line 60 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Prefix.hx"
		extra_bits.__set(0, ( ( nbits << 24 ) | ( ( distance_code - offset ) >> postfix_bits ) ));
	}
	
	
}


