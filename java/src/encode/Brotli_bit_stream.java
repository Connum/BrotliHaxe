// Generated by Haxe 3.4.0
package encode;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Brotli_bit_stream extends haxe.lang.HxObject
{
	public Brotli_bit_stream(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Brotli_bit_stream()
	{
		//line 792 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.__hx_ctor_encode_Brotli_bit_stream(this);
	}
	
	
	public static void __hx_ctor_encode_Brotli_bit_stream(encode.Brotli_bit_stream __hx_this)
	{
	}
	
	
	public static boolean EncodeMlen(int length, haxe.root.Array<java.lang.Object> bits, haxe.root.Array<java.lang.Object> numbits, haxe.root.Array<java.lang.Object> nibblesbits)
	{
		//line 25 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		 -- length;
		//line 26 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int lg = ( (( length == 0 )) ? (1) : (( encode.Fast_log.Log2Floor(length) + 1 )) );
		//line 27 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( lg > 24 )) 
		{
			//line 27 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return false;
		}
		
		//line 28 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int mnibbles = ((int) (( (( (( lg < 16 )) ? (16) : (( lg + 3 )) )) / 4 )) );
		//line 29 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		nibblesbits.__set(0, ( mnibbles - 4 ));
		//line 30 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		numbits.__set(0, ( mnibbles * 4 ));
		//line 31 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		bits.__set(0, length);
		//line 32 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return true;
	}
	
	
	public static void StoreVarLenUint8(int n, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( n == 0 )) 
		{
			//line 37 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, 0, storage_ix, storage);
		}
		else
		{
			//line 39 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, 1, storage_ix, storage);
			//line 40 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int nbits = encode.Fast_log.Log2Floor(n);
			//line 41 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(3, nbits, storage_ix, storage);
			//line 42 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(nbits, ( n - (( 1 << nbits )) ), storage_ix, storage);
		}
		
	}
	
	
	public static boolean StoreCompressedMetaBlockHeader(boolean final_block, int length, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 51 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(1, ( (final_block) ? (1) : (0) ), storage_ix, storage);
		//line 53 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (final_block) 
		{
			//line 54 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, ( (( length == 0 )) ? (1) : (0) ), storage_ix, storage);
			//line 55 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			if (( length == 0 )) 
			{
				//line 56 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				return true;
			}
			
		}
		
		//line 60 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( length == 0 )) 
		{
			//line 62 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return false;
		}
		
		//line 65 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> lenbits = new haxe.root.Array<java.lang.Object>();
		//line 66 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> nlenbits = new haxe.root.Array<java.lang.Object>();
		//line 67 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> nibblesbits = new haxe.root.Array<java.lang.Object>();
		//line 68 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if ( ! (encode.Brotli_bit_stream.EncodeMlen(length, lenbits, nlenbits, nibblesbits)) ) 
		{
			//line 69 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return false;
		}
		
		//line 72 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(2, ((int) (haxe.lang.Runtime.toInt(nibblesbits.__get(0))) ), storage_ix, storage);
		//line 73 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(((int) (haxe.lang.Runtime.toInt(nlenbits.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(lenbits.__get(0))) ), storage_ix, storage);
		//line 75 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if ( ! (final_block) ) 
		{
			//line 77 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, 0, storage_ix, storage);
		}
		
		//line 79 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return true;
	}
	
	
	public static boolean StoreUncompressedMetaBlockHeader(int length, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 86 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(1, 0, storage_ix, storage);
		//line 87 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> lenbits = new haxe.root.Array<java.lang.Object>();
		//line 88 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> nlenbits = new haxe.root.Array<java.lang.Object>();
		//line 89 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> nibblesbits = new haxe.root.Array<java.lang.Object>();
		//line 90 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if ( ! (encode.Brotli_bit_stream.EncodeMlen(length, lenbits, nlenbits, nibblesbits)) ) 
		{
			//line 91 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return false;
		}
		
		//line 93 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(2, ((int) (haxe.lang.Runtime.toInt(nibblesbits.__get(0))) ), storage_ix, storage);
		//line 94 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(((int) (haxe.lang.Runtime.toInt(nlenbits.__get(0))) ), ((int) (haxe.lang.Runtime.toInt(lenbits.__get(0))) ), storage_ix, storage);
		//line 96 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(1, 1, storage_ix, storage);
		//line 97 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return true;
	}
	
	
	public static void StoreHuffmanTreeOfHuffmanTreeToBitMask(int num_codes, int[] code_length_bitdepth, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 105 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> kStorageOrder = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15});
		//line 118 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> kHuffmanBitLengthHuffmanCodeSymbols = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 7, 3, 2, 1, 15});
		//line 121 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> kHuffmanBitLengthHuffmanCodeBitLengths = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{2, 4, 3, 2, 2, 4});
		//line 126 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int codes_to_store = 18;
		//line 127 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( num_codes > 1 )) 
		{
			//line 128 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( codes_to_store > 0 ))
			{
				//line 129 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( ((int) (((int[]) (code_length_bitdepth) )[((int) (haxe.lang.Runtime.toInt(kStorageOrder.__get(( codes_to_store - 1 )))) )]) ) != 0 )) 
				{
					//line 130 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					break;
				}
				
				//line 132 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				 -- codes_to_store;
			}
			
		}
		
		//line 135 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int skip_some = 0;
		//line 136 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( ( ((int) (((int[]) (code_length_bitdepth) )[((int) (haxe.lang.Runtime.toInt(kStorageOrder.__get(0))) )]) ) == 0 ) && ( ((int) (((int[]) (code_length_bitdepth) )[((int) (haxe.lang.Runtime.toInt(kStorageOrder.__get(1))) )]) ) == 0 ) )) 
		{
			//line 138 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			skip_some = 2;
			//line 139 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			if (( ((int) (((int[]) (code_length_bitdepth) )[((int) (haxe.lang.Runtime.toInt(kStorageOrder.__get(2))) )]) ) == 0 )) 
			{
				//line 140 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				skip_some = 3;
			}
			
		}
		
		//line 143 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(2, skip_some, storage_ix, storage);
		//line 144 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 144 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = skip_some;
			//line 144 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g = codes_to_store;
			//line 144 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < _g ))
			{
				//line 144 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 145 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int l = ((int) (((int[]) (code_length_bitdepth) )[((int) (haxe.lang.Runtime.toInt(kStorageOrder.__get(i))) )]) );
				//line 146 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(((int) (haxe.lang.Runtime.toInt(kHuffmanBitLengthHuffmanCodeBitLengths.__get(l))) ), ((int) (haxe.lang.Runtime.toInt(kHuffmanBitLengthHuffmanCodeSymbols.__get(l))) ), storage_ix, storage);
			}
			
		}
		
	}
	
	
	public static void StoreHuffmanTreeToBitMask(haxe.root.Array<java.lang.Object> huffman_tree, haxe.root.Array<java.lang.Object> huffman_tree_extra_bits, int[] code_length_bitdepth, int code_length_bitdepth_off, int[] code_length_bitdepth_symbols, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 159 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int _g1 = 0;
		//line 159 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int _g = huffman_tree.length;
		//line 159 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		while (( _g1 < _g ))
		{
			//line 159 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int i = _g1++;
			//line 160 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int ix = ((int) (haxe.lang.Runtime.toInt(huffman_tree.__get(i))) );
			//line 161 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(((int) (((int[]) (code_length_bitdepth) )[ix]) ), ((int) (((int[]) (code_length_bitdepth_symbols) )[ix]) ), storage_ix, storage);
			//line 164 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			switch (ix)
			{
				case 16:
				{
					//line 166 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(2, ((int) (haxe.lang.Runtime.toInt(huffman_tree_extra_bits.__get(i))) ), storage_ix, storage);
					//line 166 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					break;
				}
				
				
				case 17:
				{
					//line 168 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(3, ((int) (haxe.lang.Runtime.toInt(huffman_tree_extra_bits.__get(i))) ), storage_ix, storage);
					//line 168 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					break;
				}
				
				
			}
			
		}
		
	}
	
	
	public static void StoreSimpleHuffmanTree(int[] depths, int depths_off, haxe.root.Array<java.lang.Object> symbols, int num_symbols, int max_bits, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 179 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(2, 1, storage_ix, storage);
		//line 180 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(2, ( num_symbols - 1 ), storage_ix, storage);
		//line 183 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 183 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 183 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < num_symbols ))
			{
				//line 183 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 184 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				{
					//line 184 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g3 = ( i + 1 );
					//line 184 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					while (( _g3 < num_symbols ))
					{
						//line 184 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int j = _g3++;
						//line 185 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int a = ((int) (((int[]) (depths) )[( depths_off + ((int) (haxe.lang.Runtime.toInt(symbols.__get(j))) ) )]) );
						//line 185 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int b = ((int) (((int[]) (depths) )[( depths_off + ((int) (haxe.lang.Runtime.toInt(symbols.__get(i))) ) )]) );
						//line 185 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						boolean aNeg = ( ((int) (b) ) < 0 );
						//line 185 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						boolean bNeg = ( ((int) (a) ) < 0 );
						//line 185 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						if (( (( aNeg != bNeg )) ? (aNeg) : (( ((int) (b) ) > ((int) (a) ) )) )) 
						{
							//line 186 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							int t = ((int) (haxe.lang.Runtime.toInt(symbols.__get(j))) );
							//line 187 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							symbols.__set(j, ((int) (haxe.lang.Runtime.toInt(symbols.__get(i))) ));
							//line 188 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							symbols.__set(i, t);
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 193 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( num_symbols == 2 )) 
		{
			//line 194 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ), storage_ix, storage);
			//line 195 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ), storage_ix, storage);
		}
		else
		{
			//line 196 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			if (( num_symbols == 3 )) 
			{
				//line 197 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ), storage_ix, storage);
				//line 198 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ), storage_ix, storage);
				//line 199 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) ), storage_ix, storage);
			}
			else
			{
				//line 201 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ), storage_ix, storage);
				//line 202 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ), storage_ix, storage);
				//line 203 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) ), storage_ix, storage);
				//line 204 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(symbols.__get(3))) ), storage_ix, storage);
				//line 206 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(1, ( (( ((int) (((int[]) (depths) )[( depths_off + ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ) )]) ) == 1 )) ? (1) : (0) ), storage_ix, storage);
			}
			
		}
		
	}
	
	
	public static void StoreHuffmanTree(int[] depths, int depths_off, int num, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 215 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> huffman_tree = new haxe.root.Array<java.lang.Object>();
		//line 216 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> huffman_tree_extra_bits = new haxe.root.Array<java.lang.Object>();
		//line 220 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Entropy_encode.WriteHuffmanTree(depths, depths_off, num, huffman_tree, huffman_tree_extra_bits);
		//line 223 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] huffman_tree_histogram = haxe.root.FunctionMalloc.mallocInt(18);
		//line 224 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 224 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 224 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g = huffman_tree.length;
			//line 224 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < _g ))
			{
				//line 224 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 225 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				{
					//line 225 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g2 = ((int) (haxe.lang.Runtime.toInt(huffman_tree.__get(i))) );
					//line 225 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					((int[]) (huffman_tree_histogram) )[_g2] = ( ((int) (((int[]) (huffman_tree_histogram) )[_g2]) ) + 1 );
				}
				
			}
			
		}
		
		//line 228 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int num_codes = 0;
		//line 229 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int code = 0;
		//line 230 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 230 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g3 = 0;
			//line 230 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g3 < 18 ))
			{
				//line 230 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i1 = _g3++;
				//line 231 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( ((int) (((int[]) (huffman_tree_histogram) )[i1]) ) > 0 )) 
				{
					//line 232 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					if (( num_codes == 0 )) 
					{
						//line 233 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						code = i1;
						//line 234 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						num_codes = 1;
					}
					else
					{
						//line 235 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						if (( num_codes == 1 )) 
						{
							//line 236 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							num_codes = 2;
							//line 237 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							break;
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 245 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] code_length_bitdepth = haxe.root.FunctionMalloc.mallocUInt(18);
		//line 246 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] code_length_bitdepth_symbols = haxe.root.FunctionMalloc.mallocUInt(18);
		//line 247 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Entropy_encode.CreateHuffmanTree(huffman_tree_histogram, 0, 18, 5, code_length_bitdepth, 0);
		//line 249 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Entropy_encode.ConvertBitDepthsToSymbols(code_length_bitdepth, 0, 18, code_length_bitdepth_symbols, 0);
		//line 253 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.StoreHuffmanTreeOfHuffmanTreeToBitMask(num_codes, code_length_bitdepth, storage_ix, storage);
		//line 256 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( num_codes == 1 )) 
		{
			//line 257 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			((int[]) (code_length_bitdepth) )[code] = 0;
		}
		
		//line 261 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.StoreHuffmanTreeToBitMask(huffman_tree, huffman_tree_extra_bits, code_length_bitdepth, 0, code_length_bitdepth_symbols, storage_ix, storage);
	}
	
	
	public static void BuildAndStoreHuffmanTree(int[] histogram, int length, int[] depth, int depth_off, int[] bits, int bits_off, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 276 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int count = 0;
		//line 277 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> s4 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 0, 0, 0});
		//line 278 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 278 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 278 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < length ))
			{
				//line 278 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 279 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( ((int) (((int[]) (histogram) )[i]) ) > 0 )) 
				{
					//line 280 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					if (( count < 4 )) 
					{
						//line 281 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						s4.__set(count, i);
					}
					else
					{
						//line 282 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						if (( count > 4 )) 
						{
							//line 283 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							break;
						}
						
					}
					
					//line 285 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					 ++ count;
				}
				
			}
			
		}
		
		//line 289 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int max_bits_counter = ( length - 1 );
		//line 290 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int max_bits = 0;
		//line 291 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		while (( max_bits_counter > 0 ))
		{
			//line 292 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			max_bits_counter >>= 1;
			//line 293 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			 ++ max_bits;
		}
		
		//line 296 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( count <= 1 )) 
		{
			//line 297 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(4, 1, storage_ix, storage);
			//line 298 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(max_bits, ((int) (haxe.lang.Runtime.toInt(s4.__get(0))) ), storage_ix, storage);
			//line 299 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return ;
		}
		
		//line 302 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Entropy_encode.CreateHuffmanTree(histogram, 0, length, 15, depth, depth_off);
		//line 303 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Entropy_encode.ConvertBitDepthsToSymbols(depth, depth_off, length, bits, bits_off);
		//line 305 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( count <= 4 )) 
		{
			//line 306 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.StoreSimpleHuffmanTree(depth, depth_off, s4, count, max_bits, storage_ix, storage);
		}
		else
		{
			//line 308 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.StoreHuffmanTree(depth, depth_off, length, storage_ix, storage);
		}
		
	}
	
	
	public static int IndexOf(int[] v, int value)
	{
		//line 313 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 313 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 313 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g = ((int[]) (v) ).length;
			//line 313 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < _g ))
			{
				//line 313 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 314 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( ((int) (((int[]) (v) )[i]) ) == value )) 
				{
					//line 314 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					return i;
				}
				
			}
			
		}
		
		//line 316 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return -1;
	}
	
	
	public static void MoveToFront(int[] v, int index)
	{
		//line 320 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int value = ((int) (((int[]) (v) )[index]) );
		//line 321 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int i = index;
		//line 322 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		while (( i > 0 ))
		{
			//line 323 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			((int[]) (v) )[i] = ((int) (((int[]) (v) )[( i - 1 )]) );
			//line 324 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			 -- i;
		}
		
		//line 326 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		((int[]) (v) )[0] = value;
	}
	
	
	public static int[] MoveToFrontTransform(int[] v)
	{
		//line 330 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( ((int[]) (v) ).length == 0 )) 
		{
			//line 330 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return v;
		}
		
		//line 332 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int max_element = 0;
		//line 333 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 333 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 333 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g = ((int[]) (v) ).length;
			//line 333 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < _g ))
			{
				//line 333 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 334 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( max_element < ((int) (((int[]) (v) )[i]) ) )) 
				{
					//line 335 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					max_element = ((int) (((int[]) (v) )[i]) );
				}
				
			}
			
		}
		
		//line 336 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] this1 = new int[( max_element + 1 )];
		//line 336 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] mtf = ((int[]) (this1) );
		//line 337 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 337 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g11 = 0;
			//line 337 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g2 = ((int[]) (mtf) ).length;
			//line 337 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g11 < _g2 ))
			{
				//line 337 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i1 = _g11++;
				//line 337 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				((int[]) (mtf) )[i1] = i1;
			}
			
		}
		
		//line 338 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] this2 = new int[((int[]) (v) ).length];
		//line 338 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] result = ((int[]) (this2) );
		//line 339 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 339 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g12 = 0;
			//line 339 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g3 = ((int[]) (v) ).length;
			//line 339 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g12 < _g3 ))
			{
				//line 339 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i2 = _g12++;
				//line 340 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int index = encode.Brotli_bit_stream.IndexOf(mtf, ((int) (((int[]) (v) )[i2]) ));
				//line 341 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				((int[]) (result) )[i2] = index;
				//line 342 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Brotli_bit_stream.MoveToFront(mtf, index);
			}
			
		}
		
		//line 344 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return result;
	}
	
	
	public static void RunLengthCodeZeros(int[] v_in, haxe.root.Array<java.lang.Object> max_run_length_prefix, haxe.root.Array<java.lang.Object> v_out, haxe.root.Array<java.lang.Object> extra_bits)
	{
		//line 351 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int max_reps = 0;
		//line 352 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int i = 0;
		//line 353 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		while (( i < ((int[]) (v_in) ).length ))
		{
			//line 354 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( ( i < ((int[]) (v_in) ).length ) && ( ((int) (((int[]) (v_in) )[i]) ) != 0 ) ))
			{
				//line 354 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				 ++ i;
			}
			
			//line 355 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int reps = 0;
			//line 356 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( ( i < ((int[]) (v_in) ).length ) && ( ((int) (((int[]) (v_in) )[i]) ) == 0 ) ))
			{
				//line 357 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				 ++ reps;
				//line 358 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				 ++ i;
			}
			
			//line 360 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			max_reps = ((int) (java.lang.Math.max(((double) (reps) ), ((double) (max_reps) ))) );
		}
		
		//line 362 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int max_prefix = ( (( max_reps > 0 )) ? (encode.Fast_log.Log2Floor(max_reps)) : (0) );
		//line 363 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		max_run_length_prefix.__set(0, ((int) (java.lang.Math.min(((double) (max_prefix) ), ((double) (((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) )) ))) ));
		//line 364 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int i1 = 0;
		//line 365 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		while (( i1 < ((int[]) (v_in) ).length ))
		{
			//line 366 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			if (( ((int) (((int[]) (v_in) )[i1]) ) != 0 )) 
			{
				//line 367 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				v_out.push(( ((int) (((int[]) (v_in) )[i1]) ) + ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) ));
				//line 368 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				extra_bits.push(0);
				//line 369 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				 ++ i1;
			}
			else
			{
				//line 371 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int reps1 = 1;
				//line 372 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int k = ( i1 + 1 );
				//line 373 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				while (( ( k < ((int[]) (v_in) ).length ) && ( ((int) (((int[]) (v_in) )[k]) ) == 0 ) ))
				{
					//line 374 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					 ++ reps1;
					//line 375 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					 ++ k;
				}
				
				//line 377 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				i1 += reps1;
				//line 378 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				while (( reps1 > 0 ))
				{
					//line 379 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					if (( reps1 < ( 2 << ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) ) )) 
					{
						//line 380 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int run_length_prefix = encode.Fast_log.Log2Floor(reps1);
						//line 381 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						v_out.push(run_length_prefix);
						//line 382 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						extra_bits.push(( reps1 - (( 1 << run_length_prefix )) ));
						//line 383 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						break;
					}
					else
					{
						//line 385 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						v_out.push(((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ));
						//line 386 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						extra_bits.push(( (( 1 << ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) )) - 1 ));
						//line 387 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						reps1 -= ( (( 2 << ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) )) - 1 );
					}
					
				}
				
			}
			
		}
		
	}
	
	
	public static void EncodeContextMap(int[] context_map, int num_clusters, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 397 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.StoreVarLenUint8(( num_clusters - 1 ), storage_ix, storage);
		//line 399 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( num_clusters == 1 )) 
		{
			//line 400 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return ;
		}
		
		//line 403 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] transformed_symbols = encode.Brotli_bit_stream.MoveToFrontTransform(context_map);
		//line 404 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> rle_symbols = new haxe.root.Array<java.lang.Object>();
		//line 405 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> extra_bits = new haxe.root.Array<java.lang.Object>();
		//line 406 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.Array<java.lang.Object> max_run_length_prefix = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{6});
		//line 407 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.RunLengthCodeZeros(transformed_symbols, max_run_length_prefix, rle_symbols, extra_bits);
		//line 409 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.histogram.Histogram symbol_histogram = encode.Histogram_functions.HistogramContextMap();
		//line 410 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 410 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 410 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g = rle_symbols.length;
			//line 410 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < _g ))
			{
				//line 410 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 411 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				symbol_histogram.Add1(((int) (haxe.lang.Runtime.toInt(rle_symbols.__get(i))) ));
			}
			
		}
		
		//line 413 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		boolean use_rle = ( ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) > 0 );
		//line 414 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(1, ( (use_rle) ? (1) : (0) ), storage_ix, storage);
		//line 415 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (use_rle) 
		{
			//line 416 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(4, ( ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) - 1 ), storage_ix, storage);
		}
		
		//line 418 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.entropy_encode.EntropyCode symbol_code = encode.Entropy_encode.EntropyCodeContextMap();
		//line 419 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.DefaultFunctions.memset_UInt(symbol_code.depth_, 0, 0, ((int[]) (symbol_code.depth_) ).length);
		//line 420 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.DefaultFunctions.memset_UInt(symbol_code.bits_, 0, 0, ((int[]) (symbol_code.bits_) ).length);
		//line 421 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(symbol_histogram.data_, ( num_clusters + ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) ), symbol_code.depth_, 0, symbol_code.bits_, 0, storage_ix, storage);
		//line 425 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 425 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g11 = 0;
			//line 425 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g2 = rle_symbols.length;
			//line 425 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g11 < _g2 ))
			{
				//line 425 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i1 = _g11++;
				//line 426 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(((int[]) (symbol_code.depth_) )[((int) (haxe.lang.Runtime.toInt(rle_symbols.__get(i1))) )], ((int[]) (symbol_code.bits_) )[((int) (haxe.lang.Runtime.toInt(rle_symbols.__get(i1))) )], storage_ix, storage);
				//line 429 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( ( ((int) (haxe.lang.Runtime.toInt(rle_symbols.__get(i1))) ) > 0 ) && ( ((int) (haxe.lang.Runtime.toInt(rle_symbols.__get(i1))) ) <= ((int) (haxe.lang.Runtime.toInt(max_run_length_prefix.__get(0))) ) ) )) 
				{
					//line 430 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(((int) (haxe.lang.Runtime.toInt(rle_symbols.__get(i1))) ), ((int) (haxe.lang.Runtime.toInt(extra_bits.__get(i1))) ), storage_ix, storage);
				}
				
			}
			
		}
		
		//line 433 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(1, 1, storage_ix, storage);
	}
	
	
	public static void StoreBlockSwitch(encode.brotli_bit_stream.BlockSplitCode code, int block_ix, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 440 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( block_ix > 0 )) 
		{
			//line 441 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int typecode = ((int[]) (code.type_code) )[block_ix];
			//line 442 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(((int[]) (code.type_depths) )[typecode], ((int[]) (code.type_bits) )[typecode], storage_ix, storage);
		}
		
		//line 445 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int lencode = ((int[]) (code.length_prefix) )[block_ix];
		//line 446 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(((int[]) (code.length_depths) )[lencode], ((int[]) (code.length_bits) )[lencode], storage_ix, storage);
		//line 448 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(((int[]) (code.length_nextra) )[block_ix], ((int[]) (code.length_extra) )[block_ix], storage_ix, storage);
	}
	
	
	public static void BuildAndStoreBlockSplitCode(haxe.root.Array<java.lang.Object> types, haxe.root.Array<java.lang.Object> lengths, int num_types, encode.brotli_bit_stream.BlockSplitCode code, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 458 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int num_blocks = types.length;
		//line 459 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] type_histo = haxe.root.FunctionMalloc.mallocInt(( num_types + 2 ));
		//line 460 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] length_histo = haxe.root.FunctionMalloc.mallocInt(26);
		//line 461 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int last_type = 1;
		//line 462 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int second_last_type = 0;
		//line 463 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.type_code = haxe.root.FunctionMalloc.mallocInt(num_blocks);
		//line 464 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.length_prefix = haxe.root.FunctionMalloc.mallocInt(num_blocks);
		//line 465 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.length_nextra = haxe.root.FunctionMalloc.mallocInt(num_blocks);
		//line 466 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.length_extra = haxe.root.FunctionMalloc.mallocInt(num_blocks);
		//line 467 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.type_depths = haxe.root.FunctionMalloc.mallocUInt(( num_types + 2 ));
		//line 468 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.type_bits = haxe.root.FunctionMalloc.mallocUInt(( num_types + 2 ));
		//line 469 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.length_depths = haxe.root.FunctionMalloc.mallocUInt(26);
		//line 470 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		code.length_bits = haxe.root.FunctionMalloc.mallocUInt(26);
		//line 471 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 471 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 471 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < num_blocks ))
			{
				//line 471 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 472 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int type = ((int) (haxe.lang.Runtime.toInt(types.__get(i))) );
				//line 473 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int type_code = ( (( type == ( last_type + 1 ) )) ? (1) : (( (( type == second_last_type )) ? (0) : (( type + 2 )) )) );
				//line 476 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				second_last_type = last_type;
				//line 477 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				last_type = type;
				//line 478 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				((int[]) (code.type_code) )[i] = type_code;
				//line 479 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( i > 0 )) 
				{
					//line 479 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g2 = type_code;
					//line 479 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					((int[]) (type_histo) )[_g2] = ( ((int) (((int[]) (type_histo) )[_g2]) ) + 1 );
				}
				
				//line 480 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Prefix.GetBlockLengthPrefixCode(((int) (haxe.lang.Runtime.toInt(lengths.__get(i))) ), code.length_prefix, i, code.length_nextra, i, code.length_extra, i);
				//line 484 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				{
					//line 484 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g21 = ((int[]) (code.length_prefix) )[i];
					//line 484 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					((int[]) (length_histo) )[_g21] = ( ((int) (((int[]) (length_histo) )[_g21]) ) + 1 );
				}
				
			}
			
		}
		
		//line 486 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.StoreVarLenUint8(( num_types - 1 ), storage_ix, storage);
		//line 487 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( num_types > 1 )) 
		{
			//line 488 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(type_histo, ( num_types + 2 ), code.type_depths, 0, code.type_bits, 0, storage_ix, storage);
			//line 491 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(length_histo, 26, code.length_depths, 0, code.length_bits, 0, storage_ix, storage);
			//line 494 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.StoreBlockSwitch(code, 0, storage_ix, storage);
		}
		
	}
	
	
	public static void StoreTrivialContextMap(int num_types, int context_bits, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 502 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.StoreVarLenUint8(( num_types - 1 ), storage_ix, storage);
		//line 503 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( num_types > 1 )) 
		{
			//line 504 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int repeat_code = ( context_bits - 1 );
			//line 505 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int repeat_bits = ( (( 1 << repeat_code )) - 1 );
			//line 506 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int alphabet_size = ( num_types + repeat_code );
			//line 507 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int[] histogram = haxe.root.FunctionMalloc.mallocInt(alphabet_size);
			//line 508 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int[] depths = haxe.root.FunctionMalloc.mallocUInt(alphabet_size);
			//line 509 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int[] bits = haxe.root.FunctionMalloc.mallocUInt(alphabet_size);
			//line 511 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, 1, storage_ix, storage);
			//line 512 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(4, ( repeat_code - 1 ), storage_ix, storage);
			//line 513 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			((int[]) (histogram) )[repeat_code] = num_types;
			//line 514 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			((int[]) (histogram) )[0] = 1;
			//line 515 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			{
				//line 515 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int _g1 = context_bits;
				//line 515 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				while (( _g1 < alphabet_size ))
				{
					//line 515 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int i = _g1++;
					//line 516 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					((int[]) (histogram) )[i] = 1;
				}
				
			}
			
			//line 518 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(histogram, alphabet_size, depths, 0, bits, 0, storage_ix, storage);
			//line 521 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			{
				//line 521 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int _g11 = 0;
				//line 521 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				while (( _g11 < num_types ))
				{
					//line 521 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int i1 = _g11++;
					//line 522 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int code = ( (( i1 == 0 )) ? (0) : (( ( i1 + context_bits ) - 1 )) );
					//line 523 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(((int) (((int[]) (depths) )[code]) ), ((int) (((int[]) (bits) )[code]) ), storage_ix, storage);
					//line 524 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(((int) (((int[]) (depths) )[repeat_code]) ), ((int) (((int[]) (bits) )[repeat_code]) ), storage_ix, storage);
					//line 525 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(repeat_code, repeat_bits, storage_ix, storage);
				}
				
			}
			
			//line 528 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, 1, storage_ix, storage);
		}
		
	}
	
	
	public static void JumpToByteBoundary(haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 533 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		storage_ix.__set(0, ( ( ((int) (haxe.lang.Runtime.toInt(storage_ix.__get(0))) ) + 7 ) & -8 ));
		//line 534 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		((int[]) (storage) )[( ((int) (haxe.lang.Runtime.toInt(storage_ix.__get(0))) ) >> 3 )] = 0;
	}
	
	
	public static boolean StoreMetaBlock(int[] input, int start_pos, int length, int mask, int prev_byte, int prev_byte2, boolean is_last, int num_direct_distance_codes, int distance_postfix_bits, int literal_context_mode, haxe.root.Array<encode.command.Command> commands, int n_commands, encode.metablock.MetaBlockSplit mb, haxe.root.Array<java.lang.Object> storage_ix, int[] storage)
	{
		//line 552 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if ( ! (encode.Brotli_bit_stream.StoreCompressedMetaBlockHeader(is_last, length, storage_ix, storage)) ) 
		{
			//line 553 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return false;
		}
		
		//line 556 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( length == 0 )) 
		{
			//line 558 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.JumpToByteBoundary(storage_ix, storage);
			//line 559 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return true;
		}
		
		//line 562 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int num_distance_codes = ( ( 16 + num_direct_distance_codes ) + (( 48 << distance_postfix_bits )) );
		//line 566 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.brotli_bit_stream.BlockEncoder literal_enc = new encode.brotli_bit_stream.BlockEncoder(256, mb.literal_split.num_types, mb.literal_split.types, mb.literal_split.lengths);
		//line 570 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.brotli_bit_stream.BlockEncoder command_enc = new encode.brotli_bit_stream.BlockEncoder(704, mb.command_split.num_types, mb.command_split.types, mb.command_split.lengths);
		//line 574 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.brotli_bit_stream.BlockEncoder distance_enc = new encode.brotli_bit_stream.BlockEncoder(num_distance_codes, mb.distance_split.num_types, mb.distance_split.types, mb.distance_split.lengths);
		//line 579 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		literal_enc.BuildAndStoreBlockSwitchEntropyCodes(storage_ix, storage);
		//line 580 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		command_enc.BuildAndStoreBlockSwitchEntropyCodes(storage_ix, storage);
		//line 581 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		distance_enc.BuildAndStoreBlockSwitchEntropyCodes(storage_ix, storage);
		//line 583 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(2, distance_postfix_bits, storage_ix, storage);
		//line 584 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(4, ( num_direct_distance_codes >> distance_postfix_bits ), storage_ix, storage);
		//line 586 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 586 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 586 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g = mb.literal_split.num_types;
			//line 586 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < _g ))
			{
				//line 586 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				 ++ _g1;
				//line 587 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(2, literal_context_mode, storage_ix, storage);
			}
			
		}
		
		//line 590 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( ((int[]) (mb.literal_context_map) ).length == 0 )) 
		{
			//line 591 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.StoreTrivialContextMap(mb.literal_histograms.length, 6, storage_ix, storage);
		}
		else
		{
			//line 594 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.EncodeContextMap(mb.literal_context_map, mb.literal_histograms.length, storage_ix, storage);
		}
		
		//line 598 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( ((int[]) (mb.distance_context_map) ).length == 0 )) 
		{
			//line 599 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.StoreTrivialContextMap(mb.distance_histograms.length, 2, storage_ix, storage);
		}
		else
		{
			//line 602 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.EncodeContextMap(mb.distance_context_map, mb.distance_histograms.length, storage_ix, storage);
		}
		
		//line 606 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		literal_enc.BuildAndStoreEntropyCodes(mb.literal_histograms, storage_ix, storage);
		//line 608 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		command_enc.BuildAndStoreEntropyCodes(mb.command_histograms, storage_ix, storage);
		//line 610 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		distance_enc.BuildAndStoreEntropyCodes(mb.distance_histograms, storage_ix, storage);
		//line 613 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int pos = start_pos;
		//line 614 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 614 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g11 = 0;
			//line 614 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g11 < n_commands ))
			{
				//line 614 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g11++;
				//line 615 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.command.Command cmd = commands.__get(i);
				//line 616 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int cmd_code = ((int) (haxe.lang.Runtime.toInt(cmd.cmd_prefix_.__get(0))) );
				//line 617 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int lennumextra = ( ((int) (haxe.lang.Runtime.toInt(cmd.cmd_extra_.__get(0))) ) >>> 16 );
				//line 618 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				haxe.root.Array<java.lang.Object> lenextra = cmd.cmd_extra_;
				//line 619 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				command_enc.StoreSymbol(cmd_code, storage_ix, storage);
				//line 620 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( lennumextra >= 32 )) 
				{
					//line 621 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(( lennumextra - 32 ), ((int) (haxe.lang.Runtime.toInt(lenextra.__get(0))) ), storage_ix, storage);
				}
				
				//line 622 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(( (( lennumextra < 32 )) ? (lennumextra) : (32) ), ((int) (haxe.lang.Runtime.toInt(lenextra.__get(1))) ), storage_ix, storage);
				//line 623 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( ((int[]) (mb.literal_context_map) ).length == 0 )) 
				{
					//line 624 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g3 = 0;
					//line 624 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g2 = cmd.insert_len_;
					//line 624 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					while (( _g3 < _g2 ))
					{
						//line 624 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ _g3;
						//line 625 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						literal_enc.StoreSymbol(((int) (((int[]) (input) )[( pos & mask )]) ), storage_ix, storage);
						//line 626 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ pos;
					}
					
				}
				else
				{
					//line 629 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g31 = 0;
					//line 629 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g21 = cmd.insert_len_;
					//line 629 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					while (( _g31 < _g21 ))
					{
						//line 629 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ _g31;
						//line 630 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int context = encode.Context.ContextFunction(prev_byte, prev_byte2, literal_context_mode);
						//line 632 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int literal = ((int) (((int[]) (input) )[( pos & mask )]) );
						//line 633 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						literal_enc.StoreSymbolWithContext(6, literal, context, mb.literal_context_map, storage_ix, storage);
						//line 635 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						prev_byte2 = prev_byte;
						//line 636 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						prev_byte = literal;
						//line 637 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ pos;
					}
					
				}
				
				//line 640 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				pos += cmd.copy_len_;
				//line 641 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( cmd.copy_len_ > 0 )) 
				{
					//line 642 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					prev_byte2 = ((int) (((int[]) (input) )[( ( pos - 2 ) & mask )]) );
					//line 643 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					prev_byte = ((int) (((int[]) (input) )[( ( pos - 1 ) & mask )]) );
					//line 644 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int a = ((int) (haxe.lang.Runtime.toInt(cmd.cmd_prefix_.__get(0))) );
					//line 644 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					boolean aNeg = ( ((int) (a) ) < 0 );
					//line 644 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					if (( (( aNeg != false )) ? (aNeg) : (( ((int) (a) ) >= ((int) (128) ) )) )) 
					{
						//line 645 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int dist_code = ((int) (haxe.lang.Runtime.toInt(cmd.dist_prefix_.__get(0))) );
						//line 646 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int distnumextra = ( ((int) (haxe.lang.Runtime.toInt(cmd.dist_extra_.__get(0))) ) >>> 24 );
						//line 647 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int distextra = ( ((int) (haxe.lang.Runtime.toInt(cmd.dist_extra_.__get(0))) ) & ((int) (16777215) ) );
						//line 648 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						if (( ((int[]) (mb.distance_context_map) ).length == 0 )) 
						{
							//line 649 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							distance_enc.StoreSymbol(dist_code, storage_ix, storage);
						}
						else
						{
							//line 651 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							int context1 = cmd.DistanceContext();
							//line 652 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
							distance_enc.StoreSymbolWithContext(2, dist_code, context1, mb.distance_context_map, storage_ix, storage);
						}
						
						//line 655 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						encode.Write_bits.WriteBits(distnumextra, distextra, storage_ix, storage);
					}
					
				}
				
			}
			
		}
		
		//line 659 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (is_last) 
		{
			//line 660 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.JumpToByteBoundary(storage_ix, storage);
		}
		
		//line 662 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return true;
	}
	
	
	public static boolean StoreMetaBlockTrivial(int[] input, int start_pos, int length, int mask, boolean is_last, haxe.root.Array<encode.command.Command> commands, int n_commands, haxe.root.Array<java.lang.Object> storage_ix, int[] storage, int storage_off)
	{
		//line 675 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if ( ! (encode.Brotli_bit_stream.StoreCompressedMetaBlockHeader(is_last, length, storage_ix, storage)) ) 
		{
			//line 676 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return false;
		}
		
		//line 679 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( length == 0 )) 
		{
			//line 681 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.JumpToByteBoundary(storage_ix, storage);
			//line 682 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return true;
		}
		
		//line 685 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.histogram.Histogram lit_histo = encode.Histogram_functions.HistogramLiteral();
		//line 686 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.histogram.Histogram cmd_histo = encode.Histogram_functions.HistogramCommand();
		//line 687 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.histogram.Histogram dist_histo = encode.Histogram_functions.HistogramDistance();
		//line 689 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int pos = start_pos;
		//line 690 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 690 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g1 = 0;
			//line 690 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g1 < n_commands ))
			{
				//line 690 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i = _g1++;
				//line 691 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.command.Command cmd = commands.__get(i);
				//line 692 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				cmd_histo.Add1(((int) (haxe.lang.Runtime.toInt(cmd.cmd_prefix_.__get(0))) ));
				//line 693 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				{
					//line 693 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g3 = 0;
					//line 693 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g2 = cmd.insert_len_;
					//line 693 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					while (( _g3 < _g2 ))
					{
						//line 693 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ _g3;
						//line 694 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						lit_histo.Add1(((int) (((int[]) (input) )[( pos & mask )]) ));
						//line 695 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ pos;
					}
					
				}
				
				//line 697 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				pos += cmd.copy_len_;
				//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				boolean tmp = false;
				//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( cmd.copy_len_ > 0 )) 
				{
					//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int a = ((int) (haxe.lang.Runtime.toInt(cmd.cmd_prefix_.__get(0))) );
					//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					boolean aNeg = ( ((int) (a) ) < 0 );
					//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					if (( aNeg != false )) 
					{
						//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						tmp = aNeg;
					}
					else
					{
						//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						tmp = ( ((int) (a) ) >= ((int) (128) ) );
					}
					
				}
				else
				{
					//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					tmp = false;
				}
				
				//line 698 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (tmp) 
				{
					//line 699 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					dist_histo.Add1(((int) (haxe.lang.Runtime.toInt(cmd.dist_prefix_.__get(0))) ));
				}
				
			}
			
		}
		
		//line 703 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBits(13, 0, storage_ix, storage);
		//line 705 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] lit_depth = haxe.root.FunctionMalloc.mallocUInt(256);
		//line 706 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] lit_bits = haxe.root.FunctionMalloc.mallocUInt(256);
		//line 707 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] cmd_depth = haxe.root.FunctionMalloc.mallocUInt(704);
		//line 708 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] cmd_bits = haxe.root.FunctionMalloc.mallocUInt(704);
		//line 709 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] dist_depth = haxe.root.FunctionMalloc.mallocUInt(64);
		//line 710 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int[] dist_bits = haxe.root.FunctionMalloc.mallocUInt(64);
		//line 712 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(lit_histo.data_, 256, lit_depth, 0, lit_bits, 0, storage_ix, storage);
		//line 715 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(cmd_histo.data_, 704, cmd_depth, 0, cmd_bits, 0, storage_ix, storage);
		//line 718 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(dist_histo.data_, 64, dist_depth, 0, dist_bits, 0, storage_ix, storage);
		//line 722 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		pos = start_pos;
		//line 723 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 723 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int _g11 = 0;
			//line 723 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			while (( _g11 < n_commands ))
			{
				//line 723 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int i1 = _g11++;
				//line 724 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.command.Command cmd1 = commands.__get(i1);
				//line 725 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int cmd_code = ((int) (haxe.lang.Runtime.toInt(cmd1.cmd_prefix_.__get(0))) );
				//line 726 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int lennumextra = ( ((int) (haxe.lang.Runtime.toInt(cmd1.cmd_extra_.__get(0))) ) >>> 16 );
				//line 727 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				haxe.root.Array<java.lang.Object> lenextra = cmd1.cmd_extra_;
				//line 728 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(((int) (((int[]) (cmd_depth) )[cmd_code]) ), ((int) (((int[]) (cmd_bits) )[cmd_code]) ), storage_ix, storage);
				//line 729 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( lennumextra >= 32 )) 
				{
					//line 730 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(( lennumextra - 32 ), ((int) (haxe.lang.Runtime.toInt(lenextra.__get(0))) ), storage_ix, storage);
				}
				
				//line 731 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				encode.Write_bits.WriteBits(( (( lennumextra < 32 )) ? (lennumextra) : (32) ), ((int) (haxe.lang.Runtime.toInt(lenextra.__get(1))) ), storage_ix, storage);
				//line 732 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				{
					//line 732 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g31 = 0;
					//line 732 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int _g21 = cmd1.insert_len_;
					//line 732 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					while (( _g31 < _g21 ))
					{
						//line 732 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ _g31;
						//line 733 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						int literal = ((int) (((int[]) (input) )[( pos & mask )]) );
						//line 734 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						encode.Write_bits.WriteBits(((int) (((int[]) (lit_depth) )[literal]) ), ((int) (((int[]) (lit_bits) )[literal]) ), storage_ix, storage);
						//line 735 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						 ++ pos;
					}
					
				}
				
				//line 737 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				pos += cmd1.copy_len_;
				//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				boolean tmp1 = false;
				//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (( cmd1.copy_len_ > 0 )) 
				{
					//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int a1 = ((int) (haxe.lang.Runtime.toInt(cmd1.cmd_prefix_.__get(0))) );
					//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					boolean aNeg1 = ( ((int) (a1) ) < 0 );
					//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					if (( aNeg1 != false )) 
					{
						//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						tmp1 = aNeg1;
					}
					else
					{
						//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
						tmp1 = ( ((int) (a1) ) >= ((int) (128) ) );
					}
					
				}
				else
				{
					//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					tmp1 = false;
				}
				
				//line 738 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				if (tmp1) 
				{
					//line 739 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int dist_code = ((int) (haxe.lang.Runtime.toInt(cmd1.dist_prefix_.__get(0))) );
					//line 740 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int distnumextra = ( ((int) (haxe.lang.Runtime.toInt(cmd1.dist_extra_.__get(0))) ) >>> 24 );
					//line 741 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					int distextra = ( ((int) (haxe.lang.Runtime.toInt(cmd1.dist_extra_.__get(0))) ) & ((int) (16777215) ) );
					//line 742 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(((int) (((int[]) (dist_depth) )[dist_code]) ), ((int) (((int[]) (dist_bits) )[dist_code]) ), storage_ix, storage);
					//line 744 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
					encode.Write_bits.WriteBits(distnumextra, distextra, storage_ix, storage);
				}
				
			}
			
		}
		
		//line 747 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (is_last) 
		{
			//line 748 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.JumpToByteBoundary(storage_ix, storage);
		}
		
		//line 750 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return true;
	}
	
	
	public static boolean StoreUncompressedMetaBlock(boolean final_block, int[] input, int position, int mask, int len, haxe.root.Array<java.lang.Object> storage_ix, int[] storage, int storage_off)
	{
		//line 762 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if ( ! (encode.Brotli_bit_stream.StoreUncompressedMetaBlockHeader(len, storage_ix, storage)) ) 
		{
			//line 763 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			return false;
		}
		
		//line 765 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Brotli_bit_stream.JumpToByteBoundary(storage_ix, storage);
		//line 767 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int masked_pos = ( position & mask );
		//line 768 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (( ( masked_pos + len ) > ( mask + 1 ) )) 
		{
			//line 769 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int len1 = ( ( mask + 1 ) - masked_pos );
			//line 770 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			haxe.root.DefaultFunctions.memcpy_UInt(storage, ( ((int) (haxe.lang.Runtime.toInt(storage_ix.__get(0))) ) >> 3 ), input, masked_pos, len1);
			//line 771 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			{
				//line 771 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				int __temp_index1 = 0;
				//line 771 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
				storage_ix.__set(__temp_index1, ( ((int) (haxe.lang.Runtime.toInt(storage_ix.__get(__temp_index1))) ) + ( len1 << 3 ) ));
			}
			
			//line 772 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			len -= len1;
			//line 773 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			masked_pos = 0;
		}
		
		//line 775 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		haxe.root.DefaultFunctions.memcpy_UInt(storage, ( ((int) (haxe.lang.Runtime.toInt(storage_ix.__get(0))) ) >> 3 ), input, masked_pos, len);
		//line 776 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		int __temp_stmt1 = 0;
		//line 776 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		{
			//line 776 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			int __temp_index2 = 0;
			//line 776 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			__temp_stmt1 = ((int) (haxe.lang.Runtime.toInt(storage_ix.__set(__temp_index2, ( ((int) (haxe.lang.Runtime.toInt(storage_ix.__get(__temp_index2))) ) + ( len << 3 ) )))) );
		}
		
		//line 780 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		encode.Write_bits.WriteBitsPrepareStorage(__temp_stmt1, storage);
		//line 784 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		if (final_block) 
		{
			//line 785 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, 1, storage_ix, storage);
			//line 786 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Write_bits.WriteBits(1, 1, storage_ix, storage);
			//line 787 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
			encode.Brotli_bit_stream.JumpToByteBoundary(storage_ix, storage);
		}
		
		//line 789 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Brotli_bit_stream.hx"
		return true;
	}
	
	
}


