// Generated by Haxe 3.4.0
package encode;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Literal_cost extends haxe.lang.HxObject
{
	public Literal_cost(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Literal_cost()
	{
		//line 155 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		encode.Literal_cost.__hx_ctor_encode_Literal_cost(this);
	}
	
	
	public static void __hx_ctor_encode_Literal_cost(encode.Literal_cost __hx_this)
	{
	}
	
	
	public static int UTF8Position(int last, int c, int clamp)
	{
		//line 12 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		if (( c < 128 )) 
		{
			//line 13 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			return 0;
		}
		else
		{
			//line 14 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			if (( c >= 192 )) 
			{
				//line 15 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				return ((int) (java.lang.Math.min(((double) (1) ), ((double) (clamp) ))) );
			}
			else
			{
				//line 18 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( last < 224 )) 
				{
					//line 19 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					return 0;
				}
				else
				{
					//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					return ((int) (java.lang.Math.min(((double) (2) ), ((double) (clamp) ))) );
				}
				
			}
			
		}
		
	}
	
	
	public static int DecideMultiByteStatsLevel(int pos, int len, int mask, int[] data)
	{
		//line 28 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		haxe.root.Array<java.lang.Object> counts = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 0, 0});
		//line 29 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int max_utf8 = 1;
		//line 30 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int last_c = 0;
		//line 31 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int utf8_pos = 0;
		//line 32 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		{
			//line 32 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			int _g1 = 0;
			//line 32 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			while (( _g1 < len ))
			{
				//line 32 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int i = _g1++;
				//line 33 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int c = ((int) (((int[]) (data) )[( ( pos + i ) & mask )]) );
				//line 34 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				utf8_pos = encode.Literal_cost.UTF8Position(last_c, c, 2);
				//line 35 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				{
					//line 35 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int __temp_arrVal1 = ((int) (haxe.lang.Runtime.toInt(counts.__get(utf8_pos))) );
					//line 35 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int __temp_arrRet2 =  ++ __temp_arrVal1;
					//line 35 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					counts.__set(utf8_pos, __temp_arrVal1);
					//line 35 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int __temp_expr1 = __temp_arrRet2;
				}
				
				//line 36 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				last_c = c;
			}
			
		}
		
		//line 38 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		if (( ((int) (haxe.lang.Runtime.toInt(counts.__get(2))) ) < 500 )) 
		{
			//line 39 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			max_utf8 = 1;
		}
		
		//line 41 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		if (( ( ((int) (haxe.lang.Runtime.toInt(counts.__get(1))) ) + ((int) (haxe.lang.Runtime.toInt(counts.__get(2))) ) ) < 25 )) 
		{
			//line 42 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			max_utf8 = 0;
		}
		
		//line 44 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		return max_utf8;
	}
	
	
	public static void EstimateBitCostsForLiteralsUTF8(int pos, int len, int mask, int cost_mask, int[] data, double[] cost)
	{
		//line 53 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int max_utf8 = encode.Literal_cost.DecideMultiByteStatsLevel(pos, len, mask, data);
		//line 54 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		haxe.root.Array<int[]> histogram = new haxe.root.Array<int[]>(new int[][]{haxe.root.FunctionMalloc.mallocInt(256), haxe.root.FunctionMalloc.mallocInt(256), haxe.root.FunctionMalloc.mallocInt(256)});
		//line 56 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int in_window = ((int) (java.lang.Math.min(((double) (495) ), ((double) (len) ))) );
		//line 57 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		haxe.root.Array<java.lang.Object> in_window_utf8 = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 0, 0});
		//line 60 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int last_c = 0;
		//line 61 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int utf8_pos = 0;
		//line 62 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		{
			//line 62 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			int _g1 = 0;
			//line 62 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			while (( _g1 < in_window ))
			{
				//line 62 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int i = _g1++;
				//line 63 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int c = ((int) (((int[]) (data) )[( ( pos + i ) & mask )]) );
				//line 64 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				((int[]) (histogram.__get(utf8_pos)) )[c] = ( ((int) (((int[]) (histogram.__get(utf8_pos)) )[c]) ) + 1 );
				//line 65 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				{
					//line 65 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int __temp_arrVal1 = ((int) (haxe.lang.Runtime.toInt(in_window_utf8.__get(utf8_pos))) );
					//line 65 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int __temp_arrRet2 =  ++ __temp_arrVal1;
					//line 65 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					in_window_utf8.__set(utf8_pos, __temp_arrVal1);
					//line 65 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int __temp_expr1 = __temp_arrRet2;
				}
				
				//line 66 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				utf8_pos = encode.Literal_cost.UTF8Position(last_c, c, max_utf8);
				//line 67 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				last_c = c;
			}
			
		}
		
		//line 71 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		{
			//line 71 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			int _g11 = 0;
			//line 71 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			while (( _g11 < len ))
			{
				//line 71 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int i1 = _g11++;
				//line 72 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( ( i1 - 495 ) >= 0 )) 
				{
					//line 74 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int c1 = ( (( ( ( i1 - 495 ) - 1 ) < 0 )) ? (0) : (((int) (((int[]) (data) )[( ( ( ( pos + i1 ) - 495 ) - 1 ) & mask )]) )) );
					//line 76 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int last_c1 = ( (( ( ( i1 - 495 ) - 2 ) < 0 )) ? (0) : (((int) (((int[]) (data) )[( ( ( ( pos + i1 ) - 495 ) - 2 ) & mask )]) )) );
					//line 78 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int utf8_pos2 = encode.Literal_cost.UTF8Position(last_c1, c1, max_utf8);
					//line 79 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					{
						//line 79 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int _g2 = ((int) (((int[]) (data) )[( ( ( pos + i1 ) - 495 ) & mask )]) );
						//line 79 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						((int[]) (histogram.__get(utf8_pos2)) )[_g2] = ( ((int) (((int[]) (histogram.__get(utf8_pos2)) )[_g2]) ) - 1 );
					}
					
					//line 80 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					{
						//line 80 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int __temp_arrVal3 = ((int) (haxe.lang.Runtime.toInt(in_window_utf8.__get(utf8_pos2))) );
						//line 80 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int __temp_arrRet4 =  -- __temp_arrVal3;
						//line 80 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						in_window_utf8.__set(utf8_pos2, __temp_arrVal3);
						//line 80 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int __temp_expr2 = __temp_arrRet4;
					}
					
				}
				
				//line 82 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( ( i1 + 495 ) < len )) 
				{
					//line 84 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int c2 = ( (( ( ( i1 + 495 ) - 1 ) < 0 )) ? (0) : (((int) (((int[]) (data) )[( ( ( ( pos + i1 ) + 495 ) - 1 ) & mask )]) )) );
					//line 86 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int last_c2 = ( (( ( ( i1 + 495 ) - 2 ) < 0 )) ? (0) : (((int) (((int[]) (data) )[( ( ( ( pos + i1 ) + 495 ) - 2 ) & mask )]) )) );
					//line 88 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int utf8_pos21 = encode.Literal_cost.UTF8Position(last_c2, c2, max_utf8);
					//line 89 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					{
						//line 89 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int _g21 = ((int) (((int[]) (data) )[( ( ( pos + i1 ) + 495 ) & mask )]) );
						//line 89 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						((int[]) (histogram.__get(utf8_pos21)) )[_g21] = ( ((int) (((int[]) (histogram.__get(utf8_pos21)) )[_g21]) ) + 1 );
					}
					
					//line 90 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					{
						//line 90 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int __temp_arrVal5 = ((int) (haxe.lang.Runtime.toInt(in_window_utf8.__get(utf8_pos21))) );
						//line 90 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int __temp_arrRet6 =  ++ __temp_arrVal5;
						//line 90 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						in_window_utf8.__set(utf8_pos21, __temp_arrVal5);
						//line 90 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int __temp_expr3 = __temp_arrRet6;
					}
					
				}
				
				//line 92 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int c3 = ( (( i1 < 1 )) ? (0) : (((int) (((int[]) (data) )[( ( ( pos + i1 ) - 1 ) & mask )]) )) );
				//line 93 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int last_c3 = ( (( i1 < 2 )) ? (0) : (((int) (((int[]) (data) )[( ( ( pos + i1 ) - 2 ) & mask )]) )) );
				//line 94 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int utf8_pos1 = encode.Literal_cost.UTF8Position(last_c3, c3, max_utf8);
				//line 95 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int masked_pos = ( ( pos + i1 ) & mask );
				//line 96 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int histo = ((int) (((int[]) (histogram.__get(utf8_pos1)) )[((int) (((int[]) (data) )[masked_pos]) )]) );
				//line 97 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( histo == 0 )) 
				{
					//line 98 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					histo = 1;
				}
				
				//line 100 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				double lit_cost = ( encode.Fast_log.FastLog2(((int) (haxe.lang.Runtime.toInt(in_window_utf8.__get(utf8_pos1))) )) - encode.Fast_log.FastLog2(histo) );
				//line 101 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				lit_cost += 0.02905;
				//line 102 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( lit_cost < 1.0 )) 
				{
					//line 103 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					lit_cost *= 0.5;
					//line 104 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					lit_cost += 0.5;
				}
				
				//line 110 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( i1 < 2000 )) 
				{
					//line 111 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					lit_cost += ( 0.7 - ( ( (( 2000 - i1 )) / 2000.0 ) * 0.35 ) );
				}
				
				//line 113 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				((double[]) (cost) )[( ( pos + i1 ) & cost_mask )] = lit_cost;
			}
			
		}
		
	}
	
	
	public static void EstimateBitCostsForLiterals(int pos, int len, int mask, int cost_mask, int[] data, double[] cost)
	{
		//line 120 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int[] histogram = haxe.root.FunctionMalloc.mallocInt(256);
		//line 122 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		int in_window = ((int) (java.lang.Math.min(((double) (2000) ), ((double) (len) ))) );
		//line 125 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		{
			//line 125 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			int _g1 = 0;
			//line 125 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			int _g = in_window;
			//line 125 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			while (( _g1 < _g ))
			{
				//line 125 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int i = _g1++;
				//line 126 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				{
					//line 126 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					int _g2 = ((int) (((int[]) (data) )[( ( pos + i ) & mask )]) );
					//line 126 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					((int[]) (histogram) )[_g2] = ( ((int) (((int[]) (histogram) )[_g2]) ) + 1 );
				}
				
			}
			
		}
		
		//line 130 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
		{
			//line 130 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			int _g11 = 0;
			//line 130 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
			while (( _g11 < len ))
			{
				//line 130 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int i1 = _g11++;
				//line 131 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( ( i1 - 2000 ) >= 0 )) 
				{
					//line 133 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					{
						//line 133 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int _g21 = ((int) (((int[]) (data) )[( ( ( pos + i1 ) - 2000 ) & mask )]) );
						//line 133 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						((int[]) (histogram) )[_g21] = ( ((int) (((int[]) (histogram) )[_g21]) ) - 1 );
					}
					
					//line 134 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					 -- in_window;
				}
				
				//line 136 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( ( i1 + 2000 ) < len )) 
				{
					//line 138 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					{
						//line 138 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						int _g22 = ((int) (((int[]) (data) )[( ( ( pos + i1 ) + 2000 ) & mask )]) );
						//line 138 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
						((int[]) (histogram) )[_g22] = ( ((int) (((int[]) (histogram) )[_g22]) ) + 1 );
					}
					
					//line 139 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					 ++ in_window;
				}
				
				//line 141 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				int histo = ((int) (((int[]) (histogram) )[((int) (((int[]) (data) )[( ( pos + i1 ) & mask )]) )]) );
				//line 142 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( histo == 0 )) 
				{
					//line 143 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					histo = 1;
				}
				
				//line 145 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				double lit_cost = ( encode.Fast_log.FastLog2(in_window) - encode.Fast_log.FastLog2(histo) );
				//line 146 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				lit_cost += 0.029;
				//line 147 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				if (( lit_cost < 1.0 )) 
				{
					//line 148 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					lit_cost *= 0.5;
					//line 149 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
					lit_cost += 0.5;
				}
				
				//line 151 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Literal_cost.hx"
				((double[]) (cost) )[( ( pos + i1 ) & cost_mask )] = lit_cost;
			}
			
		}
		
	}
	
	
}


