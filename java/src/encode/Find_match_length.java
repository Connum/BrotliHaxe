// Generated by Haxe 3.4.0
package encode;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Find_match_length extends haxe.lang.HxObject
{
	public Find_match_length(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Find_match_length()
	{
		//line 34 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
		encode.Find_match_length.__hx_ctor_encode_Find_match_length(this);
	}
	
	
	public static void __hx_ctor_encode_Find_match_length(encode.Find_match_length __hx_this)
	{
	}
	
	
	public static int FindMatchLengthWithLimit(int[] s1, int s1_off, int[] s2, int s2_off, int limit)
	{
		//line 14 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
		int matched = 0;
		//line 15 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
		int s2_limit_off = ( s2_off + limit );
		//line 16 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
		int s2_ptr_off = s2_off;
		//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
		while (true)
		{
			//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
			boolean tmp = false;
			//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
			if (( s2_ptr_off <= ( s2_limit_off - 4 ) )) 
			{
				//line 23 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
				int p_off = ( s1_off + matched );
				//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
				tmp = ( (((int) (( ((int) (( ((int) (( ((int) (( ((int) (((int[]) (s2) )[( s2_ptr_off + 3 )]) ) << 24 )) ) | ((int) (( ((int) (((int[]) (s2) )[( s2_ptr_off + 2 )]) ) << 16 )) ) )) ) | ((int) (( ((int) (((int[]) (s2) )[( s2_ptr_off + 1 )]) ) << 8 )) ) )) ) | ((int) (((int[]) (s2) )[s2_ptr_off]) ) )) )) == (((int) (( ((int) (( ((int) (( ((int) (( ((int) (((int[]) (s1) )[( p_off + 3 )]) ) << 24 )) ) | ((int) (( ((int) (((int[]) (s1) )[( p_off + 2 )]) ) << 16 )) ) )) ) | ((int) (( ((int) (((int[]) (s1) )[( p_off + 1 )]) ) << 8 )) ) )) ) | ((int) (((int[]) (s1) )[p_off]) ) )) )) );
			}
			else
			{
				//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
				tmp = false;
			}
			
			//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
			if ( ! (tmp) ) 
			{
				//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
				break;
			}
			
			//line 24 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
			s2_ptr_off += 4;
			//line 25 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
			matched += 4;
		}
		
		//line 27 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
		while (( ( s2_ptr_off < s2_limit_off ) && ( ((int) (((int[]) (s1) )[( s1_off + matched )]) ) == ((int) (((int[]) (s2) )[s2_ptr_off]) ) ) ))
		{
			//line 28 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
			 ++ s2_ptr_off;
			//line 29 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
			 ++ matched;
		}
		
		//line 31 "C:\\Users\\Dominik\\Brotli\\src\\encode\\Find_match_length.hx"
		return matched;
	}
	
	
}


