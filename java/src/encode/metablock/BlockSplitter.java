// Generated by Haxe 3.4.0
package encode.metablock;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class BlockSplitter extends haxe.lang.HxObject
{
	static
	{
		//line 166 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		encode.metablock.BlockSplitter.kMaxBlockTypes = 256;
	}
	
	public BlockSplitter(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public BlockSplitter(int HistogramTypeInt, int alphabet_size, int min_block_size, double split_threshold, int num_symbols, encode.metablock.BlockSplit split, haxe.root.Array<encode.histogram.Histogram> histograms)
	{
		//line 13 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		encode.metablock.BlockSplitter.__hx_ctor_encode_metablock_BlockSplitter(this, HistogramTypeInt, alphabet_size, min_block_size, split_threshold, num_symbols, split, histograms);
	}
	
	
	public static void __hx_ctor_encode_metablock_BlockSplitter(encode.metablock.BlockSplitter __hx_this, int HistogramTypeInt, int alphabet_size, int min_block_size, double split_threshold, int num_symbols, encode.metablock.BlockSplit split, haxe.root.Array<encode.histogram.Histogram> histograms)
	{
		//line 193 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.last_entropy_ = new haxe.root.Array<java.lang.Object>();
		//line 191 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.last_histogram_ix_ = new haxe.root.Array<java.lang.Object>();
		//line 20 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.HistogramTypeInt = HistogramTypeInt;
		//line 21 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.alphabet_size_ = alphabet_size;
		//line 22 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.min_block_size_ = min_block_size;
		//line 23 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.split_threshold_ = split_threshold;
		//line 24 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.num_blocks_ = 0;
		//line 25 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.split_ = split;
		//line 26 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.histograms_ = histograms;
		//line 27 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.target_block_size_ = min_block_size;
		//line 28 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.block_size_ = 0;
		//line 29 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.curr_histogram_ix_ = 0;
		//line 30 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.merge_last_count_ = 0;
		//line 31 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		int max_num_blocks = ( ((int) (( num_symbols / min_block_size )) ) + 1 );
		//line 34 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		int max_num_types = ((int) (java.lang.Math.min(((double) (max_num_blocks) ), ((double) (( encode.metablock.BlockSplitter.kMaxBlockTypes + 1 )) ))) );
		//line 35 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.split_.lengths = new haxe.root.Array<java.lang.Object>();
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.split_.types = new haxe.root.Array<java.lang.Object>();
		//line 37 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		{
			//line 37 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			int _g1 = 0;
			//line 37 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			while (( _g1 < max_num_types ))
			{
				//line 37 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				 ++ _g1;
				//line 38 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				__hx_this.histograms_.push(new encode.histogram.Histogram(((int) (HistogramTypeInt) )));
			}
			
		}
		
		//line 39 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.last_histogram_ix_.__set(1, 0);
		//line 39 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		__hx_this.last_histogram_ix_.__set(0, 0);
	}
	
	
	public static int kMaxBlockTypes;
	
	public void AddSymbol(int symbol)
	{
		//line 45 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		this.histograms_.__get(this.curr_histogram_ix_).Add1(symbol);
		//line 46 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		 ++ this.block_size_;
		//line 47 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		if (( this.block_size_ == this.target_block_size_ )) 
		{
			//line 48 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			this.FinishBlock(false);
		}
		
	}
	
	
	public void FinishBlock(boolean is_final)
	{
		//line 57 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		if (( this.block_size_ < this.min_block_size_ )) 
		{
			//line 58 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			this.block_size_ = this.min_block_size_;
		}
		
		//line 60 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		if (( this.num_blocks_ == 0 )) 
		{
			//line 62 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			this.split_.lengths.__set(0, this.block_size_);
			//line 63 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			this.split_.types.__set(0, 0);
			//line 64 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			this.last_entropy_.__set(0, encode.Bit_cost.BitsEntropy(this.histograms_.__get(0).data_, 0, this.alphabet_size_));
			//line 66 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			this.last_entropy_.__set(1, ((double) (haxe.lang.Runtime.toDouble(this.last_entropy_.__get(0))) ));
			//line 67 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			 ++ this.num_blocks_;
			//line 68 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			 ++ this.split_.num_types;
			//line 69 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			 ++ this.curr_histogram_ix_;
			//line 70 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			this.block_size_ = 0;
		}
		else
		{
			//line 71 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			if (( this.block_size_ > 0 )) 
			{
				//line 72 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				double entropy = encode.Bit_cost.BitsEntropy(this.histograms_.__get(this.curr_histogram_ix_).data_, 0, this.alphabet_size_);
				//line 74 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				haxe.root.Array<encode.histogram.Histogram> combined_histo = new haxe.root.Array<encode.histogram.Histogram>(new encode.histogram.Histogram[]{new encode.histogram.Histogram(((int) (this.HistogramTypeInt) )), new encode.histogram.Histogram(((int) (this.HistogramTypeInt) ))});
				//line 75 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				double[] combined_entropy = haxe.root.FunctionMalloc.mallocFloat(2);
				//line 76 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				double[] diff = haxe.root.FunctionMalloc.mallocFloat(2);
				//line 77 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				{
					//line 77 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					int _g = 0;
					//line 77 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					while (( _g < 2 ))
					{
						//line 77 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						int j = _g++;
						//line 78 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						int last_histogram_ix = ((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(j))) );
						//line 82 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						combined_histo.__get(j).bit_cost_ = this.histograms_.__get(this.curr_histogram_ix_).bit_cost_;
						//line 83 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						{
							//line 83 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							int _g2 = 0;
							//line 83 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							int _g1 = ((int[]) (this.histograms_.__get(this.curr_histogram_ix_).data_) ).length;
							//line 83 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							while (( _g2 < _g1 ))
							{
								//line 83 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
								int a = _g2++;
								//line 84 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
								((int[]) (combined_histo.__get(j).data_) )[a] = ((int[]) (this.histograms_.__get(this.curr_histogram_ix_).data_) )[a];
							}
							
						}
						
						//line 85 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						combined_histo.__get(j).kDataSize = this.histograms_.__get(this.curr_histogram_ix_).kDataSize;
						//line 86 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						combined_histo.__get(j).total_count_ = this.histograms_.__get(this.curr_histogram_ix_).total_count_;
						//line 88 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						combined_histo.__get(j).AddHistogram(this.histograms_.__get(last_histogram_ix));
						//line 89 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						((double[]) (combined_entropy) )[j] = encode.Bit_cost.BitsEntropy(combined_histo.__get(j).data_, 0, this.alphabet_size_);
						//line 91 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						((double[]) (diff) )[j] = ( ( ((double) (((double[]) (combined_entropy) )[j]) ) - entropy ) - ((double) (haxe.lang.Runtime.toDouble(this.last_entropy_.__get(j))) ) );
					}
					
				}
				
				//line 94 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				if (( ( ( this.split_.num_types < encode.metablock.BlockSplitter.kMaxBlockTypes ) && ( ((double) (((double[]) (diff) )[0]) ) > this.split_threshold_ ) ) && ( ((double) (((double[]) (diff) )[1]) ) > this.split_threshold_ ) )) 
				{
					//line 98 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.split_.lengths.__set(this.num_blocks_, this.block_size_);
					//line 99 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.split_.types.__set(this.num_blocks_, this.split_.num_types);
					//line 100 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.last_histogram_ix_.__set(1, ((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) ));
					//line 101 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.last_histogram_ix_.__set(0, this.split_.num_types);
					//line 102 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.last_entropy_.__set(1, ((double) (haxe.lang.Runtime.toDouble(this.last_entropy_.__get(0))) ));
					//line 103 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.last_entropy_.__set(0, entropy);
					//line 104 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					 ++ this.num_blocks_;
					//line 105 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					 ++ this.split_.num_types;
					//line 106 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					 ++ this.curr_histogram_ix_;
					//line 107 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.block_size_ = 0;
					//line 108 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.merge_last_count_ = 0;
					//line 109 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					this.target_block_size_ = this.min_block_size_;
				}
				else
				{
					//line 110 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (( ((double) (((double[]) (diff) )[1]) ) < ( ((double) (((double[]) (diff) )[0]) ) - 20.0 ) )) 
					{
						//line 112 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.split_.lengths.__set(this.num_blocks_, this.block_size_);
						//line 113 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.split_.types.__set(this.num_blocks_, ((int) (haxe.lang.Runtime.toInt(this.split_.types.__get(( this.num_blocks_ - 2 )))) ));
						//line 114 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						int t = ((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) );
						//line 115 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.last_histogram_ix_.__set(0, ((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(1))) ));
						//line 116 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.last_histogram_ix_.__set(1, t);
						//line 120 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).bit_cost_ = combined_histo.__get(1).bit_cost_;
						//line 121 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						{
							//line 121 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							int _g11 = 0;
							//line 121 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							int _g3 = ((int[]) (combined_histo.__get(1).data_) ).length;
							//line 121 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							while (( _g11 < _g3 ))
							{
								//line 121 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
								int a1 = _g11++;
								//line 122 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
								((int[]) (this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).data_) )[a1] = ((int[]) (combined_histo.__get(1).data_) )[a1];
							}
							
						}
						
						//line 123 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).kDataSize = combined_histo.__get(1).kDataSize;
						//line 124 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).total_count_ = combined_histo.__get(1).total_count_;
						//line 126 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.last_entropy_.__set(1, ((double) (haxe.lang.Runtime.toDouble(this.last_entropy_.__get(0))) ));
						//line 127 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.last_entropy_.__set(0, ((double) (((double[]) (combined_entropy) )[1]) ));
						//line 128 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						 ++ this.num_blocks_;
						//line 129 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.block_size_ = 0;
						//line 130 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(this.curr_histogram_ix_).Clear();
						//line 131 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.merge_last_count_ = 0;
						//line 132 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.target_block_size_ = this.min_block_size_;
					}
					else
					{
						//line 135 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						{
							//line 135 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							haxe.root.Array<java.lang.Object> __temp_array1 = this.split_.lengths;
							//line 135 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							int __temp_index2 = ( this.num_blocks_ - 1 );
							//line 135 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							__temp_array1.__set(__temp_index2, ( ((int) (haxe.lang.Runtime.toInt(__temp_array1.__get(__temp_index2))) ) + this.block_size_ ));
						}
						
						//line 139 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).bit_cost_ = combined_histo.__get(0).bit_cost_;
						//line 140 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						{
							//line 140 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							int _g12 = 0;
							//line 140 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							int _g4 = ((int[]) (combined_histo.__get(0).data_) ).length;
							//line 140 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							while (( _g12 < _g4 ))
							{
								//line 140 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
								int a2 = _g12++;
								//line 141 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
								((int[]) (this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).data_) )[a2] = ((int[]) (combined_histo.__get(0).data_) )[a2];
							}
							
						}
						
						//line 142 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).kDataSize = combined_histo.__get(0).kDataSize;
						//line 143 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(((int) (haxe.lang.Runtime.toInt(this.last_histogram_ix_.__get(0))) )).total_count_ = combined_histo.__get(0).total_count_;
						//line 145 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.last_entropy_.__set(0, ((double) (((double[]) (combined_entropy) )[0]) ));
						//line 146 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						if (( this.split_.num_types == 1 )) 
						{
							//line 147 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							this.last_entropy_.__set(1, ((double) (haxe.lang.Runtime.toDouble(this.last_entropy_.__get(0))) ));
						}
						
						//line 149 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.block_size_ = 0;
						//line 150 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_.__get(this.curr_histogram_ix_).Clear();
						//line 151 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						if ((  ++ this.merge_last_count_ > 1 )) 
						{
							//line 152 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
							this.target_block_size_ += this.min_block_size_;
						}
						
					}
					
				}
				
			}
			
		}
		
		//line 156 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		if (is_final) 
		{
			//line 157 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			while (( this.histograms_.length > this.split_.num_types ))
			{
				//line 157 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				this.histograms_.pop();
			}
			
			//line 158 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			while (( this.split_.types.length > this.num_blocks_ ))
			{
				//line 158 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				this.split_.types.pop();
			}
			
			//line 159 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			while (( this.split_.lengths.length > this.num_blocks_ ))
			{
				//line 159 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				this.split_.lengths.pop();
			}
			
		}
		
	}
	
	
	public int HistogramTypeInt;
	
	public int alphabet_size_;
	
	public int min_block_size_;
	
	public double split_threshold_;
	
	public int num_blocks_;
	
	public encode.metablock.BlockSplit split_;
	
	public haxe.root.Array<encode.histogram.Histogram> histograms_;
	
	public int target_block_size_;
	
	public int block_size_;
	
	public int curr_histogram_ix_;
	
	public haxe.root.Array<java.lang.Object> last_histogram_ix_;
	
	public haxe.root.Array<java.lang.Object> last_entropy_;
	
	public int merge_last_count_;
	
	@Override public double __hx_setField_f(java.lang.String field, double value, boolean handleProperties)
	{
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		{
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			switch (field.hashCode())
			{
				case -1925728910:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("merge_last_count_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.merge_last_count_ = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1978781809:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("HistogramTypeInt")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.HistogramTypeInt = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 446582888:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("curr_histogram_ix_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.curr_histogram_ix_ = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -37517390:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("alphabet_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.alphabet_size_ = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1227221580:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.block_size_ = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -2034039841:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("min_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.min_block_size_ = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -1868175202:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("target_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.target_block_size_ = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1468780441:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("split_threshold_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.split_threshold_ = ((double) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1279348704:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("num_blocks_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.num_blocks_ = ((int) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
			}
			
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				return super.__hx_setField_f(field, value, handleProperties);
			}
			else
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		{
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			switch (field.hashCode())
			{
				case -1925728910:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("merge_last_count_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.merge_last_count_ = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1978781809:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("HistogramTypeInt")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.HistogramTypeInt = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -1506797161:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("last_entropy_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.last_entropy_ = ((haxe.root.Array<java.lang.Object>) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -37517390:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("alphabet_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.alphabet_size_ = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1271045580:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("last_histogram_ix_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.last_histogram_ix_ = ((haxe.root.Array<java.lang.Object>) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -2034039841:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("min_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.min_block_size_ = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 446582888:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("curr_histogram_ix_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.curr_histogram_ix_ = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1468780441:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("split_threshold_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.split_threshold_ = ((double) (haxe.lang.Runtime.toDouble(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1227221580:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.block_size_ = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1279348704:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("num_blocks_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.num_blocks_ = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -1868175202:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("target_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.target_block_size_ = ((int) (haxe.lang.Runtime.toInt(value)) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -895858555:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("split_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.split_ = ((encode.metablock.BlockSplit) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 31016624:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("histograms_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.histograms_ = ((haxe.root.Array<encode.histogram.Histogram>) (value) );
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return value;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
			}
			
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		{
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			switch (field.hashCode())
			{
				case -1925728910:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("merge_last_count_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.merge_last_count_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 2009283961:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("AddSymbol")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "AddSymbol")) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -1506797161:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("last_entropy_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.last_entropy_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -1306209382:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("FinishBlock")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((haxe.lang.Function) (new haxe.lang.Closure(this, "FinishBlock")) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1271045580:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("last_histogram_ix_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.last_histogram_ix_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1978781809:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("HistogramTypeInt")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.HistogramTypeInt;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 446582888:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("curr_histogram_ix_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.curr_histogram_ix_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -37517390:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("alphabet_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.alphabet_size_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1227221580:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.block_size_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -2034039841:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("min_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.min_block_size_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -1868175202:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("target_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.target_block_size_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1468780441:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("split_threshold_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.split_threshold_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 31016624:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("histograms_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.histograms_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1279348704:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("num_blocks_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.num_blocks_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -895858555:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("split_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.split_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
			}
			
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public double __hx_getField_f(java.lang.String field, boolean throwErrors, boolean handleProperties)
	{
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		{
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			switch (field.hashCode())
			{
				case -1925728910:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("merge_last_count_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.merge_last_count_) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1978781809:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("HistogramTypeInt")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.HistogramTypeInt) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 446582888:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("curr_histogram_ix_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.curr_histogram_ix_) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -37517390:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("alphabet_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.alphabet_size_) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1227221580:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.block_size_) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -2034039841:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("min_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.min_block_size_) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case -1868175202:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("target_block_size_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.target_block_size_) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1468780441:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("split_threshold_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return this.split_threshold_;
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 1279348704:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("num_blocks_")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						return ((double) (this.num_blocks_) );
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
			}
			
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				return super.__hx_getField_f(field, throwErrors, handleProperties);
			}
			else
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, haxe.root.Array dynargs)
	{
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		{
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			boolean __temp_executeDef1 = true;
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			switch (field.hashCode())
			{
				case -1306209382:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("FinishBlock")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.FinishBlock(haxe.lang.Runtime.toBool(dynargs.__get(0)));
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
				case 2009283961:
				{
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					if (field.equals("AddSymbol")) 
					{
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						__temp_executeDef1 = false;
						//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
						this.AddSymbol(((int) (haxe.lang.Runtime.toInt(dynargs.__get(0))) ));
					}
					
					//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
					break;
				}
				
				
			}
			
			//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
			if (__temp_executeDef1) 
			{
				//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			
		}
		
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		return null;
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("merge_last_count_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("last_entropy_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("last_histogram_ix_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("curr_histogram_ix_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("block_size_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("target_block_size_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("histograms_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("split_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("num_blocks_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("split_threshold_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("min_block_size_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("alphabet_size_");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		baseArr.push("HistogramTypeInt");
		//line 10 "C:\\Users\\Dominik\\Brotli\\src\\encode\\metablock\\BlockSplitter.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


