// Generated by Haxe 3.4.0
package decode;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Decode extends haxe.lang.HxObject
{
	static
	{
		//line 60 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kDefaultCodeLength = 8;
		//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kCodeLengthRepeatCode = 16;
		//line 62 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kNumLiteralCodes = 256;
		//line 63 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kNumInsertAndCopyCodes = 704;
		//line 64 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kNumBlockLengthCodes = 26;
		//line 65 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kLiteralContextBits = 6;
		//line 66 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kDistanceContextBits = 2;
		//line 67 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.HUFFMAN_TABLE_BITS = 8;
		//line 68 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.HUFFMAN_TABLE_MASK = 255;
		//line 70 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.CODE_LENGTH_CODES = 18;
		//line 71 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kCodeLengthCodeOrder = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{1, 2, 3, 4, 0, 5, 17, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15});
		//line 74 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.NUM_DISTANCE_SHORT_CODES = 16;
		//line 75 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kDistanceShortCodeIndexOffset = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{3, 2, 1, 0, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2});
		//line 79 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.kDistanceShortCodeValueOffset = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 0, 0, 0, -1, 1, -2, 2, -3, 3, -1, 1, -2, 2, -3, 3});
	}
	
	public Decode(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Decode()
	{
		//line 41 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.__hx_ctor_decode_Decode(this);
	}
	
	
	public static void __hx_ctor_decode_Decode(decode.Decode __hx_this)
	{
	}
	
	
	public static int BROTLI_FAILURE()
	{
		//line 44 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ((int) (0) );
	}
	
	
	public static void BROTLI_LOG_UINT(int x)
	{
	}
	
	
	public static void BROTLI_LOG_ARRAY_INDEX(int[] array_name, int idx)
	{
	}
	
	
	public static void BROTLI_LOG(java.lang.String x)
	{
		//line 55 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		haxe.Log.trace.__hx_invoke2_o(0.0, x, 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
	}
	
	
	public static void BROTLI_LOG_UCHAR_VECTOR(int[] v, int len)
	{
	}
	
	
	public static int kDefaultCodeLength;
	
	public static int kCodeLengthRepeatCode;
	
	public static int kNumLiteralCodes;
	
	public static int kNumInsertAndCopyCodes;
	
	public static int kNumBlockLengthCodes;
	
	public static int kLiteralContextBits;
	
	public static int kDistanceContextBits;
	
	public static int HUFFMAN_TABLE_BITS;
	
	public static int HUFFMAN_TABLE_MASK;
	
	public static int CODE_LENGTH_CODES;
	
	public static haxe.root.Array<java.lang.Object> kCodeLengthCodeOrder;
	
	public static int NUM_DISTANCE_SHORT_CODES;
	
	public static haxe.root.Array<java.lang.Object> kDistanceShortCodeIndexOffset;
	
	public static haxe.root.Array<java.lang.Object> kDistanceShortCodeValueOffset;
	
	public static int DecodeWindowBits(decode.bit_reader.BrotliBitReader br)
	{
		//line 85 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int n = 0;
		//line 86 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int) (decode.BitReader.BrotliReadBits(br, 1)) ) == 0 )) 
		{
			//line 87 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return 16;
		}
		
		//line 89 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		n = decode.BitReader.BrotliReadBits(br, 3);
		//line 90 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( n > 0 )) 
		{
			//line 91 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ( 17 + n );
		}
		
		//line 93 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		n = decode.BitReader.BrotliReadBits(br, 3);
		//line 94 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( n > 0 )) 
		{
			//line 95 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ( 8 + n );
		}
		
		//line 97 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return 17;
	}
	
	
	public static int DecodeVarLenUint8(decode.bit_reader.BrotliBitReader br)
	{
		//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int) (decode.BitReader.BrotliReadBits(br, 1)) ) == 1 )) 
		{
			//line 103 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int nbits = decode.BitReader.BrotliReadBits(br, 3);
			//line 104 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( nbits == 0 )) 
			{
				//line 105 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return 1;
			}
			else
			{
				//line 107 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ( ((int) (decode.BitReader.BrotliReadBits(br, nbits)) ) + (((int) (( 1 << nbits )) )) );
			}
			
		}
		
		//line 110 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return 0;
	}
	
	
	public static boolean JumpToByteBoundary(decode.bit_reader.BrotliBitReader br)
	{
		//line 117 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int new_bit_pos = ( ((int) (( ((int) (br.bit_pos_) ) + ((int) (7) ) )) ) & ((int) (-8) ) );
		//line 118 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int pad_bits = decode.BitReader.BrotliReadBits(br, ((int) (( ((int) (new_bit_pos) ) - ((int) (br.bit_pos_) ) )) ));
		//line 119 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ( ((int) (pad_bits) ) == 0 );
	}
	
	
	public static boolean DecodeMetaBlockLength(decode.bit_reader.BrotliBitReader br, haxe.root.Array<java.lang.Object> meta_block_length, haxe.root.Array<java.lang.Object> input_end, haxe.root.Array<java.lang.Object> is_metadata, haxe.root.Array<java.lang.Object> is_uncompressed)
	{
		//line 128 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int size_nibbles = 0;
		//line 129 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int size_bytes = 0;
		//line 131 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		input_end.__set(0, decode.BitReader.BrotliReadBits(br, 1));
		//line 132 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		meta_block_length.__set(0, 0);
		//line 133 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		is_uncompressed.__set(0, 0);
		//line 134 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		is_metadata.__set(0, 0);
		//line 135 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ( ((int) (haxe.lang.Runtime.toInt(input_end.__get(0))) ) == 1 ) && ( ((int) (decode.BitReader.BrotliReadBits(br, 1)) ) == 1 ) )) 
		{
			//line 136 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return true;
		}
		
		//line 138 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		size_nibbles = ( ((int) (decode.BitReader.BrotliReadBits(br, 2)) ) + ((int) (4) ) );
		//line 139 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( size_nibbles == 7 )) 
		{
			//line 140 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			is_metadata.__set(0, 1);
			//line 142 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int) (decode.BitReader.BrotliReadBits(br, 1)) ) != 0 )) 
			{
				//line 143 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return false;
			}
			
			//line 145 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			size_bytes = decode.BitReader.BrotliReadBits(br, 2);
			//line 146 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( size_bytes == 0 )) 
			{
				//line 147 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return true;
			}
			
			//line 149 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			{
				//line 149 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int _g1 = 0;
				//line 149 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				while (( _g1 < size_bytes ))
				{
					//line 149 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int i = _g1++;
					//line 150 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int next_byte = decode.BitReader.BrotliReadBits(br, 8);
					//line 151 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ( ( ( i + 1 ) == size_bytes ) && ( size_bytes > 1 ) ) && ( next_byte == 0 ) )) 
					{
						//line 152 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return false;
					}
					
					//line 154 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					{
						//line 154 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int __temp_index1 = 0;
						//line 154 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						meta_block_length.__set(__temp_index1, ( ((int) (haxe.lang.Runtime.toInt(meta_block_length.__get(__temp_index1))) ) | ( next_byte << ( i * 8 ) ) ));
					}
					
				}
				
			}
			
		}
		else
		{
			//line 157 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int _g11 = 0;
			//line 157 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( _g11 < size_nibbles ))
			{
				//line 157 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int i1 = _g11++;
				//line 158 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int next_nibble = decode.BitReader.BrotliReadBits(br, 4);
				//line 159 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ( ( ( i1 + 1 ) == size_nibbles ) && ( size_nibbles > 4 ) ) && ( next_nibble == 0 ) )) 
				{
					//line 160 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return false;
				}
				
				//line 162 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				{
					//line 162 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int __temp_index2 = 0;
					//line 162 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					meta_block_length.__set(__temp_index2, ( ((int) (haxe.lang.Runtime.toInt(meta_block_length.__get(__temp_index2))) ) | ( next_nibble << ( i1 * 4 ) ) ));
				}
				
			}
			
		}
		
		//line 165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		{
			//line 165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int __temp_arrIndex5 = 0;
			//line 165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int __temp_arrVal3 = ((int) (haxe.lang.Runtime.toInt(meta_block_length.__get(__temp_arrIndex5))) );
			//line 165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int __temp_arrRet4 =  ++ __temp_arrVal3;
			//line 165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			meta_block_length.__set(__temp_arrIndex5, __temp_arrVal3);
			//line 165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int __temp_expr1 = __temp_arrRet4;
		}
		
		//line 166 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ( ((int) (haxe.lang.Runtime.toInt(input_end.__get(0))) ) != 1 ) && ( ((int) (haxe.lang.Runtime.toInt(is_metadata.__get(0))) ) != 1 ) )) 
		{
			//line 167 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			is_uncompressed.__set(0, decode.BitReader.BrotliReadBits(br, 1));
		}
		
		//line 169 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return true;
	}
	
	
	public static int ReadSymbol(decode.huffman.HuffmanCode[] table, int table_off, decode.bit_reader.BrotliBitReader br)
	{
		//line 177 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int nbits = 0;
		//line 178 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.BitReader.BrotliFillBitWindow(br);
		//line 179 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		table_off = ( ((int) (table_off) ) + (((int) (( ((int) (( ((int) (br.val_) ) >>> ((int) (br.bit_pos_) ) )) ) & ((int) (255) ) )) )) );
		//line 180 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int a = ((decode.huffman.HuffmanCode) (((decode.huffman.HuffmanCode[]) (table) )[table_off]) ).bits;
		//line 180 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		boolean aNeg = ( ((int) (a) ) < 0 );
		//line 180 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( (( aNeg != false )) ? (aNeg) : (( ((int) (a) ) > ((int) (8) ) )) )) 
		{
			//line 181 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			br.bit_pos_ = ((int) (( ((int) (br.bit_pos_) ) + ((int) (8) ) )) );
			//line 182 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			nbits = ( ((int) (((decode.huffman.HuffmanCode) (((decode.huffman.HuffmanCode[]) (table) )[table_off]) ).bits) ) - ((int) (8) ) );
			//line 183 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			table_off = ( ((int) (table_off) ) + ((int) (((decode.huffman.HuffmanCode) (((decode.huffman.HuffmanCode[]) (table) )[table_off]) ).value) ) );
			//line 184 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			table_off = ( ((int) (table_off) ) + (((int) (( ((int) (( ((int) (br.val_) ) >>> ((int) (br.bit_pos_) ) )) ) & ((int) (( (( 1 << nbits )) - 1 )) ) )) )) );
		}
		
		//line 186 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		br.bit_pos_ = ((int) (( ((int) (br.bit_pos_) ) + ((int) (((decode.huffman.HuffmanCode) (((decode.huffman.HuffmanCode[]) (table) )[table_off]) ).bits) ) )) );
		//line 187 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ((decode.huffman.HuffmanCode) (((decode.huffman.HuffmanCode[]) (table) )[table_off]) ).value;
	}
	
	
	public static int ReadHuffmanCodeLengths(int[] code_length_code_lengths, int num_symbols, int[] code_lengths, decode.state.BrotliState s)
	{
		//line 195 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.bit_reader.BrotliBitReader br = s.br;
		//line 197 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int[]) (s.sub_state) )[1] == ((int) (60) ) )) 
		{
			//line 198 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.symbol = 0;
			//line 199 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.prev_code_len = 8;
			//line 200 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.repeat = 0;
			//line 201 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.repeat_code_len = 0;
			//line 202 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.space = 32768;
			//line 204 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( decode.Huffman.BrotliBuildHuffmanTable(s.table, 0, 5, code_length_code_lengths, 18) <= 1 )) 
			{
				//line 207 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, "[ReadHuffmanCodeLengths] Building code length tree failed: ", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
				//line 210 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (0) );
			}
			
			//line 212 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			((int[]) (s.sub_state) )[1] = ((int) (61) );
		}
		
		//line 215 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int[]) (s.sub_state) )[1] == ((int) (61) ) )) 
		{
			//line 216 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( ( s.symbol < num_symbols ) && ( s.space > 0 ) ))
			{
				//line 217 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.huffman.HuffmanCode[] p = s.table;
				//line 218 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int p_off = 0;
				//line 219 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int code_len = 0;
				//line 220 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
				{
					//line 221 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (2) );
				}
				
				//line 223 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.BitReader.BrotliFillBitWindow(br);
				//line 224 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				p_off = ( ((int) (0) ) + (((int) (( ((int) (( ((int) (br.val_) ) >>> ((int) (br.bit_pos_) ) )) ) & ((int) (31) ) )) )) );
				//line 225 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				br.bit_pos_ = ((int) (( ((int) (br.bit_pos_) ) + ((int) (((decode.huffman.HuffmanCode) (((decode.huffman.HuffmanCode[]) (p) )[p_off]) ).bits) ) )) );
				//line 226 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				code_len = ((decode.huffman.HuffmanCode) (((decode.huffman.HuffmanCode[]) (p) )[p_off]) ).value;
				//line 229 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (code_lengths) )[s.symbol] = code_len;
				//line 230 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				boolean bNeg = ( ((int) (code_len) ) < 0 );
				//line 230 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( (( false != bNeg )) ? (false) : (( ((int) (16) ) > ((int) (code_len) ) )) )) 
				{
					//line 231 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.repeat = 0;
					//line 232 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ((int) (code_len) ) != 0 )) 
					{
						//line 233 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.prev_code_len = code_len;
						//line 234 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.space -= ( 32768 >> code_len );
					}
					
					//line 236 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.symbol++;
				}
				else
				{
					//line 238 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int extra_bits = ((int) (( ((int) (code_len) ) - ((int) (14) ) )) );
					//line 239 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int old_repeat = 0;
					//line 240 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int repeat_delta = 0;
					//line 241 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int new_len = 0;
					//line 242 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ((int) (code_len) ) == 16 )) 
					{
						//line 243 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						new_len = s.prev_code_len;
					}
					
					//line 245 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ((int) (s.repeat_code_len) ) != new_len )) 
					{
						//line 246 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.repeat = 0;
						//line 247 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.repeat_code_len = new_len;
					}
					
					//line 249 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					old_repeat = s.repeat;
					//line 250 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( s.repeat > 0 )) 
					{
						//line 252 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.repeat = ( (s.repeat -= 2) << extra_bits );
					}
					
					//line 254 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.repeat = ((int) (( ((int) (s.repeat) ) + (((int) (( ((int) (decode.BitReader.BrotliReadBits(br, extra_bits)) ) + ((int) (3) ) )) )) )) );
					//line 255 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					repeat_delta = ( s.repeat - old_repeat );
					//line 256 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ( s.symbol + repeat_delta ) > num_symbols )) 
					{
						//line 257 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return ((int) (0) );
					}
					
					//line 260 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.DefaultFunctions.memset_UInt(code_lengths, s.symbol, s.repeat_code_len, repeat_delta);
					//line 262 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.symbol += repeat_delta;
					//line 263 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ((int) (s.repeat_code_len) ) != 0 )) 
					{
						//line 264 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.space -= ( repeat_delta << ((int) (( ((int) (15) ) - ((int) (s.repeat_code_len) ) )) ) );
					}
					
				}
				
			}
			
			//line 268 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.space != 0 )) 
			{
				//line 269 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "[ReadHuffmanCodeLengths] s.space = " + s.space ) + "\n" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
				//line 270 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (0) );
			}
			
			//line 273 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			haxe.root.DefaultFunctions.memset_UInt(code_lengths, s.symbol, 0, ( num_symbols - s.symbol ));
			//line 274 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			((int[]) (s.sub_state) )[1] = ((int) (50) );
			//line 275 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ((int) (1) );
		}
		
		//line 280 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ((int) (0) );
	}
	
	
	public static int ReadHuffmanCode(int alphabet_size, decode.huffman.HuffmanCode[] table, int table_off, haxe.root.Array<java.lang.Object> opt_table_size, decode.state.BrotliState s)
	{
		//line 289 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.bit_reader.BrotliBitReader br = s.br;
		//line 290 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int result = ((int) (1) );
		//line 291 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int table_size = 0;
		//line 293 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		while (true)
		{
			//line 295 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[1] == ((int) (50) ) )) 
			{
				//line 296 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
				{
					//line 297 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (2) );
				}
				
				//line 302 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int[] this1 = new int[alphabet_size];
				//line 302 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.code_lengths = ((int[]) (this1) );
				//line 303 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.code_lengths == null )) 
				{
					//line 304 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (0) );
				}
				
				//line 309 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.simple_code_or_skip = decode.BitReader.BrotliReadBits(br, 2);
				//line 311 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.simple_code_or_skip == 1 )) 
				{
					//line 314 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int max_bits_counter = ( alphabet_size - 1 );
					//line 315 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int max_bits = 0;
					//line 316 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.Array<java.lang.Object> symbols = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 0, 0, 0});
					//line 317 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int num_symbols = ( ((int) (decode.BitReader.BrotliReadBits(br, 2)) ) + ((int) (1) ) );
					//line 318 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( max_bits_counter > 0 ))
					{
						//line 319 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						max_bits_counter >>= 1;
						//line 320 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ max_bits;
					}
					
					//line 322 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.DefaultFunctions.memset_UInt(s.code_lengths, 0, 0, alphabet_size);
					//line 323 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					{
						//line 323 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int _g1 = 0;
						//line 323 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int _g = ((int) (num_symbols) );
						//line 323 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						while (( _g1 < _g ))
						{
							//line 323 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int i = _g1++;
							//line 324 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							symbols.__set(i, decode.BitReader.BrotliReadBits(br, max_bits));
							//line 325 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( ((int) (haxe.lang.Runtime.toInt(symbols.__get(i))) ) >= alphabet_size )) 
							{
								//line 326 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								return ((int) (0) );
							}
							
							//line 328 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							((int[]) (s.code_lengths) )[((int) (haxe.lang.Runtime.toInt(symbols.__get(i))) )] = 2;
						}
						
					}
					
					//line 330 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.code_lengths) )[((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) )] = 1;
					//line 331 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					switch (num_symbols)
					{
						case 1:
						{
							//line 332 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						
						case 2:
						{
							//line 340 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ) )) 
							{
								//line 341 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								return ((int) (0) );
							}
							
							//line 343 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							((int[]) (s.code_lengths) )[((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) )] = 1;
							//line 339 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						
						case 3:
						{
							//line 334 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( ( ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ) ) || ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) ) ) ) || ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) ) ) )) 
							{
								//line 337 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								return ((int) (0) );
							}
							
							//line 334 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						
						case 4:
						{
							//line 345 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( ( ( ( ( ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ) ) || ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) ) ) ) || ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(3))) ) ) ) || ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) ) ) ) || ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(1))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(3))) ) ) ) || ( ((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) ) == ((int) (haxe.lang.Runtime.toInt(symbols.__get(3))) ) ) )) 
							{
								//line 351 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								return ((int) (0) );
							}
							
							//line 353 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( ((int) (decode.BitReader.BrotliReadBits(br, 1)) ) == 1 )) 
							{
								//line 354 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								((int[]) (s.code_lengths) )[((int) (haxe.lang.Runtime.toInt(symbols.__get(2))) )] = 3;
								//line 355 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								((int[]) (s.code_lengths) )[((int) (haxe.lang.Runtime.toInt(symbols.__get(3))) )] = 3;
							}
							else
							{
								//line 357 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								((int[]) (s.code_lengths) )[((int) (haxe.lang.Runtime.toInt(symbols.__get(0))) )] = 2;
							}
							
							//line 344 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						
					}
					
					//line 361 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.sub_state) )[1] = ((int) (62) );
					//line 362 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				else
				{
					//line 365 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int space = 32;
					//line 366 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int num_codes = 0;
					//line 368 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.Array<decode.huffman.HuffmanCode> huff = new haxe.root.Array<decode.huffman.HuffmanCode>(new decode.huffman.HuffmanCode[]{new decode.huffman.HuffmanCode(2, 0), new decode.huffman.HuffmanCode(2, 4), new decode.huffman.HuffmanCode(2, 3), new decode.huffman.HuffmanCode(3, 2), new decode.huffman.HuffmanCode(2, 0), new decode.huffman.HuffmanCode(2, 4), new decode.huffman.HuffmanCode(2, 3), new decode.huffman.HuffmanCode(4, 1), new decode.huffman.HuffmanCode(2, 0), new decode.huffman.HuffmanCode(2, 4), new decode.huffman.HuffmanCode(2, 3), new decode.huffman.HuffmanCode(3, 2), new decode.huffman.HuffmanCode(2, 0), new decode.huffman.HuffmanCode(2, 4), new decode.huffman.HuffmanCode(2, 3), new decode.huffman.HuffmanCode(4, 5)});
					//line 372 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					{
						//line 372 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int _g2 = 0;
						//line 372 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						while (( _g2 < 18 ))
						{
							//line 372 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int i1 = _g2++;
							//line 373 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							((int[]) (s.code_length_code_lengths) )[i1] = 0;
						}
						
					}
					
					//line 375 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					{
						//line 375 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int _g3 = s.simple_code_or_skip;
						//line 375 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						while (( _g3 < 18 ))
						{
							//line 375 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int i2 = _g3++;
							//line 376 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( space <= 0 )) 
							{
								//line 376 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								break;
							}
							
							//line 377 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int code_len_idx = ((int) (haxe.lang.Runtime.toInt(decode.Decode.kCodeLengthCodeOrder.__get(i2))) );
							//line 379 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int p_off = 0;
							//line 380 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int v = 0;
							//line 381 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							decode.BitReader.BrotliFillBitWindow(br);
							//line 382 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							p_off = ( ((int) (0) ) + (((int) (( ((int) (( ((int) (br.val_) ) >>> ((int) (br.bit_pos_) ) )) ) & ((int) (15) ) )) )) );
							//line 383 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							br.bit_pos_ = ((int) (( ((int) (br.bit_pos_) ) + ((int) (huff.__get(p_off).bits) ) )) );
							//line 384 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							v = huff.__get(p_off).value;
							//line 385 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							((int[]) (s.code_length_code_lengths) )[code_len_idx] = v;
							//line 387 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( ((int) (v) ) != 0 )) 
							{
								//line 388 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								space -= ( 32 >> v );
								//line 389 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								 ++ num_codes;
							}
							
						}
						
					}
					
					//line 392 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if ( ! ((( ( num_codes == 1 ) || ( space == 0 ) ))) ) 
					{
						//line 393 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return ((int) (0) );
					}
					
					//line 395 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.sub_state) )[1] = ((int) (60) );
				}
				
			}
			
			//line 399 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ( ((int[]) (s.sub_state) )[1] == ((int) (60) ) ) || ( ((int[]) (s.sub_state) )[1] == ((int) (61) ) ) )) 
			{
				//line 400 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				result = decode.Decode.ReadHuffmanCodeLengths(s.code_length_code_lengths, alphabet_size, s.code_lengths, s);
				//line 402 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result != ((int) (1) ) )) 
				{
					//line 402 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return result;
				}
				
				//line 403 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[1] = ((int) (62) );
			}
			
			//line 406 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[1] == ((int) (62) ) )) 
			{
				//line 407 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				table_size = decode.Huffman.BrotliBuildHuffmanTable(table, table_off, 8, s.code_lengths, alphabet_size);
				//line 409 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( table_size == 0 )) 
				{
					//line 410 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, "[ReadHuffmanCode] BuildHuffmanTable failed: ", 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
					//line 412 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (0) );
				}
				
				//line 415 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.code_lengths = null;
				//line 416 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( opt_table_size != null )) 
				{
					//line 417 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					opt_table_size.__set(0, table_size);
				}
				
				//line 419 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[1] = ((int) (50) );
				//line 420 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return result;
			}
			
		}
		
	}
	
	
	public static int ReadBlockLength(decode.huffman.HuffmanCode[] table, int table_off, decode.bit_reader.BrotliBitReader br)
	{
		//line 434 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int code = 0;
		//line 435 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int nbits = 0;
		//line 436 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		code = decode.Decode.ReadSymbol(table, table_off, br);
		//line 437 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		nbits = decode.Prefix.kBlockLengthPrefixCode.__get(code).nbits;
		//line 438 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ( ((int) (decode.Prefix.kBlockLengthPrefixCode.__get(code).offset) ) + ((int) (decode.BitReader.BrotliReadBits(br, nbits)) ) );
	}
	
	
	public static int TranslateShortCodes(int code, int[] ringbuffer, int index)
	{
		//line 443 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int val = 0;
		//line 444 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( code < 16 )) 
		{
			//line 445 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			index += ((int) (haxe.lang.Runtime.toInt(decode.Decode.kDistanceShortCodeIndexOffset.__get(code))) );
			//line 446 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			index &= 3;
			//line 447 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			val = ( ((int) (((int[]) (ringbuffer) )[index]) ) + ((int) (haxe.lang.Runtime.toInt(decode.Decode.kDistanceShortCodeValueOffset.__get(code))) ) );
		}
		else
		{
			//line 449 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			val = ( ( code - 16 ) + 1 );
		}
		
		//line 451 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return val;
	}
	
	
	public static void InverseMoveToFrontTransform(int[] v, int v_len)
	{
		//line 456 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int[] this1 = new int[256];
		//line 456 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int[] mtf = ((int[]) (this1) );
		//line 458 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		{
			//line 458 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int _g = 0;
			//line 458 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( _g < 256 ))
			{
				//line 458 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int i = _g++;
				//line 459 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (mtf) )[i] = i;
			}
			
		}
		
		//line 461 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		{
			//line 461 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int _g1 = 0;
			//line 461 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( _g1 < v_len ))
			{
				//line 461 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int i1 = _g1++;
				//line 462 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int index = ((int) (((int[]) (v) )[i1]) );
				//line 463 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int value = ((int) (((int[]) (mtf) )[index]) );
				//line 464 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (v) )[i1] = value;
				//line 465 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				while (true)
				{
					//line 465 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					boolean aNeg = ( ((int) (index) ) < 0 );
					//line 465 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if ( ! ((( (( aNeg != false )) ? (aNeg) : (( ((int) (index) ) > ((int) (0) ) )) ))) ) 
					{
						//line 465 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						break;
					}
					
					//line 466 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (mtf) )[index] = ((int) (((int[]) (mtf) )[((int) (( ((int) (index) ) - ((int) (1) ) )) )]) );
					//line 467 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					 -- index;
				}
				
				//line 469 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (mtf) )[0] = value;
			}
			
		}
		
	}
	
	
	public static int HuffmanTreeGroupDecode(decode.huffman.HuffmanTreeGroup group, decode.state.BrotliState s)
	{
		//line 477 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int[]) (s.sub_state) )[0] == ((int) (50) ) )) 
		{
			//line 478 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.next = group.codes;
			//line 479 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.htree_index = 0;
			//line 480 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			((int[]) (s.sub_state) )[0] = ((int) (70) );
		}
		
		//line 483 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int[]) (s.sub_state) )[0] == ((int) (70) ) )) 
		{
			//line 484 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int next_off = 0;
			//line 485 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( s.htree_index < group.num_htrees ))
			{
				//line 486 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<java.lang.Object> table_size = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{});
				//line 488 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int result = decode.Decode.ReadHuffmanCode(group.alphabet_size, s.next, next_off, table_size, s);
				//line 490 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result != ((int) (1) ) )) 
				{
					//line 490 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return result;
				}
				
				//line 491 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				group.htrees.__set(s.htree_index, s.next);
				//line 492 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				group.htrees_off.__set(s.htree_index, next_off);
				//line 493 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				next_off += ((int) (haxe.lang.Runtime.toInt(table_size.__get(0))) );
				//line 494 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ((int) (haxe.lang.Runtime.toInt(table_size.__get(0))) ) == 0 )) 
				{
					//line 495 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (0) );
				}
				
				//line 497 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				 ++ s.htree_index;
			}
			
			//line 499 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			((int[]) (s.sub_state) )[0] = ((int) (50) );
			//line 500 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ((int) (1) );
		}
		
		//line 506 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ((int) (0) );
	}
	
	
	public static int DecodeContextMap(int context_map_size, haxe.root.Array<java.lang.Object> num_htrees, haxe.root.Array<int[]> context_map, decode.state.BrotliState s)
	{
		//line 515 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.bit_reader.BrotliBitReader br = s.br;
		//line 516 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int result = ((int) (1) );
		//line 517 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int use_rle_for_zeros = 0;
		//line 520 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int[]) (s.sub_state) )[0] == ((int) (50) ) )) 
		{
			//line 521 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
			{
				//line 522 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (2) );
			}
			
			//line 524 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			num_htrees.__set(0, ( decode.Decode.DecodeVarLenUint8(br) + 1 ));
			//line 526 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.context_index = 0;
			//line 531 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			context_map.__set(0, haxe.root.FunctionMalloc.mallocUInt(context_map_size));
			//line 532 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (context_map.__get(0)) ).length == 0 )) 
			{
				//line 533 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (0) );
			}
			
			//line 535 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int) (haxe.lang.Runtime.toInt(num_htrees.__get(0))) ) <= 1 )) 
			{
				//line 536 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.DefaultFunctions.memset_UInt(context_map.__get(0), 0, 0, context_map_size);
				//line 537 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (1) );
			}
			
			//line 540 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			use_rle_for_zeros = decode.BitReader.BrotliReadBits(br, 1);
			//line 541 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( use_rle_for_zeros == 1 )) 
			{
				//line 542 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.max_run_length_prefix = ((int) (( ((int) (decode.BitReader.BrotliReadBits(br, 4)) ) + ((int) (1) ) )) );
			}
			else
			{
				//line 544 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.max_run_length_prefix = 0;
			}
			
			//line 546 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.context_map_table = haxe.root.FunctionMalloc.malloc2_decode_huffman_HuffmanCode(decode.huffman.HuffmanCode.class, 1080);
			//line 548 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.context_map_table == null )) 
			{
				//line 549 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (0) );
			}
			
			//line 551 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			((int[]) (s.sub_state) )[0] = ((int) (80) );
		}
		
		//line 554 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int[]) (s.sub_state) )[0] == ((int) (80) ) )) 
		{
			//line 555 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			result = decode.Decode.ReadHuffmanCode(( ((int) (haxe.lang.Runtime.toInt(num_htrees.__get(0))) ) + s.max_run_length_prefix ), s.context_map_table, 0, null, s);
			//line 557 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( result != ((int) (1) ) )) 
			{
				//line 557 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return result;
			}
			
			//line 558 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			((int[]) (s.sub_state) )[0] = ((int) (81) );
		}
		
		//line 561 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( ((int[]) (s.sub_state) )[0] == ((int) (81) ) )) 
		{
			//line 562 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( s.context_index < context_map_size ))
			{
				//line 563 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int code = 0;
				//line 564 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
				{
					//line 565 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (2) );
				}
				
				//line 567 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				code = decode.Decode.ReadSymbol(s.context_map_table, 0, br);
				//line 568 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( code == 0 )) 
				{
					//line 569 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (context_map.__get(0)) )[s.context_index] = 0;
					//line 570 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					 ++ s.context_index;
				}
				else
				{
					//line 571 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( code <= s.max_run_length_prefix )) 
					{
						//line 572 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int reps = ( ((int) (( 1 + (( 1 << code )) )) ) + ((int) (decode.BitReader.BrotliReadBits(br, code)) ) );
						//line 573 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						while ((  -- reps > 0 ))
						{
							//line 574 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( s.context_index >= context_map_size )) 
							{
								//line 575 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								return ((int) (0) );
							}
							
							//line 577 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							((int[]) (context_map.__get(0)) )[s.context_index] = 0;
							//line 578 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							 ++ s.context_index;
						}
						
					}
					else
					{
						//line 581 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (context_map.__get(0)) )[s.context_index] = ((int) (( code - s.max_run_length_prefix )) );
						//line 583 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ s.context_index;
					}
					
				}
				
			}
			
			//line 586 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int) (decode.BitReader.BrotliReadBits(br, 1)) ) == 1 )) 
			{
				//line 587 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.Decode.InverseMoveToFrontTransform(context_map.__get(0), context_map_size);
			}
			
			//line 590 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			s.context_map_table = null;
			//line 591 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			((int[]) (s.sub_state) )[0] = ((int) (50) );
			//line 592 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ((int) (1) );
		}
		
		//line 598 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ((int) (0) );
	}
	
	
	public static void DecodeBlockType(int max_block_type, decode.huffman.HuffmanCode[] trees, int tree_type, int[] block_types, int[] ringbuffers, int[] indexes, decode.bit_reader.BrotliBitReader br)
	{
		//line 609 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int ringbuffer_off = ( tree_type * 2 );
		//line 612 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int type_code = decode.Decode.ReadSymbol(trees, ( tree_type * 1080 ), br);
		//line 614 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int block_type = 0;
		//line 615 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( type_code == 0 )) 
		{
			//line 616 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			block_type = ((int) (((int[]) (ringbuffers) )[( ringbuffer_off + (( ((int) (((int[]) (indexes) )[tree_type]) ) & 1 )) )]) );
		}
		else
		{
			//line 617 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( type_code == 1 )) 
			{
				//line 618 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				block_type = ( ((int) (((int[]) (ringbuffers) )[( ringbuffer_off + (( ( ((int) (((int[]) (indexes) )[tree_type]) ) - 1 ) & 1 )) )]) ) + 1 );
			}
			else
			{
				//line 620 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				block_type = ( type_code - 2 );
			}
			
		}
		
		//line 622 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( block_type >= max_block_type )) 
		{
			//line 623 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			block_type -= max_block_type;
		}
		
		//line 625 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		((int[]) (block_types) )[tree_type] = block_type;
		//line 626 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		((int[]) (ringbuffers) )[( ringbuffer_off + (( ((int) (((int[]) (indexes) )[tree_type]) ) & 1 )) )] = block_type;
		//line 627 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		((int[]) (indexes) )[tree_type] = ( ((int) (((int[]) (indexes) )[tree_type]) ) + 1 );
	}
	
	
	public static void DecodeBlockTypeWithContext(decode.state.BrotliState s, decode.bit_reader.BrotliBitReader br)
	{
		//line 635 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.DecodeBlockType(((int[]) (s.num_block_types) )[0], s.block_type_trees, 0, s.block_type, s.block_type_rb, s.block_type_rb_index, br);
		//line 639 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		((int[]) (s.block_length) )[0] = decode.Decode.ReadBlockLength(s.block_len_trees, 0, br);
		//line 640 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.context_offset = ( ((int[]) (s.block_type) )[0] << 6 );
		//line 641 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.context_map_slice = s.context_map;
		//line 642 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.context_map_slice_off = ( s.context_map_off + s.context_offset );
		//line 643 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.literal_htree_index = ((int[]) (s.context_map_slice) )[s.context_map_slice_off];
		//line 644 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.context_mode = ((int[]) (s.context_modes) )[((int[]) (s.block_type) )[0]];
		//line 645 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.context_lookup_offset1 = ((int) (haxe.lang.Runtime.toInt(decode.Context.kContextLookupOffsets.__get(s.context_mode))) );
		//line 646 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.context_lookup_offset2 = ((int) (haxe.lang.Runtime.toInt(decode.Context.kContextLookupOffsets.__get(((int) (( ((int) (s.context_mode) ) + ((int) (1) ) )) )))) );
	}
	
	
	public static int CopyUncompressedBlockToOutput(decode.streams.BrotliOutput output, int pos, decode.state.BrotliState s)
	{
		//line 653 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int rb_size = ( s.ringbuffer_mask + 1 );
		//line 654 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int[] ringbuffer_end = s.ringbuffer;
		//line 655 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int ringbuffer_end_off = ( s.ringbuffer_off + rb_size );
		//line 656 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int rb_pos = ( pos & s.ringbuffer_mask );
		//line 657 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int br_pos = ( ((int) (s.br.pos_) ) & ((int) (8191) ) );
		//line 658 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int remaining_bits = 0;
		//line 659 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int num_read = 0;
		//line 660 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int num_written = 0;
		//line 663 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		while (true)
		{
			//line 665 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (50) ) )) 
			{
				//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				boolean tmp = false;
				//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.meta_block_remaining_len >= 8 )) 
				{
					//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int a = ( ((int) (s.br.bit_pos_) ) + (((int) (( s.meta_block_remaining_len << 3 )) )) );
					//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int b = s.br.bit_end_pos_;
					//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					boolean aNeg = ( ((int) (b) ) < 0 );
					//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					boolean bNeg = ( ((int) (a) ) < 0 );
					//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( aNeg != bNeg )) 
					{
						//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						tmp = aNeg;
					}
					else
					{
						//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						tmp = ( ((int) (b) ) > ((int) (a) ) );
					}
					
				}
				else
				{
					//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					tmp = true;
				}
				
				//line 667 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (tmp) 
				{
					//line 669 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.sub_state) )[0] = ((int) (51) );
					//line 670 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 672 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int a1 = s.br.bit_end_pos_;
				//line 672 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				boolean bNeg1 = ( ((int) (a1) ) < 0 );
				//line 672 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( (( false != bNeg1 )) ? (false) : (( ((int) (64) ) > ((int) (a1) ) )) )) 
				{
					//line 673 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (0) );
				}
				
				//line 679 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				remaining_bits = 32;
				//line 680 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				while (true)
				{
					//line 680 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int a2 = s.br.bit_pos_;
					//line 680 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					boolean bNeg2 = ( ((int) (a2) ) < 0 );
					//line 680 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if ( ! ((( (( false != bNeg2 )) ? (false) : (( ((int) (remaining_bits) ) > ((int) (a2) ) )) ))) ) 
					{
						//line 680 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						break;
					}
					
					//line 681 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.ringbuffer) )[( s.ringbuffer_off + rb_pos )] = ((int) (( ((int) (( ((int) (s.br.val_) ) >>> ((int) (s.br.bit_pos_) ) )) ) & ((int) (255) ) )) );
					//line 682 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.br.bit_pos_ = ((int) (( ((int) (s.br.bit_pos_) ) + ((int) (8) ) )) );
					//line 683 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					 ++ rb_pos;
					//line 684 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					 -- s.meta_block_remaining_len;
				}
				
				//line 688 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.nbytes = ((int) (( ((int) (( ((int) (s.br.bit_end_pos_) ) - ((int) (s.br.bit_pos_) ) )) ) >>> 3 )) );
				//line 689 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ( br_pos + s.nbytes ) > 8191 )) 
				{
					//line 690 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int tail = ( 8192 - br_pos );
					//line 692 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.DefaultFunctions.memcpy_UInt(s.ringbuffer, ( s.ringbuffer_off + rb_pos ), s.br.buf_, ( s.br.buf_off + br_pos ), tail);
					//line 693 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.nbytes -= tail;
					//line 694 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					rb_pos += tail;
					//line 695 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.meta_block_remaining_len -= tail;
					//line 696 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					br_pos = 0;
				}
				
				//line 699 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.DefaultFunctions.memcpy_UInt(s.ringbuffer, ( s.ringbuffer_off + rb_pos ), s.br.buf_, ( s.br.buf_off + br_pos ), s.nbytes);
				//line 700 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				rb_pos += s.nbytes;
				//line 701 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.meta_block_remaining_len -= s.nbytes;
				//line 703 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.partially_written = 0;
				//line 704 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[0] = ((int) (55) );
			}
			
			//line 707 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (55) ) )) 
			{
				//line 711 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( rb_pos >= rb_size )) 
				{
					//line 712 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, ( s.ringbuffer_off + s.partially_written ), ( rb_size - s.partially_written ));
					//line 715 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( num_written < 0 )) 
					{
						//line 716 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return ((int) (0) );
					}
					
					//line 718 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.partially_written += num_written;
					//line 719 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( s.partially_written < rb_size )) 
					{
						//line 720 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return ((int) (3) );
					}
					
					//line 722 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					rb_pos -= rb_size;
					//line 723 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.meta_block_remaining_len += rb_size;
					//line 724 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.DefaultFunctions.memcpy_UInt(s.ringbuffer, s.ringbuffer_off, ringbuffer_end, ringbuffer_end_off, rb_pos);
				}
				
				//line 726 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[0] = ((int) (52) );
				//line 727 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 729 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (51) ) )) 
			{
				//line 730 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				while (( s.meta_block_remaining_len > 0 ))
				{
					//line 731 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if ( ! (decode.BitReader.BrotliReadMoreInput(s.br)) ) 
					{
						//line 732 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return ((int) (2) );
					}
					
					//line 734 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.ringbuffer) )[rb_pos++] = decode.BitReader.BrotliReadBits(s.br, 8);
					//line 735 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( rb_pos == rb_size )) 
					{
						//line 736 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.partially_written = 0;
						//line 737 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (s.sub_state) )[0] = ((int) (56) );
						//line 738 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						break;
					}
					
					//line 740 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.meta_block_remaining_len--;
				}
				
				//line 742 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ((int[]) (s.sub_state) )[0] == ((int) (51) ) )) 
				{
					//line 743 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.sub_state) )[0] = ((int) (50) );
					//line 744 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (1) );
				}
				
				//line 746 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[0] = ((int) (56) );
			}
			
			//line 749 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (56) ) )) 
			{
				//line 750 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, ( s.ringbuffer_off + s.partially_written ), ( rb_size - s.partially_written ));
				//line 752 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( num_written < 0 )) 
				{
					//line 753 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (0) );
				}
				
				//line 755 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.partially_written += num_written;
				//line 756 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.partially_written < rb_size )) 
				{
					//line 757 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (3) );
				}
				
				//line 759 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				rb_pos = 0;
				//line 760 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.meta_block_remaining_len--;
				//line 761 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[0] = ((int) (51) );
				//line 762 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 764 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (52) ) )) 
			{
				//line 768 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ( rb_pos + s.meta_block_remaining_len ) >= rb_size )) 
				{
					//line 769 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.nbytes = ( rb_size - rb_pos );
					//line 771 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( decode.Streams.BrotliRead(s.br.input_, s.ringbuffer, ( s.ringbuffer_off + rb_pos ), s.nbytes) < s.nbytes )) 
					{
						//line 773 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return ((int) (2) );
					}
					
					//line 775 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.partially_written = 0;
					//line 776 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.sub_state) )[0] = ((int) (57) );
				}
				else
				{
					//line 778 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.sub_state) )[0] = ((int) (53) );
					//line 779 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
			}
			
			//line 783 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (57) ) )) 
			{
				//line 784 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, ( s.ringbuffer_off + s.partially_written ), ( rb_size - s.partially_written ));
				//line 786 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( num_written < 0 )) 
				{
					//line 787 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (0) );
				}
				
				//line 789 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.partially_written += num_written;
				//line 790 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.partially_written < rb_size )) 
				{
					//line 791 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (3) );
				}
				
				//line 793 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.meta_block_remaining_len -= s.nbytes;
				//line 794 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				rb_pos = 0;
				//line 795 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[0] = ((int) (52) );
				//line 796 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 798 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (53) ) )) 
			{
				//line 802 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				num_read = decode.Streams.BrotliRead(s.br.input_, s.ringbuffer, ( s.ringbuffer_off + rb_pos ), s.meta_block_remaining_len);
				//line 804 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.meta_block_remaining_len -= num_read;
				//line 805 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.meta_block_remaining_len > 0 )) 
				{
					//line 806 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (2) );
				}
				
				//line 810 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.BitReader.BrotliInitBitReader(s.br, s.br.input_, s.br.finish_);
				//line 811 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[0] = ((int) (54) );
			}
			
			//line 814 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ((int[]) (s.sub_state) )[0] == ((int) (54) ) )) 
			{
				//line 815 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliWarmupBitReader(s.br)) ) 
				{
					//line 816 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					return ((int) (2) );
				}
				
				//line 818 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.sub_state) )[0] = ((int) (50) );
				//line 819 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (1) );
			}
			
		}
		
	}
	
	
	public static int BrotliDecompressedSize(int encoded_size, int[] encoded_buffer, int encoded_buffer_off, haxe.root.Array<java.lang.Object> decoded_size)
	{
		//line 836 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int val = 0;
		//line 837 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int bit_pos = 0;
		//line 838 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int is_last = 0;
		//line 839 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int is_uncompressed = 0;
		//line 840 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int size_nibbles = 0;
		//line 841 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int meta_block_len = 0;
		//line 842 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( encoded_size == 0 )) 
		{
			//line 843 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ((int) (0) );
		}
		
		//line 847 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		{
			//line 847 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int _g = 0;
			//line 847 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( _g < 4 ))
			{
				//line 847 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int i = _g++;
				//line 848 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( i >= encoded_size )) 
				{
					//line 848 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					break;
				}
				
				//line 849 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				val = ((int) (( ((int) (val) ) | ((int) (( ((int) (((int[]) (encoded_buffer) )[i]) ) << ( 8 * i ) )) ) )) );
			}
			
		}
		
		//line 852 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		bit_pos = 1;
		//line 853 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( (((int) (( ((int) (val) ) & ((int) (1) ) )) )) == 1 )) 
		{
			//line 854 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			bit_pos = 4;
			//line 855 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( (((int) (( ((int) (( ((int) (val) ) >>> 1 )) ) & ((int) (7) ) )) )) == 0 )) 
			{
				//line 856 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				bit_pos = 7;
			}
			
		}
		
		//line 860 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		is_last = ((int) (( ((int) (( ((int) (val) ) >>> bit_pos )) ) & ((int) (1) ) )) );
		//line 861 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		 ++ bit_pos;
		//line 862 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( is_last == 1 )) 
		{
			//line 864 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( (((int) (( ((int) (( ((int) (val) ) >>> bit_pos )) ) & ((int) (1) ) )) )) == 1 )) 
			{
				//line 865 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decoded_size.__set(0, 0);
				//line 866 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (1) );
			}
			
			//line 868 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			 ++ bit_pos;
		}
		
		//line 871 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		size_nibbles = ((int) (( (((int) (( ((int) (( ((int) (val) ) >>> bit_pos )) ) & ((int) (3) ) )) )) + ((int) (4) ) )) );
		//line 872 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( size_nibbles == 7 )) 
		{
			//line 874 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ((int) (0) );
		}
		
		//line 876 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		bit_pos += 2;
		//line 877 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		{
			//line 877 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int _g1 = 0;
			//line 877 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			while (( _g1 < size_nibbles ))
			{
				//line 877 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				int i1 = _g1++;
				//line 878 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				meta_block_len = ((int) (( ((int) (meta_block_len) ) | ((int) (( (((int) (( ((int) (( ((int) (val) ) >>> bit_pos )) ) & ((int) (15) ) )) )) << ( 4 * i1 ) )) ) )) );
				//line 879 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				bit_pos += 4;
			}
			
		}
		
		//line 881 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		 ++ meta_block_len;
		//line 882 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( is_last == 1 )) 
		{
			//line 884 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			decoded_size.__set(0, meta_block_len);
			//line 885 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			return ((int) (1) );
		}
		
		//line 887 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		is_uncompressed = ((int) (( ((int) (( ((int) (val) ) >>> bit_pos )) ) & ((int) (1) ) )) );
		//line 888 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		 ++ bit_pos;
		//line 889 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		if (( is_uncompressed == 1 )) 
		{
			//line 895 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			int offset = ( (( ( bit_pos + 7 ) >> 3 )) + meta_block_len );
			//line 896 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ( offset < encoded_size ) && ( (((int) (( ((int) (((int[]) (encoded_buffer) )[offset]) ) & ((int) (3) ) )) )) == 3 ) )) 
			{
				//line 897 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decoded_size.__set(0, meta_block_len);
				//line 898 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return ((int) (1) );
			}
			
		}
		
		//line 901 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return ((int) (0) );
	}
	
	
	public static int BrotliDecompressStreaming(decode.streams.BrotliInput input, decode.streams.BrotliOutput output, int finish, decode.state.BrotliState s)
	{
		//line 908 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int context = 0;
		//line 909 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int pos = s.pos;
		//line 910 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int i = s.loop_counter;
		//line 911 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int result = ((int) (1) );
		//line 912 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.bit_reader.BrotliBitReader br = s.br;
		//line 913 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int initial_remaining_len = 0;
		//line 914 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int bytes_copied = 0;
		//line 915 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		int num_written = 0;
		//line 923 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.br.input_ = input;
		//line 924 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.br.finish_ = finish;
		//line 927 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		while (true)
		{
			//line 929 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( result != ((int) (1) ) )) 
			{
				//line 930 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ( result == ((int) (2) ) ) && ( finish == 1 ) )) 
				{
					//line 931 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.Log.trace.__hx_invoke2_o(0.0, ( ( "Unexpected end of input. State: " + s.state ) + "\n" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
					//line 932 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
				}
				
				//line 934 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				break;
			}
			
			//line 938 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (0) ) )) 
			{
				//line 939 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				pos = 0;
				//line 940 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.input_end = 0;
				//line 941 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.window_bits = 0;
				//line 942 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.max_distance = 0;
				//line 943 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.dist_rb) )[0] = 16;
				//line 944 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.dist_rb) )[1] = 15;
				//line 945 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.dist_rb) )[2] = 11;
				//line 946 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.dist_rb) )[3] = 4;
				//line 947 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_rb_idx = 0;
				//line 948 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.prev_byte1 = 0;
				//line 949 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.prev_byte2 = 0;
				//line 950 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.block_type_trees = null;
				//line 951 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.block_len_trees = null;
				//line 953 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.BitReader.BrotliInitBitReader(br, input, finish);
				//line 955 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (1) );
			}
			
			//line 958 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (1) ) )) 
			{
				//line 959 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliWarmupBitReader(br)) ) 
				{
					//line 960 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (2) );
					//line 961 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 964 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.window_bits = decode.Decode.DecodeWindowBits(br);
				//line 965 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.window_bits == 9 )) 
				{
					//line 967 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
					//line 968 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 970 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.max_backward_distance = ( (( 1 << s.window_bits )) - 16 );
				//line 972 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.block_type_trees = haxe.root.FunctionMalloc.malloc2_decode_huffman_HuffmanCode(decode.huffman.HuffmanCode.class, 3240);
				//line 974 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.block_len_trees = haxe.root.FunctionMalloc.malloc2_decode_huffman_HuffmanCode(decode.huffman.HuffmanCode.class, 3240);
				//line 976 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ( s.block_type_trees == null ) || ( s.block_len_trees == null ) )) 
				{
					//line 977 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
					//line 978 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 981 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (10) );
			}
			
			//line 984 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (10) ) )) 
			{
				//line 985 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.input_end != 0 )) 
				{
					//line 986 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.partially_written = 0;
					//line 987 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (100) );
					//line 988 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 990 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.meta_block_remaining_len = 0;
				//line 991 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_length) )[0] = 268435456;
				//line 992 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_length) )[1] = 268435456;
				//line 993 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_length) )[2] = 268435456;
				//line 994 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type) )[0] = 0;
				//line 995 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.num_block_types) )[0] = 1;
				//line 996 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.num_block_types) )[1] = 1;
				//line 997 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.num_block_types) )[2] = 1;
				//line 998 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb) )[0] = 0;
				//line 999 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb) )[1] = 1;
				//line 1000 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb) )[2] = 0;
				//line 1001 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb) )[3] = 1;
				//line 1002 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb) )[4] = 0;
				//line 1003 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb) )[5] = 1;
				//line 1004 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb_index) )[0] = 0;
				//line 1005 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_map = null;
				//line 1006 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_modes = null;
				//line 1007 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_context_map = null;
				//line 1008 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_offset = 0;
				//line 1009 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_map_slice = null;
				//line 1010 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_map_slice_off = 0;
				//line 1011 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.literal_htree_index = 0;
				//line 1012 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_context_offset = 0;
				//line 1013 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_context_map_slice = null;
				//line 1014 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_context_map_slice_off = 0;
				//line 1015 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_htree_index = 0;
				//line 1016 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_lookup_offset1 = 0;
				//line 1017 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_lookup_offset2 = 0;
				//line 1018 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				{
					//line 1018 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int _g = 0;
					//line 1018 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( _g < 3 ))
					{
						//line 1018 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int i1 = _g++;
						//line 1019 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[i1].codes = null;
						//line 1020 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[i1].htrees = null;
					}
					
				}
				
				//line 1022 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (11) );
			}
			
			//line 1025 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (11) ) )) 
			{
				//line 1026 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
				{
					//line 1027 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (2) );
					//line 1028 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1031 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<java.lang.Object> meta_block_remaining_len = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{s.meta_block_remaining_len});
				//line 1032 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<java.lang.Object> input_end = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{s.input_end});
				//line 1033 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<java.lang.Object> is_metadata = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{s.is_metadata});
				//line 1034 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<java.lang.Object> is_uncompressed = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{s.is_uncompressed});
				//line 1035 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.Decode.DecodeMetaBlockLength(br, meta_block_remaining_len, input_end, is_metadata, is_uncompressed)) ) 
				{
					//line 1040 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
					//line 1041 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1043 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.meta_block_remaining_len = ((int) (haxe.lang.Runtime.toInt(meta_block_remaining_len.__get(0))) );
				//line 1044 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.input_end = ((int) (haxe.lang.Runtime.toInt(input_end.__get(0))) );
				//line 1045 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.is_metadata = ((int) (haxe.lang.Runtime.toInt(is_metadata.__get(0))) );
				//line 1046 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.is_uncompressed = ((int) (haxe.lang.Runtime.toInt(is_uncompressed.__get(0))) );
				//line 1049 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.ringbuffer == null )) 
				{
					//line 1050 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.Array<java.lang.Object> known_size = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0});
					//line 1051 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.ringbuffer_size = ( 1 << s.window_bits );
					//line 1057 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( decode.Decode.BrotliDecompressedSize(4096, br.buf_, br.buf_off, known_size) == ((int) (1) ) )) 
					{
						//line 1059 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						while (( ( s.ringbuffer_size >= ( ((int) (haxe.lang.Runtime.toInt(known_size.__get(0))) ) * 2 ) ) && ( s.ringbuffer_size > 1 ) ))
						{
							//line 1061 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.ringbuffer_size = ((int) (( s.ringbuffer_size / 2 )) );
						}
						
					}
					
					//line 1066 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( s.ringbuffer_size < s.custom_dict_size ))
					{
						//line 1067 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.ringbuffer_size *= 2;
					}
					
					//line 1070 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.ringbuffer_mask = ( s.ringbuffer_size - 1 );
					//line 1077 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int[] this1 = new int[( ( s.ringbuffer_size + 4224 ) + 24 )];
					//line 1077 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.ringbuffer = ((int[]) (this1) );
					//line 1080 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.ringbuffer_off = 0;
					//line 1081 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ((int[]) (s.ringbuffer) ).length == 0 )) 
					{
						//line 1082 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						result = ((int) (0) );
						//line 1083 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
					//line 1085 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.ringbuffer_end = s.ringbuffer;
					//line 1086 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.ringbuffer_end_off = ( s.ringbuffer_off + s.ringbuffer_size );
					//line 1088 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( s.custom_dict_off != -1 )) 
					{
						//line 1089 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						haxe.root.DefaultFunctions.memcpy_UInt(s.ringbuffer, ( s.ringbuffer_off + ((  - (s.custom_dict_size)  & s.ringbuffer_mask )) ), s.custom_dict, s.custom_dict_off, s.custom_dict_size);
						//line 1091 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( s.custom_dict_size > 0 )) 
						{
							//line 1092 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.prev_byte1 = ((int[]) (s.custom_dict) )[( s.custom_dict_size - 1 )];
						}
						
						//line 1094 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( s.custom_dict_size > 1 )) 
						{
							//line 1095 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.prev_byte2 = ((int[]) (s.custom_dict) )[( s.custom_dict_size - 2 )];
						}
						
					}
					
				}
				
				//line 1100 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.is_metadata == 1 )) 
				{
					//line 1101 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if ( ! (decode.Decode.JumpToByteBoundary(s.br)) ) 
					{
						//line 1102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						result = ((int) (0) );
						//line 1103 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
					//line 1105 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (18) );
					//line 1106 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1108 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.meta_block_remaining_len == 0 )) 
				{
					//line 1109 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (20) );
					//line 1110 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1112 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.is_uncompressed == 1 )) 
				{
					//line 1113 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if ( ! (decode.Decode.JumpToByteBoundary(s.br)) ) 
					{
						//line 1114 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						result = ((int) (0) );
						//line 1115 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
					//line 1117 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (17) );
					//line 1118 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1120 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				i = 0;
				//line 1121 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (30) );
				//line 1122 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 1124 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (17) ) )) 
			{
				//line 1125 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				initial_remaining_len = s.meta_block_remaining_len;
				//line 1127 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				result = decode.Decode.CopyUncompressedBlockToOutput(output, pos, s);
				//line 1128 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result == ((int) (3) ) )) 
				{
					//line 1129 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1131 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				bytes_copied = ( initial_remaining_len - s.meta_block_remaining_len );
				//line 1132 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				pos += bytes_copied;
				//line 1133 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( bytes_copied > 0 )) 
				{
					//line 1134 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.prev_byte2 = ( (( bytes_copied == 1 )) ? (s.prev_byte1) : (((int[]) (s.ringbuffer) )[( ( pos - 2 ) & s.ringbuffer_mask )]) );
					//line 1136 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.prev_byte1 = ((int[]) (s.ringbuffer) )[( ( pos - 1 ) & s.ringbuffer_mask )];
				}
				
				//line 1138 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result != ((int) (1) ) )) 
				{
					//line 1138 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1139 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (20) );
				//line 1140 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 1142 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (18) ) )) 
			{
				//line 1143 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				while (( s.meta_block_remaining_len > 0 ))
				{
					//line 1144 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if ( ! (decode.BitReader.BrotliReadMoreInput(s.br)) ) 
					{
						//line 1145 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						result = ((int) (2) );
						//line 1146 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
					//line 1149 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					decode.BitReader.BrotliReadBits(s.br, 8);
					//line 1150 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					 -- s.meta_block_remaining_len;
				}
				
				//line 1152 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (20) );
				//line 1153 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 1155 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (30) ) )) 
			{
				//line 1156 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( i >= 3 )) 
				{
					//line 1164 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (12) );
					//line 1165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1167 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.num_block_types) )[i] = ( decode.Decode.DecodeVarLenUint8(br) + 1 );
				//line 1168 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (31) );
			}
			
			//line 1171 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (31) ) )) 
			{
				//line 1172 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ((int[]) (s.num_block_types) )[i] >= 2 )) 
				{
					//line 1173 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = decode.Decode.ReadHuffmanCode(( ((int[]) (s.num_block_types) )[i] + 2 ), s.block_type_trees, ( i * 1080 ), null, s);
					//line 1176 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( result != ((int) (1) ) )) 
					{
						//line 1176 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
					//line 1177 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (32) );
				}
				else
				{
					//line 1179 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					 ++ i;
					//line 1180 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (30) );
					//line 1181 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
			}
			
			//line 1185 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (32) ) )) 
			{
				//line 1186 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				result = decode.Decode.ReadHuffmanCode(26, s.block_len_trees, ( i * 1080 ), null, s);
				//line 1189 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result != ((int) (1) ) )) 
				{
					//line 1189 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					break;
				}
				
				//line 1190 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_length) )[i] = decode.Decode.ReadBlockLength(s.block_len_trees, ( i * 1080 ), br);
				//line 1192 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_type_rb_index) )[i] = 1;
				//line 1193 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				 ++ i;
				//line 1194 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (30) );
				//line 1195 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 1197 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (12) ) )) 
			{
				//line 1199 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadInputAmount(br, 128)) ) 
				{
					//line 1200 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (2) );
					//line 1201 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1203 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.distance_postfix_bits = decode.BitReader.BrotliReadBits(br, 2);
				//line 1204 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.num_direct_distance_codes = ((int) (( ((int) (16) ) + (((int) (( ((int) (decode.BitReader.BrotliReadBits(br, 4)) ) << s.distance_postfix_bits )) )) )) );
				//line 1206 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.distance_postfix_mask = ( (( 1 << s.distance_postfix_bits )) - 1 );
				//line 1207 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.num_distance_codes = ( s.num_direct_distance_codes + (( 48 << s.distance_postfix_bits )) );
				//line 1209 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_modes = haxe.root.FunctionMalloc.mallocUInt(((int[]) (s.num_block_types) )[0]);
				//line 1210 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ((int[]) (s.context_modes) ).length == 0 )) 
				{
					//line 1211 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
					//line 1212 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1214 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				{
					//line 1214 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int _g1 = 0;
					//line 1214 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int _g2 = ((int[]) (s.num_block_types) )[0];
					//line 1214 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( _g1 < _g2 ))
					{
						//line 1214 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int i2 = _g1++;
						//line 1215 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (s.context_modes) )[i2] = ((int) (( ((int) (decode.BitReader.BrotliReadBits(br, 2)) ) << 1 )) );
					}
					
				}
				
				//line 1220 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (33) );
			}
			
			//line 1223 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (33) ) )) 
			{
				//line 1224 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<java.lang.Object> num_literal_htrees = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{s.num_literal_htrees});
				//line 1224 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<int[]> context_map = new haxe.root.Array<int[]>(new int[][]{s.context_map});
				//line 1225 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				result = decode.Decode.DecodeContextMap(( ((int[]) (s.num_block_types) )[0] << 6 ), num_literal_htrees, context_map, s);
				//line 1227 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.num_literal_htrees = ((int) (haxe.lang.Runtime.toInt(num_literal_htrees.__get(0))) );
				//line 1227 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_map = context_map.__get(0);
				//line 1227 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.context_map_off = 0;
				//line 1229 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.trivial_literal_context = 1;
				//line 1230 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				{
					//line 1230 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int _g11 = 0;
					//line 1230 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int _g3 = ( ((int[]) (s.num_block_types) )[0] << 6 );
					//line 1230 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( _g11 < _g3 ))
					{
						//line 1230 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int i3 = _g11++;
						//line 1231 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( ((int) (((int[]) (s.context_map) )[i3]) ) != ( i3 >> 6 ) )) 
						{
							//line 1232 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.trivial_literal_context = 0;
							//line 1233 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							continue;
						}
						
					}
					
				}
				
				//line 1237 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result != ((int) (1) ) )) 
				{
					//line 1237 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1238 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (34) );
			}
			
			//line 1241 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (34) ) )) 
			{
				//line 1242 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<java.lang.Object> num_dist_htrees = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{s.num_dist_htrees});
				//line 1242 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				haxe.root.Array<int[]> dist_context_map = new haxe.root.Array<int[]>(new int[][]{s.dist_context_map});
				//line 1243 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				result = decode.Decode.DecodeContextMap(( ((int[]) (s.num_block_types) )[2] << 2 ), num_dist_htrees, dist_context_map, s);
				//line 1245 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.num_dist_htrees = ((int) (haxe.lang.Runtime.toInt(num_dist_htrees.__get(0))) );
				//line 1245 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_context_map = dist_context_map.__get(0);
				//line 1245 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_context_map_off = 0;
				//line 1246 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result != ((int) (1) ) )) 
				{
					//line 1246 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1248 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.Huffman.BrotliHuffmanTreeGroupInit(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[0], 256, s.num_literal_htrees);
				//line 1250 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.Huffman.BrotliHuffmanTreeGroupInit(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[1], 704, ((int[]) (s.num_block_types) )[1]);
				//line 1252 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				decode.Huffman.BrotliHuffmanTreeGroupInit(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[2], s.num_distance_codes, s.num_dist_htrees);
				//line 1254 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				i = 0;
				//line 1255 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (35) );
			}
			
			//line 1258 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (35) ) )) 
			{
				//line 1259 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				result = decode.Decode.HuffmanTreeGroupDecode(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[i], s);
				//line 1260 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( result != ((int) (1) ) )) 
				{
					//line 1260 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1261 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				 ++ i;
				//line 1263 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( i >= 3 )) 
				{
					//line 1264 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.context_map_slice = s.context_map;
					//line 1265 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.context_map_slice_off = s.context_map_off;
					//line 1266 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.dist_context_map_slice = s.dist_context_map;
					//line 1267 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.dist_context_map_slice_off = s.dist_context_map_off;
					//line 1268 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.context_mode = ((int[]) (s.context_modes) )[((int[]) (s.block_type) )[0]];
					//line 1269 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.context_lookup_offset1 = ((int) (haxe.lang.Runtime.toInt(decode.Context.kContextLookupOffsets.__get(s.context_mode))) );
					//line 1270 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.context_lookup_offset2 = ((int) (haxe.lang.Runtime.toInt(decode.Context.kContextLookupOffsets.__get(((int) (( ((int) (s.context_mode) ) + ((int) (1) ) )) )))) );
					//line 1272 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.htree_command = ((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[1].htrees.__get(0);
					//line 1273 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.htree_command_off = ((int) (haxe.lang.Runtime.toInt(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[1].htrees_off.__get(0))) );
					//line 1275 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (13) );
					//line 1276 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1279 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 1281 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (13) ) )) 
			{
				//line 1284 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
				{
					//line 1285 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (2) );
					//line 1286 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1288 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.meta_block_remaining_len <= 0 )) 
				{
					//line 1290 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					pos &= 1073741823;
					//line 1293 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (20) );
					//line 1294 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1297 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ((int[]) (s.block_length) )[1] == 0 )) 
				{
					//line 1298 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					decode.Decode.DecodeBlockType(((int[]) (s.num_block_types) )[1], s.block_type_trees, 1, s.block_type, s.block_type_rb, s.block_type_rb_index, br);
					//line 1302 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.block_length) )[1] = decode.Decode.ReadBlockLength(s.block_len_trees, 1080, br);
					//line 1305 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.htree_command = ((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[1].htrees.__get(((int[]) (s.block_type) )[1]);
					//line 1306 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.htree_command_off = ((int) (haxe.lang.Runtime.toInt(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[1].htrees_off.__get(((int[]) (s.block_type) )[1]))) );
				}
				
				//line 1308 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_length) )[1] -= 1;
				//line 1309 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.cmd_code = decode.Decode.ReadSymbol(s.htree_command, s.htree_command_off, br);
				//line 1310 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.range_idx = ( s.cmd_code >> 6 );
				//line 1311 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.range_idx >= 2 )) 
				{
					//line 1312 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.range_idx -= 2;
					//line 1313 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.distance_code = -1;
				}
				else
				{
					//line 1315 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.distance_code = 0;
				}
				
				//line 1317 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.insert_code = ( ((int) (haxe.lang.Runtime.toInt(decode.Prefix.kInsertRangeLut.__get(s.range_idx))) ) + (( ( s.cmd_code >> 3 ) & 7 )) );
				//line 1319 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.copy_code = ( ((int) (haxe.lang.Runtime.toInt(decode.Prefix.kCopyRangeLut.__get(s.range_idx))) ) + (( s.cmd_code & 7 )) );
				//line 1320 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.insert_length = ((int) (( ((int) (decode.Prefix.kInsertLengthPrefixCode.__get(s.insert_code).offset) ) + ((int) (decode.BitReader.BrotliReadBits(br, decode.Prefix.kInsertLengthPrefixCode.__get(s.insert_code).nbits)) ) )) );
				//line 1323 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.copy_length = ((int) (( ((int) (decode.Prefix.kCopyLengthPrefixCode.__get(s.copy_code).offset) ) + ((int) (decode.BitReader.BrotliReadBits(br, decode.Prefix.kCopyLengthPrefixCode.__get(s.copy_code).nbits)) ) )) );
				//line 1329 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				i = 0;
				//line 1330 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (14) );
			}
			
			//line 1333 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (14) ) )) 
			{
				//line 1334 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.trivial_literal_context == 1 )) 
				{
					//line 1335 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( i < s.insert_length ))
					{
						//line 1336 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
						{
							//line 1337 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							result = ((int) (2) );
							//line 1338 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						//line 1340 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( ((int[]) (s.block_length) )[0] == 0 )) 
						{
							//line 1341 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							decode.Decode.DecodeBlockTypeWithContext(s, br);
						}
						
						//line 1344 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (s.ringbuffer) )[( pos & s.ringbuffer_mask )] = ((int) (decode.Decode.ReadSymbol(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[0].htrees.__get(s.literal_htree_index), ((int) (haxe.lang.Runtime.toInt(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[0].htrees_off.__get(s.literal_htree_index))) ), br)) );
						//line 1347 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (s.block_length) )[0] -= 1;
						//line 1350 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( (( pos & s.ringbuffer_mask )) == s.ringbuffer_mask )) 
						{
							//line 1351 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.partially_written = 0;
							//line 1352 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.state = ((int) (19) );
							//line 1353 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						//line 1357 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ pos;
						//line 1358 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ i;
					}
					
				}
				else
				{
					//line 1361 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int p1 = s.prev_byte1;
					//line 1362 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int p2 = s.prev_byte2;
					//line 1363 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( i < s.insert_length ))
					{
						//line 1364 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
						{
							//line 1365 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							result = ((int) (2) );
							//line 1366 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						//line 1368 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( ((int[]) (s.block_length) )[0] == 0 )) 
						{
							//line 1369 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							decode.Decode.DecodeBlockTypeWithContext(s, br);
						}
						
						//line 1373 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						context = ( ((int) (haxe.lang.Runtime.toInt(decode.Context.kContextLookup.__get(((int) (( ((int) (s.context_lookup_offset1) ) + ((int) (p1) ) )) )))) ) | ((int) (haxe.lang.Runtime.toInt(decode.Context.kContextLookup.__get(((int) (( ((int) (s.context_lookup_offset2) ) + ((int) (p2) ) )) )))) ) );
						//line 1376 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.literal_htree_index = ((int[]) (s.context_map_slice) )[( ((int) (s.context_map_slice_off) ) + ((int) (context) ) )];
						//line 1377 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (s.block_length) )[0] -= 1;
						//line 1378 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						p2 = p1;
						//line 1379 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						p1 = decode.Decode.ReadSymbol(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[0].htrees.__get(s.literal_htree_index), ((int) (haxe.lang.Runtime.toInt(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[0].htrees_off.__get(s.literal_htree_index))) ), br);
						//line 1381 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (s.ringbuffer) )[( pos & s.ringbuffer_mask )] = p1;
						//line 1384 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( (( pos & s.ringbuffer_mask )) == s.ringbuffer_mask )) 
						{
							//line 1385 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.partially_written = 0;
							//line 1386 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.state = ((int) (19) );
							//line 1387 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							break;
						}
						
						//line 1391 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ pos;
						//line 1392 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ i;
					}
					
					//line 1394 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.prev_byte1 = p1;
					//line 1395 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.prev_byte2 = p2;
				}
				
				//line 1397 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ( result != ((int) (1) ) ) || ( s.state == ((int) (19) ) ) )) 
				{
					//line 1398 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1400 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.meta_block_remaining_len -= s.insert_length;
				//line 1401 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.meta_block_remaining_len <= 0 )) 
				{
					//line 1402 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (20) );
					//line 1403 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				else
				{
					//line 1404 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( s.distance_code < 0 )) 
					{
						//line 1405 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.state = ((int) (15) );
					}
					else
					{
						//line 1407 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.state = ((int) (16) );
						//line 1408 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
				}
				
			}
			
			//line 1412 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (15) ) )) 
			{
				//line 1413 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
				{
					//line 1414 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (2) );
					//line 1415 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1419 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ((int[]) (s.block_length) )[2] == 0 )) 
				{
					//line 1420 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					decode.Decode.DecodeBlockType(((int[]) (s.num_block_types) )[2], s.block_type_trees, 2, s.block_type, s.block_type_rb, s.block_type_rb_index, br);
					//line 1424 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					((int[]) (s.block_length) )[2] = decode.Decode.ReadBlockLength(s.block_len_trees, 2160, br);
					//line 1427 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.dist_context_offset = ( ((int[]) (s.block_type) )[2] << 2 );
					//line 1428 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.dist_context_map_slice = s.dist_context_map;
					//line 1430 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.dist_context_map_slice_off = ( s.dist_context_map_off + s.dist_context_offset );
				}
				
				//line 1433 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				((int[]) (s.block_length) )[2] -= 1;
				//line 1434 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.copy_length > 4 )) 
				{
					//line 1434 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					context = 3;
				}
				else
				{
					//line 1434 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					context = ( s.copy_length - 2 );
				}
				
				//line 1435 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.dist_htree_index = ((int[]) (s.dist_context_map_slice) )[( ((int) (s.dist_context_map_slice_off) ) + ((int) (context) ) )];
				//line 1436 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.distance_code = decode.Decode.ReadSymbol(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[2].htrees.__get(s.dist_htree_index), ((int) (haxe.lang.Runtime.toInt(((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[2].htrees_off.__get(s.dist_htree_index))) ), br);
				//line 1438 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.distance_code >= s.num_direct_distance_codes )) 
				{
					//line 1439 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int nbits = 0;
					//line 1440 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int postfix = 0;
					//line 1441 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int offset = 0;
					//line 1442 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.distance_code -= s.num_direct_distance_codes;
					//line 1443 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					postfix = ( s.distance_code & s.distance_postfix_mask );
					//line 1444 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.distance_code >>= s.distance_postfix_bits;
					//line 1445 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					nbits = ( (( s.distance_code >> 1 )) + 1 );
					//line 1446 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					offset = ( (( ( 2 + (( s.distance_code & 1 )) ) << nbits )) - 4 );
					//line 1447 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.distance_code = ((int) (( ((int) (( ((int) (s.num_direct_distance_codes) ) + (((int) (( ((int) (( ((int) (offset) ) + ((int) (decode.BitReader.BrotliReadBits(br, nbits)) ) )) ) << s.distance_postfix_bits )) )) )) ) + ((int) (postfix) ) )) );
				}
				
				//line 1451 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (16) );
			}
			
			//line 1454 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (16) ) )) 
			{
				//line 1455 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
				{
					//line 1456 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (2) );
					//line 1457 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1461 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.distance = decode.Decode.TranslateShortCodes(s.distance_code, s.dist_rb, s.dist_rb_idx);
				//line 1463 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.distance < 0 )) 
				{
					//line 1464 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
					//line 1465 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1469 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ( ( pos + s.custom_dict_size ) < s.max_backward_distance ) && ( s.max_distance != s.max_backward_distance ) )) 
				{
					//line 1471 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.max_distance = ( pos + s.custom_dict_size );
				}
				else
				{
					//line 1473 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.max_distance = s.max_backward_distance;
				}
				
				//line 1476 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.copy_dst = s.ringbuffer;
				//line 1477 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.copy_dst_off = ( s.ringbuffer_off + (( pos & s.ringbuffer_mask )) );
				//line 1479 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.distance > s.max_distance )) 
				{
					//line 1480 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( ( s.copy_length >= 4 ) && ( s.copy_length <= 24 ) )) 
					{
						//line 1482 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int offset1 = ((int) (haxe.lang.Runtime.toInt(decode.Dictionary.kBrotliDictionaryOffsetsByLength.__get(s.copy_length))) );
						//line 1483 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int word_id = ( ( s.distance - s.max_distance ) - 1 );
						//line 1484 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int shift = ((int) (haxe.lang.Runtime.toInt(decode.Dictionary.kBrotliDictionarySizeBitsByLength.__get(s.copy_length))) );
						//line 1485 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int mask = ( (( 1 << shift )) - 1 );
						//line 1486 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int word_idx = ( word_id & mask );
						//line 1487 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int transform_idx = ( word_id >> shift );
						//line 1488 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						offset1 += ( word_idx * s.copy_length );
						//line 1489 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( transform_idx < decode.Transforms.kNumTransforms )) 
						{
							//line 1490 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int[] word = decode.Dictionary.kBrotliDictionary;
							//line 1491 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int word_off = offset1;
							//line 1492 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							int len = decode.Transforms.TransformDictionaryWord(s.copy_dst, s.copy_dst_off, word, word_off, s.copy_length, transform_idx);
							//line 1494 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.copy_dst_off += len;
							//line 1495 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							pos += len;
							//line 1496 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							s.meta_block_remaining_len -= len;
							//line 1497 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( s.copy_dst_off >= s.ringbuffer_end_off )) 
							{
								//line 1498 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								s.partially_written = 0;
								//line 1499 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, s.ringbuffer_off, s.ringbuffer_size);
								//line 1501 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								if (( num_written < 0 )) 
								{
									//line 1502 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									result = ((int) (0) );
									//line 1503 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									continue;
								}
								
								//line 1505 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								s.partially_written += num_written;
								//line 1506 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								if (( s.partially_written < s.ringbuffer_size )) 
								{
									//line 1507 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									result = ((int) (3) );
									//line 1508 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									s.state = ((int) (21) );
									//line 1509 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									continue;
								}
								
								//line 1513 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								haxe.root.DefaultFunctions.memcpy_UInt(s.ringbuffer, s.ringbuffer_off, s.ringbuffer_end, s.ringbuffer_end_off, ( s.copy_dst_off - s.ringbuffer_end_off ));
							}
							
						}
						else
						{
							//line 1517 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							haxe.Log.trace.__hx_invoke2_o(0.0, ( ( ( ( ( ( ( ( ( "Invalid backward reference. pos: " + pos ) + " distance: " ) + s.distance ) + " " ) + "len: " ) + s.copy_length ) + " bytes left: " ) + s.meta_block_remaining_len ) + "\n" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
							//line 1520 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							result = ((int) (0) );
							//line 1521 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							continue;
						}
						
					}
					else
					{
						//line 1524 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						haxe.Log.trace.__hx_invoke2_o(0.0, ( ( ( ( ( ( ( ( ( "Invalid backward reference. pos: " + pos ) + " distance: " ) + s.distance ) + " " ) + "len: " ) + s.copy_length ) + " bytes left: " ) + s.meta_block_remaining_len ) + "\n" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
						//line 1527 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						result = ((int) (0) );
						//line 1528 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
				}
				else
				{
					//line 1531 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( s.distance_code > 0 )) 
					{
						//line 1532 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((int[]) (s.dist_rb) )[( s.dist_rb_idx & 3 )] = s.distance;
						//line 1533 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ s.dist_rb_idx;
					}
					
					//line 1536 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( s.copy_length > s.meta_block_remaining_len )) 
					{
						//line 1537 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						haxe.Log.trace.__hx_invoke2_o(0.0, ( ( ( ( ( ( ( ( ( "Invalid backward reference. pos: " + pos ) + " distance: " ) + s.distance ) + " " ) + "len: " ) + s.copy_length ) + " bytes left: " ) + s.meta_block_remaining_len ) + "\n" ), 0.0, new haxe.lang.DynamicObject(new java.lang.String[]{"className", "fileName", "methodName"}, new java.lang.Object[]{"decode.Decode", "Decode.hx", "BROTLI_LOG"}, new java.lang.String[]{"lineNumber"}, new double[]{((double) (((double) (55) )) )}));
						//line 1540 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						result = ((int) (0) );
						//line 1541 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
					//line 1544 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.copy_src = s.ringbuffer;
					//line 1546 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.copy_src_off = ( s.ringbuffer_off + (( ( pos - s.distance ) & s.ringbuffer_mask )) );
					//line 1552 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					{
						//line 1552 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int _g12 = 0;
						//line 1552 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int _g4 = s.copy_length;
						//line 1552 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						while (( _g12 < _g4 ))
						{
							//line 1552 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							 ++ _g12;
							//line 1553 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							((int[]) (s.ringbuffer) )[( pos & s.ringbuffer_mask )] = ((int[]) (s.ringbuffer) )[( ( pos - s.distance ) & s.ringbuffer_mask )];
							//line 1555 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( (( pos & s.ringbuffer_mask )) == s.ringbuffer_mask )) 
							{
								//line 1556 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								s.partially_written = 0;
								//line 1557 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, s.ringbuffer_off, s.ringbuffer_size);
								//line 1559 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								if (( num_written < 0 )) 
								{
									//line 1560 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									result = ((int) (0) );
									//line 1561 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									continue;
								}
								
								//line 1563 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								s.partially_written += num_written;
								//line 1564 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								if (( s.partially_written < s.ringbuffer_size )) 
								{
									//line 1565 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									result = ((int) (3) );
									//line 1566 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									s.state = ((int) (22) );
									//line 1567 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									continue;
								}
								
							}
							
							//line 1570 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							 ++ pos;
							//line 1571 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							 -- s.meta_block_remaining_len;
						}
						
					}
					
					//line 1573 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( result == ((int) (3) ) )) 
					{
						//line 1574 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						continue;
					}
					
				}
				
				//line 1577 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (23) );
			}
			
			//line 1580 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (23) ) )) 
			{
				//line 1584 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.prev_byte1 = ((int[]) (s.ringbuffer) )[( ( pos - 1 ) & s.ringbuffer_mask )];
				//line 1585 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.prev_byte2 = ((int[]) (s.ringbuffer) )[( ( pos - 2 ) & s.ringbuffer_mask )];
				//line 1586 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (13) );
			}
			
			//line 1589 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( ( ( s.state == ((int) (19) ) ) || ( s.state == ((int) (21) ) ) ) || ( s.state == ((int) (22) ) ) )) 
			{
				//line 1592 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, ( s.ringbuffer_off + s.partially_written ), ( s.ringbuffer_size - s.partially_written ));
				//line 1595 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( num_written < 0 )) 
				{
					//line 1596 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
					//line 1597 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1599 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.partially_written += num_written;
				//line 1600 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.partially_written < s.ringbuffer_size )) 
				{
					//line 1601 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (3) );
					//line 1602 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					continue;
				}
				
				//line 1604 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.state == ((int) (21) ) )) 
				{
					//line 1605 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					haxe.root.DefaultFunctions.memcpy_UInt(s.ringbuffer, s.ringbuffer_off, s.ringbuffer_end, s.ringbuffer_end_off, ( s.copy_dst_off - s.ringbuffer_end_off ));
					//line 1607 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.state = ((int) (23) );
				}
				else
				{
					//line 1608 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( s.state == ((int) (22) ) )) 
					{
						//line 1610 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ pos;
						//line 1611 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 -- s.meta_block_remaining_len;
						//line 1612 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ i;
						//line 1614 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						while (( i < s.copy_length ))
						{
							//line 1615 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							((int[]) (s.ringbuffer) )[( pos & s.ringbuffer_mask )] = ((int[]) (s.ringbuffer) )[( ( pos - s.distance ) & s.ringbuffer_mask )];
							//line 1617 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							if (( (( pos & s.ringbuffer_mask )) == s.ringbuffer_mask )) 
							{
								//line 1618 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								s.partially_written = 0;
								//line 1619 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, s.ringbuffer_off, s.ringbuffer_size);
								//line 1621 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								if (( num_written < 0 )) 
								{
									//line 1622 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									result = ((int) (0) );
									//line 1623 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									continue;
								}
								
								//line 1625 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								s.partially_written += num_written;
								//line 1626 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
								if (( s.partially_written < s.ringbuffer_size )) 
								{
									//line 1627 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									result = ((int) (3) );
									//line 1628 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
									continue;
								}
								
							}
							
							//line 1631 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							 ++ pos;
							//line 1632 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							 -- s.meta_block_remaining_len;
							//line 1633 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							 ++ i;
						}
						
						//line 1635 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						if (( result == ((int) (3) ) )) 
						{
							//line 1636 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
							continue;
						}
						
						//line 1638 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.state = ((int) (23) );
					}
					else
					{
						//line 1641 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ pos;
						//line 1642 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						 ++ i;
						//line 1643 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						s.state = ((int) (14) );
					}
					
				}
				
				//line 1645 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 1647 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (20) ) )) 
			{
				//line 1648 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.context_modes != null )) 
				{
					//line 1650 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.context_modes = null;
				}
				
				//line 1652 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.context_map != null )) 
				{
					//line 1654 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.context_map = null;
				}
				
				//line 1656 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( s.dist_context_map != null )) 
				{
					//line 1658 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					s.dist_context_map = null;
				}
				
				//line 1660 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				{
					//line 1660 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					int _g5 = 0;
					//line 1660 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					while (( _g5 < 3 ))
					{
						//line 1660 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						int i4 = _g5++;
						//line 1662 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[i4].codes = null;
						//line 1663 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						((decode.huffman.HuffmanTreeGroup[]) (s.hgroup) )[i4].htrees = null;
					}
					
				}
				
				//line 1665 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				s.state = ((int) (10) );
				//line 1666 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				continue;
			}
			
			//line 1668 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
			if (( s.state == ((int) (100) ) )) 
			{
				//line 1669 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if (( ((int[]) (s.ringbuffer) ).length != 0 )) 
				{
					//line 1670 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					num_written = decode.Streams.BrotliWrite(output, s.ringbuffer, ( s.ringbuffer_off + s.partially_written ), ( (( pos & s.ringbuffer_mask )) - s.partially_written ));
					//line 1673 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( num_written < 0 )) 
					{
						//line 1674 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						return ((int) (0) );
					}
					
					//line 1677 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					if (( (s.partially_written += num_written) < (( pos & s.ringbuffer_mask )) )) 
					{
						//line 1678 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						result = ((int) (3) );
						//line 1679 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
						break;
					}
					
				}
				
				//line 1682 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				if ( ! (decode.Decode.JumpToByteBoundary(s.br)) ) 
				{
					//line 1683 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
					result = ((int) (0) );
				}
				
				//line 1685 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
				return result;
			}
			
		}
		
		//line 1693 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.pos = pos;
		//line 1694 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		s.loop_counter = i;
		//line 1695 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return result;
	}
	
	
	public static int BrotliDecompress(decode.streams.BrotliInput input, decode.streams.BrotliOutput output)
	{
		//line 1700 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.state.BrotliState s = new decode.state.BrotliState();
		//line 1702 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.State.BrotliStateInit(s);
		//line 1703 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		decode.Decode.BrotliDecompressStreaming(input, output, 1, s);
		//line 1704 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Decode.hx"
		return 1;
	}
	
	
}


