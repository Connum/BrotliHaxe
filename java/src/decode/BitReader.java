// Generated by Haxe 3.4.0
package decode;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class BitReader extends haxe.lang.HxObject
{
	static
	{
		//line 16 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		decode.BitReader.BROTLI_MAX_NUM_BIT_READ = 25;
		//line 17 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		decode.BitReader.BROTLI_READ_SIZE = 4096;
		//line 18 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		decode.BitReader.BROTLI_IBUF_SIZE = 8320;
		//line 20 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		decode.BitReader.BROTLI_IBUF_MASK = 8191;
		//line 22 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		decode.BitReader.kBitMask = new haxe.root.Array<java.lang.Object>(new java.lang.Object[]{0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215});
	}
	
	public BitReader(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public BitReader()
	{
		//line 187 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		decode.BitReader.__hx_ctor_decode_BitReader(this);
	}
	
	
	public static void __hx_ctor_decode_BitReader(decode.BitReader __hx_this)
	{
	}
	
	
	public static int BROTLI_MAX_NUM_BIT_READ;
	
	public static int BROTLI_READ_SIZE;
	
	public static int BROTLI_IBUF_SIZE;
	
	public static int BROTLI_IBUF_MASK;
	
	public static haxe.root.Array<java.lang.Object> kBitMask;
	
	public static int BitMask(int n)
	{
		//line 26 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		return ((int) (haxe.lang.Runtime.toInt(decode.BitReader.kBitMask.__get(n))) );
	}
	
	
	public static void ShiftBytes32(decode.bit_reader.BrotliBitReader br)
	{
		//line 33 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		while (true)
		{
			//line 33 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			int a = br.bit_pos_;
			//line 33 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			boolean aNeg = ( ((int) (a) ) < 0 );
			//line 33 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			if ( ! ((( (( aNeg != false )) ? (aNeg) : (( ((int) (a) ) >= ((int) (8) ) )) ))) ) 
			{
				//line 33 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				break;
			}
			
			//line 34 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			br.val_ = ((int) (( ((int) (br.val_) ) >>> 8 )) );
			//line 35 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			br.val_ = ((int) (( ((int) (br.val_) ) | ((int) (( ((int) (((int[]) (br.buf_) )[( ((int) (br.pos_) ) & ((int) (8191) ) )]) ) * ((int) (((int) (java.lang.Math.pow(((double) (2) ), ((double) (24) ))) )) ) )) ) )) );
			//line 36 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			 ++ br.pos_;
			//line 37 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			br.bit_pos_ = ((int) (( ((int) (br.bit_pos_) ) - ((int) (8) ) )) );
			//line 38 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			br.bit_end_pos_ = ((int) (( ((int) (br.bit_end_pos_) ) - ((int) (8) ) )) );
		}
		
	}
	
	
	public static boolean BrotliReadMoreInput(decode.bit_reader.BrotliBitReader br)
	{
		//line 58 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		int a = br.bit_end_pos_;
		//line 58 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		boolean aNeg = ( ((int) (a) ) < 0 );
		//line 58 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		if (( (( aNeg != false )) ? (aNeg) : (( ((int) (a) ) > ((int) (256) ) )) )) 
		{
			//line 59 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			return true;
		}
		else
		{
			//line 60 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			if (( br.eos_ > 0 )) 
			{
				//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int a1 = br.bit_pos_;
				//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int b = br.bit_end_pos_;
				//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				boolean aNeg1 = ( ((int) (b) ) < 0 );
				//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				boolean bNeg = ( ((int) (a1) ) < 0 );
				//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( aNeg1 != bNeg )) 
				{
					//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					return aNeg1;
				}
				else
				{
					//line 61 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					return ( ((int) (b) ) >= ((int) (a1) ) );
				}
				
			}
			else
			{
				//line 63 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int[] dst = br.buf_ptr_;
				//line 64 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int dst_off = br.buf_ptr_off;
				//line 65 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int bytes_read = decode.Streams.BrotliRead(br.input_, dst, ( dst_off + br.tmp_bytes_read_ ), ( 4096 - br.tmp_bytes_read_ ));
				//line 67 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( bytes_read < 0 )) 
				{
					//line 68 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					return false;
				}
				
				//line 70 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				bytes_read += br.tmp_bytes_read_;
				//line 71 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				br.tmp_bytes_read_ = 0;
				//line 72 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( bytes_read < 4096 )) 
				{
					//line 73 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					if (( br.finish_ <= 0 )) 
					{
						//line 74 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
						br.tmp_bytes_read_ = bytes_read;
						//line 75 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
						return false;
					}
					
					//line 77 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.eos_ = 1;
					//line 79 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					haxe.root.DefaultFunctions.memset_UInt(dst, ( dst_off + bytes_read ), 0, 32);
				}
				
				//line 81 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( dst_off == br.buf_off )) 
				{
					//line 83 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					haxe.root.DefaultFunctions.memcpy_UInt(br.buf_, ( br.buf_off + 8192 ), br.buf_, br.buf_off, 32);
					//line 84 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_ = br.buf_;
					//line 85 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_off = ( br.buf_off + 4096 );
				}
				else
				{
					//line 87 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_ = br.buf_;
					//line 88 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_off = br.buf_off;
				}
				
				//line 90 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				br.bit_end_pos_ = ((int) (( ((int) (br.bit_end_pos_) ) + (((int) (( bytes_read << 3 )) )) )) );
				//line 91 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				return true;
			}
			
		}
		
	}
	
	
	public static boolean BrotliReadInputAmount(decode.bit_reader.BrotliBitReader br, int num)
	{
		//line 99 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		int a = br.bit_end_pos_;
		//line 99 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		int b = ( num << 3 );
		//line 99 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		boolean aNeg = ( ((int) (a) ) < 0 );
		//line 99 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		boolean bNeg = ( ((int) (b) ) < 0 );
		//line 99 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		if (( (( aNeg != bNeg )) ? (aNeg) : (( ((int) (a) ) > ((int) (b) ) )) )) 
		{
			//line 100 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			return true;
		}
		else
		{
			//line 101 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			if (( br.eos_ > 0 )) 
			{
				//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int a1 = br.bit_pos_;
				//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int b1 = br.bit_end_pos_;
				//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				boolean aNeg1 = ( ((int) (b1) ) < 0 );
				//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				boolean bNeg1 = ( ((int) (a1) ) < 0 );
				//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( aNeg1 != bNeg1 )) 
				{
					//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					return aNeg1;
				}
				else
				{
					//line 102 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					return ( ((int) (b1) ) >= ((int) (a1) ) );
				}
				
			}
			else
			{
				//line 104 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int[] dst = br.buf_ptr_;
				//line 105 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int dst_off = br.buf_ptr_off;
				//line 106 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int bytes_read = decode.Streams.BrotliRead(br.input_, dst, ( dst_off + br.tmp_bytes_read_ ), ( 4096 - br.tmp_bytes_read_ ));
				//line 108 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( bytes_read < 0 )) 
				{
					//line 109 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					return false;
				}
				
				//line 111 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				bytes_read += br.tmp_bytes_read_;
				//line 112 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				br.tmp_bytes_read_ = 0;
				//line 113 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( bytes_read < 4096 )) 
				{
					//line 114 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					if (( br.finish_ <= 0 )) 
					{
						//line 115 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
						br.tmp_bytes_read_ = bytes_read;
						//line 116 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
						return false;
					}
					
					//line 118 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.eos_ = 1;
					//line 120 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					haxe.root.DefaultFunctions.memset_UInt(dst, ( dst_off + bytes_read ), 0, num);
				}
				
				//line 122 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				if (( dst_off == br.buf_off )) 
				{
					//line 124 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					haxe.root.DefaultFunctions.memcpy_UInt(br.buf_, ( br.buf_off + 8192 ), br.buf_, br.buf_off, num);
					//line 125 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_ = br.buf_;
					//line 126 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_off = ( br.buf_off + 4096 );
				}
				else
				{
					//line 128 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_ = br.buf_;
					//line 129 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
					br.buf_ptr_off = br.buf_off;
				}
				
				//line 131 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				br.bit_end_pos_ = ((int) (( ((int) (br.bit_end_pos_) ) + (((int) (( bytes_read << 3 )) )) )) );
				//line 132 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				return true;
			}
			
		}
		
	}
	
	
	public static void BrotliFillBitWindow(decode.bit_reader.BrotliBitReader br)
	{
		//line 138 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		decode.BitReader.ShiftBytes32(br);
	}
	
	
	public static void BrotliInitBitReader(decode.bit_reader.BrotliBitReader br, decode.streams.BrotliInput input, int finish)
	{
		//line 145 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.finish_ = finish;
		//line 146 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.tmp_bytes_read_ = 0;
		//line 148 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.buf_ptr_ = br.buf_;
		//line 149 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.buf_ptr_off = br.buf_off;
		//line 150 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.input_ = input;
		//line 151 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.val_ = 0;
		//line 152 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.pos_ = 0;
		//line 153 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.bit_pos_ = 0;
		//line 154 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.bit_end_pos_ = 0;
		//line 155 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.eos_ = 0;
	}
	
	
	public static boolean BrotliWarmupBitReader(decode.bit_reader.BrotliBitReader br)
	{
		//line 160 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		if ( ! (decode.BitReader.BrotliReadMoreInput(br)) ) 
		{
			//line 161 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			return false;
		}
		
		//line 163 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		{
			//line 163 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			int _g = 0;
			//line 163 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			while (( _g < 4 ))
			{
				//line 163 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				int i = _g++;
				//line 164 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				br.val_ = ((int) (( ((int) (br.val_) ) | ((int) (( ((int) (((int[]) (br.buf_) )[((int) (br.pos_) )]) ) << ( 8 * i ) )) ) )) );
				//line 165 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
				 ++ br.pos_;
			}
			
		}
		
		//line 167 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		int a = br.bit_end_pos_;
		//line 167 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		boolean aNeg = ( ((int) (a) ) < 0 );
		//line 167 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		if (( aNeg != false )) 
		{
			//line 167 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			return aNeg;
		}
		else
		{
			//line 167 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			return ( ((int) (a) ) > ((int) (0) ) );
		}
		
	}
	
	
	public static int BrotliReadBits(decode.bit_reader.BrotliBitReader br, int n_bits)
	{
		//line 173 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		int val = 0;
		//line 178 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		int a = ( ((int) (32) ) - ((int) (br.bit_pos_) ) );
		//line 178 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		boolean aNeg = ( ((int) (n_bits) ) < 0 );
		//line 178 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		boolean bNeg = ( ((int) (a) ) < 0 );
		//line 178 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		if (( (( aNeg != bNeg )) ? (aNeg) : (( ((int) (n_bits) ) > ((int) (a) ) )) )) 
		{
			//line 179 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
			decode.BitReader.BrotliFillBitWindow(br);
		}
		
		//line 181 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		val = ( ((int) (( ((int) (br.val_) ) >>> ((int) (br.bit_pos_) ) )) ) & ((int) (decode.BitReader.BitMask(n_bits)) ) );
		//line 183 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		br.bit_pos_ = ((int) (( ((int) (br.bit_pos_) ) + ((int) (n_bits) ) )) );
		//line 184 "C:\\Users\\Dominik\\Brotli\\src\\decode\\BitReader.hx"
		return val;
	}
	
	
}


