// Generated by Haxe 3.4.0
package decode;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class Streams extends haxe.lang.HxObject
{
	public Streams(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public Streams()
	{
		//line 112 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		decode.Streams.__hx_ctor_decode_Streams(this);
	}
	
	
	public static void __hx_ctor_decode_Streams(decode.Streams __hx_this)
	{
	}
	
	
	public static int BrotliRead(decode.streams.BrotliInput input, int[] buf, int buf_off, int len)
	{
		//line 25 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return ((int) (haxe.lang.Runtime.toInt(((java.lang.Object) (((haxe.lang.Function) (input.cb_) ).__hx_invoke4_o(0.0, input.data_, 0.0, buf, ((double) (buf_off) ), haxe.lang.Runtime.undefined, ((double) (len) ), haxe.lang.Runtime.undefined)) ))) );
	}
	
	
	public static int BrotliWrite(decode.streams.BrotliOutput out, int[] buf, int buf_off, int len)
	{
		//line 32 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return ((int) (haxe.lang.Runtime.toInt(((java.lang.Object) (((haxe.lang.Function) (out.cb_) ).__hx_invoke4_o(0.0, out.data_, 0.0, buf, ((double) (buf_off) ), haxe.lang.Runtime.undefined, ((double) (len) ), haxe.lang.Runtime.undefined)) ))) );
	}
	
	
	public static int BrotliMemInputFunction(decode.streams.BrotliMemInput data, int[] buf, int buf_off, int count)
	{
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		int a = data.pos;
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		int b = data.length;
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		boolean aNeg = ( ((int) (a) ) < 0 );
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		boolean bNeg = ( ((int) (b) ) < 0 );
		//line 36 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		if (( (( aNeg != bNeg )) ? (aNeg) : (( ((int) (a) ) > ((int) (b) ) )) )) 
		{
			//line 37 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
			return -1;
		}
		
		//line 39 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		int a1 = ( ((int) (data.pos) ) + ((int) (count) ) );
		//line 39 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		int b1 = data.length;
		//line 39 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		boolean aNeg1 = ( ((int) (a1) ) < 0 );
		//line 39 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		boolean bNeg1 = ( ((int) (b1) ) < 0 );
		//line 39 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		if (( (( aNeg1 != bNeg1 )) ? (aNeg1) : (( ((int) (a1) ) > ((int) (b1) ) )) )) 
		{
			//line 40 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
			count = ( ((int) (data.length) ) - ((int) (data.pos) ) );
		}
		
		//line 42 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		haxe.root.DefaultFunctions.memcpyVectorArray(buf, buf_off, data.buffer, ((int) (( ((int) (0) ) + ((int) (data.pos) ) )) ), count);
		//line 43 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		data.pos = ((int) (( ((int) (data.pos) ) + ((int) (count) ) )) );
		//line 44 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return count;
	}
	
	
	public static decode.streams.BrotliInput BrotliInitMemInput(haxe.root.Array<java.lang.Object> buffer, int length)
	{
		//line 48 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		decode.streams.BrotliInput input = new decode.streams.BrotliInput();
		//line 49 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		decode.streams.BrotliMemInput mem_input = new decode.streams.BrotliMemInput();
		//line 50 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		mem_input.buffer = buffer;
		//line 51 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		mem_input.length = length;
		//line 52 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		mem_input.pos = 0;
		//line 53 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		input.cb_ = ((haxe.lang.Function) (new haxe.lang.Closure(decode.Streams.class, "BrotliMemInputFunction")) );
		//line 54 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		input.data_ = mem_input;
		//line 55 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return input;
	}
	
	
	public static int BrotliMemOutputFunction(decode.streams.BrotliMemOutput data, int[] buf, int buf_off, int count)
	{
		//line 64 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		haxe.root.DefaultFunctions.memcpyArrayVector(data.buffer, ((int) (( ((int) (0) ) + ((int) (data.pos) ) )) ), buf, buf_off, count);
		//line 65 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		data.pos = ((int) (( ((int) (data.pos) ) + ((int) (count) ) )) );
		//line 66 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return count;
	}
	
	
	public static decode.streams.BrotliOutput BrotliInitMemOutput(haxe.root.Array<java.lang.Object> buffer)
	{
		//line 70 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		decode.streams.BrotliOutput output = new decode.streams.BrotliOutput();
		//line 71 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		decode.streams.BrotliMemOutput mem_output = new decode.streams.BrotliMemOutput();
		//line 72 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		mem_output.buffer = buffer;
		//line 74 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		mem_output.pos = 0;
		//line 75 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		output.cb_ = ((haxe.lang.Function) (new haxe.lang.Closure(decode.Streams.class, "BrotliMemOutputFunction")) );
		//line 76 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		output.data_ = mem_output;
		//line 77 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return output;
	}
	
	
	public static int BrotliFileInputFunction(sys.io.FileInput data, int[] buf, int buf_off, int count)
	{
		//line 82 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		haxe.io.Bytes bytes = haxe.io.Bytes.alloc(count);
		//line 83 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		int size = data.readBytes(bytes, 0, count);
		//line 84 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		{
			//line 84 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
			int _g1 = 0;
			//line 84 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
			while (( _g1 < size ))
			{
				//line 84 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
				int i = _g1++;
				//line 85 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
				((int[]) (buf) )[( buf_off + i )] = ((int) (( bytes.b[i] & 255 )) );
			}
			
		}
		
		//line 86 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return size;
	}
	
	
	public static decode.streams.BrotliInput BrotliFileInput(sys.io.FileInput f)
	{
		//line 90 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		decode.streams.BrotliInput input = new decode.streams.BrotliInput();
		//line 91 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		input.cb_ = ((haxe.lang.Function) (new haxe.lang.Closure(decode.Streams.class, "BrotliFileInputFunction")) );
		//line 92 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		input.data_ = f;
		//line 93 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return input;
	}
	
	
	public static int BrotliFileOutputFunction(sys.io.FileOutput data, int[] buf, int buf_off, int count)
	{
		//line 97 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		haxe.io.Bytes bytes = haxe.io.Bytes.alloc(count);
		//line 98 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		{
			//line 98 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
			int _g1 = 0;
			//line 98 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
			while (( _g1 < count ))
			{
				//line 98 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
				int i = _g1++;
				//line 99 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
				bytes.b[i] = ((byte) (((int) (((int[]) (buf) )[i]) )) );
			}
			
		}
		
		//line 100 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		data.write(bytes);
		//line 101 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return bytes.length;
	}
	
	
	public static decode.streams.BrotliOutput BrotliFileOutput(sys.io.FileOutput f)
	{
		//line 105 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		decode.streams.BrotliOutput out = new decode.streams.BrotliOutput();
		//line 106 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		out.cb_ = ((haxe.lang.Function) (new haxe.lang.Closure(decode.Streams.class, "BrotliFileOutputFunction")) );
		//line 107 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		out.data_ = f;
		//line 108 "C:\\Users\\Dominik\\Brotli\\src\\decode\\Streams.hx"
		return out;
	}
	
	
}


