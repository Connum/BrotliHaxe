// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
public class Brotli : global::haxe.lang.HxObject {
	
	public Brotli(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public Brotli(string dictionary_path) {
		global::Brotli.__hx_ctor__Brotli(this, dictionary_path);
	}
	
	
	public static void __hx_ctor__Brotli(global::Brotli __hx_this, string dictionary_path) {
		unchecked {
			if (string.Equals(dictionary_path, null)) {
				dictionary_path = "dictionary.txt";
			}
			
			uint[] dictionary = global::Brotli.OpenInputBinary(dictionary_path);
			uint[] DictionaryHash = global::Brotli.OpenInputBinary("DictionaryHash.txt");
			uint[] DictionaryWords = global::Brotli.OpenInputBinary("DictionaryWords.txt");
			uint[] DictionaryBuckets = global::Brotli.OpenInputBinary("DictionaryBuckets.txt");
			global::decode.Dictionary.kBrotliDictionary = dictionary;
			global::encode.Dictionary.kBrotliDictionary = dictionary;
			global::Array<uint> kStaticDictionaryHash = global::encode.Dictionary_hash.kStaticDictionaryHash;
			global::Array<uint> kStaticDictionaryBuckets = global::encode.Static_dict_lut.kStaticDictionaryBuckets;
			{
				int _g = 0;
				while (( _g < 32768 )) {
					int i = _g++;
					kStaticDictionaryHash.push(((uint) (( ((uint) (( ((uint) (((uint[]) (DictionaryHash) )[( ( i * 2 ) + 1 )]) ) << 8 )) ) | ((uint) (((uint[]) (DictionaryHash) )[( i * 2 )]) ) )) ));
					kStaticDictionaryBuckets.push(((uint) (( ((uint) (( ((uint) (( ((uint) (((uint[]) (DictionaryBuckets) )[( ( i * 3 ) + 2 )]) ) << 16 )) ) | ((uint) (( ((uint) (((uint[]) (DictionaryBuckets) )[( ( i * 3 ) + 1 )]) ) << 8 )) ) )) ) | ((uint) (((uint[]) (DictionaryBuckets) )[( i * 3 )]) ) )) ));
				}
				
			}
			
			global::Array<object> kStaticDictionaryWords = global::encode.Static_dict_lut.kStaticDictionaryWords;
			{
				int _g1 = 0;
				while (( _g1 < 31704 )) {
					int i1 = _g1++;
					kStaticDictionaryWords.push(new global::encode.static_dict_lut.DictWord(((uint) (((uint) (( ((uint) (((uint) (((uint[]) (DictionaryWords) )[( ( i1 * 3 ) + 1 )]) )) ) >> 3 )) )) ), ((uint) (((uint[]) (DictionaryWords) )[( ( i1 * 3 ) + 2 )]) ), ((uint) (( ((uint) (( (((uint) (( ((uint) (((uint[]) (DictionaryWords) )[( ( i1 * 3 ) + 1 )]) ) & 7 )) )) << 8 )) ) | ((uint) (((uint[]) (DictionaryWords) )[( i1 * 3 )]) ) )) )));
				}
				
			}
			
		}
	}
	
	
	public static global::sys.io.FileInput OpenInputFile(string input_path) {
		return global::sys.io.File.read(input_path, new global::haxe.lang.Null<bool>(true, true));
	}
	
	
	public static global::sys.io.FileOutput OpenOutputFile(string output_path, int force) {
		return global::sys.io.File.write(output_path, new global::haxe.lang.Null<bool>(true, true));
	}
	
	
	public static uint[] OpenInputBinary(string input_path) {
		global::haxe.io.Bytes bytes = global::sys.io.File.read(input_path, new global::haxe.lang.Null<bool>(true, true)).readAll(default(global::haxe.lang.Null<int>));
		uint[] content = ((uint[]) (new uint[bytes.length]) );
		{
			int _g1 = 0;
			int _g = bytes.length;
			while (( _g1 < _g )) {
				int i = _g1++;
				((uint[]) (content) )[i] = ((uint) (((int) (bytes.b[i]) )) );
			}
			
		}
		
		return content;
	}
	
	
	public virtual object decompress(object content) {
		global::Array<uint> fin = new global::Array<uint>();
		{
			int _g1 = 0;
			int _g = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(content, "length", 520590566, true))) );
			while (( _g1 < _g )) {
				int i = _g1++;
				fin[i] = ((uint) (global::haxe.lang.Runtime.toInt(((object) (global::haxe.lang.Runtime.callField(content, "charCodeAt", 894756598, new global::Array<object>(new object[]{i}))) ))) );
			}
			
		}
		
		global::Array<uint> fout = new global::Array<uint>();
		global::decode.streams.BrotliInput input = global::decode.Streams.BrotliInitMemInput(fin, fin.length);
		global::decode.streams.BrotliOutput output = global::decode.Streams.BrotliInitMemOutput(fout);
		global::decode.Decode.BrotliDecompress(input, output);
		global::haxe.io.Bytes bytes = global::haxe.io.Bytes.alloc(((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(output.data_, "pos", 5594516, true))) ));
		{
			int _g11 = 0;
			int _g2 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(output.data_, "pos", 5594516, true))) );
			while (( _g11 < _g2 )) {
				int i1 = _g11++;
				bytes.b[i1] = ((byte) (((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(global::haxe.lang.Runtime.getField(output.data_, "buffer", 1351924992, true), "__get", 1915412854, new global::Array<object>(new object[]{i1})))) )) );
			}
			
		}
		
		return bytes.getString(0, ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(output.data_, "pos", 5594516, true))) ));
	}
	
	
	public virtual object compress(object content, int quality) {
		unchecked {
			if (( ( quality < 0 ) || ( quality > 11 ) )) {
				global::haxe.Log.trace.__hx_invoke2_o(default(double), "Quality 0...11", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"compress", "Brotli", "Brotli.hx"}, new int[]{1981972957}, new double[]{((double) (243) )}));
				return null;
			}
			
			global::Array<uint> fin = new global::Array<uint>();
			{
				int _g1 = 0;
				int _g = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(content, "length", 520590566, true))) );
				while (( _g1 < _g )) {
					int i = _g1++;
					fin[i] = ((uint) (global::haxe.lang.Runtime.toInt(((object) (global::haxe.lang.Runtime.callField(content, "charCodeAt", 894756598, new global::Array<object>(new object[]{i}))) ))) );
				}
				
			}
			
			global::Array<uint> fout = new global::Array<uint>();
			global::encode.encode.BrotliParams @params = new global::encode.encode.BrotliParams();
			@params.quality = quality;
			global::encode.streams.BrotliMemOut output = new global::encode.streams.BrotliMemOut(((global::Array<uint>) (fout) ));
			global::encode.Encode.BrotliCompress(@params, new global::encode.streams.BrotliMemIn(fin, fin.length), output);
			global::haxe.io.Bytes bytes = global::haxe.io.Bytes.alloc(output.position());
			{
				int _g11 = 0;
				int _g2 = output.position();
				while (( _g11 < _g2 )) {
					int i1 = _g11++;
					bytes.b[i1] = ((byte) (((int) (output.buf_[i1]) )) );
				}
				
			}
			
			return bytes.getString(0, output.position());
		}
	}
	
	
	public virtual object decompressArray(object content) {
		global::Array<uint> fin = ((global::Array<uint>) (global::Array<object>.__hx_cast<uint>(((global::Array) (content) ))) );
		global::Array<uint> fout = new global::Array<uint>();
		global::decode.streams.BrotliInput input = global::decode.Streams.BrotliInitMemInput(fin, fin.length);
		global::decode.streams.BrotliOutput output = global::decode.Streams.BrotliInitMemOutput(fout);
		global::decode.Decode.BrotliDecompress(input, output);
		return ((object) (global::haxe.lang.Runtime.callField(global::haxe.lang.Runtime.getField(output.data_, "buffer", 1351924992, true), "slice", 2127021138, new global::Array<object>(new object[]{0, global::haxe.lang.Runtime.getField(output.data_, "pos", 5594516, true)}))) );
	}
	
	
	public virtual object compressArray(object content, int quality) {
		unchecked {
			if (( ( quality < 0 ) || ( quality > 11 ) )) {
				global::haxe.Log.trace.__hx_invoke2_o(default(double), "Quality 0...11", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"compressArray", "Brotli", "Brotli.hx"}, new int[]{1981972957}, new double[]{((double) (268) )}));
				return null;
			}
			
			global::Array<uint> fin = ((global::Array<uint>) (global::Array<object>.__hx_cast<uint>(((global::Array) (content) ))) );
			global::Array<uint> fout = new global::Array<uint>();
			global::encode.encode.BrotliParams @params = new global::encode.encode.BrotliParams();
			@params.quality = quality;
			global::encode.streams.BrotliMemOut output = new global::encode.streams.BrotliMemOut(((global::Array<uint>) (fout) ));
			global::encode.Encode.BrotliCompress(@params, new global::encode.streams.BrotliMemIn(fin, fin.length), output);
			global::haxe.io.Bytes bytes = global::haxe.io.Bytes.alloc(output.position());
			{
				int _g1 = 0;
				int _g = output.position();
				while (( _g1 < _g )) {
					int i = _g1++;
					bytes.b[i] = ((byte) (((int) (output.buf_[i]) )) );
				}
				
			}
			
			return output.buf_.slice(0, new global::haxe.lang.Null<int>(output.position(), true));
		}
	}
	
	
	public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 1561111191:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "compressArray", 1561111191)) );
				}
				
				
				case 1572402806:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "decompressArray", 1572402806)) );
				}
				
				
				case 62867362:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "compress", 62867362)) );
				}
				
				
				case 1511295011:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "decompress", 1511295011)) );
				}
				
				
				default:
				{
					return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
		unchecked {
			switch (hash) {
				case 1561111191:
				{
					return this.compressArray(dynargs[0], ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
				}
				
				
				case 1572402806:
				{
					return this.decompressArray(dynargs[0]);
				}
				
				
				case 62867362:
				{
					return this.compress(dynargs[0], ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ));
				}
				
				
				case 1511295011:
				{
					return this.decompress(dynargs[0]);
				}
				
				
				default:
				{
					return base.__hx_invokeField(field, hash, dynargs);
				}
				
			}
			
		}
	}
	
	
}


