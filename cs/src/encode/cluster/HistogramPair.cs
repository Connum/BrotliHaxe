// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.cluster {
	public class HistogramPair : global::haxe.lang.HxObject {
		
		public HistogramPair(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public HistogramPair() {
			global::encode.cluster.HistogramPair.__hx_ctor_encode_cluster_HistogramPair(this);
		}
		
		
		public static void __hx_ctor_encode_cluster_HistogramPair(global::encode.cluster.HistogramPair __hx_this) {
		}
		
		
		public int idx1;
		
		public int idx2;
		
		public bool valid;
		
		public double cost_combo;
		
		public double cost_diff;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1698677367:
					{
						this.cost_diff = ((double) (@value) );
						return @value;
					}
					
					
					case 589325724:
					{
						this.cost_combo = ((double) (@value) );
						return @value;
					}
					
					
					case 1169404245:
					{
						this.idx2 = ((int) (@value) );
						return @value;
					}
					
					
					case 1169404244:
					{
						this.idx1 = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1698677367:
					{
						this.cost_diff = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 589325724:
					{
						this.cost_combo = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 834172156:
					{
						this.valid = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1169404245:
					{
						this.idx2 = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1169404244:
					{
						this.idx1 = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1698677367:
					{
						return this.cost_diff;
					}
					
					
					case 589325724:
					{
						return this.cost_combo;
					}
					
					
					case 834172156:
					{
						return this.valid;
					}
					
					
					case 1169404245:
					{
						return this.idx2;
					}
					
					
					case 1169404244:
					{
						return this.idx1;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1698677367:
					{
						return this.cost_diff;
					}
					
					
					case 589325724:
					{
						return this.cost_combo;
					}
					
					
					case 1169404245:
					{
						return ((double) (this.idx2) );
					}
					
					
					case 1169404244:
					{
						return ((double) (this.idx1) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("cost_diff");
			baseArr.push("cost_combo");
			baseArr.push("valid");
			baseArr.push("idx2");
			baseArr.push("idx1");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


