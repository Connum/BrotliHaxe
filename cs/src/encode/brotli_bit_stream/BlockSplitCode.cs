// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.brotli_bit_stream {
	public class BlockSplitCode : global::haxe.lang.HxObject {
		
		public BlockSplitCode(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public BlockSplitCode() {
			global::encode.brotli_bit_stream.BlockSplitCode.__hx_ctor_encode_brotli_bit_stream_BlockSplitCode(this);
		}
		
		
		public static void __hx_ctor_encode_brotli_bit_stream_BlockSplitCode(global::encode.brotli_bit_stream.BlockSplitCode __hx_this) {
		}
		
		
		public int[] type_code;
		
		public int[] length_prefix;
		
		public int[] length_nextra;
		
		public int[] length_extra;
		
		public uint[] type_depths;
		
		public uint[] type_bits;
		
		public uint[] length_depths;
		
		public uint[] length_bits;
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1128071231:
					{
						this.length_bits = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 1227192201:
					{
						this.length_depths = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 634585579:
					{
						this.type_bits = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 2122333237:
					{
						this.type_depths = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 1447110455:
					{
						this.length_extra = ((int[]) (@value) );
						return @value;
					}
					
					
					case 1308676315:
					{
						this.length_nextra = ((int[]) (@value) );
						return @value;
					}
					
					
					case 173235979:
					{
						this.length_prefix = ((int[]) (@value) );
						return @value;
					}
					
					
					case 645969938:
					{
						this.type_code = ((int[]) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1128071231:
					{
						return this.length_bits;
					}
					
					
					case 1227192201:
					{
						return this.length_depths;
					}
					
					
					case 634585579:
					{
						return this.type_bits;
					}
					
					
					case 2122333237:
					{
						return this.type_depths;
					}
					
					
					case 1447110455:
					{
						return this.length_extra;
					}
					
					
					case 1308676315:
					{
						return this.length_nextra;
					}
					
					
					case 173235979:
					{
						return this.length_prefix;
					}
					
					
					case 645969938:
					{
						return this.type_code;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("length_bits");
			baseArr.push("length_depths");
			baseArr.push("type_bits");
			baseArr.push("type_depths");
			baseArr.push("length_extra");
			baseArr.push("length_nextra");
			baseArr.push("length_prefix");
			baseArr.push("type_code");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


