// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.brotli_bit_stream {
	public class BlockEncoder : global::haxe.lang.HxObject {
		
		public BlockEncoder(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public BlockEncoder(int alphabet_size, int num_block_types, global::Array<int> block_types, global::Array<int> block_lengths) {
			global::encode.brotli_bit_stream.BlockEncoder.__hx_ctor_encode_brotli_bit_stream_BlockEncoder(this, alphabet_size, num_block_types, block_types, block_lengths);
		}
		
		
		public static void __hx_ctor_encode_brotli_bit_stream_BlockEncoder(global::encode.brotli_bit_stream.BlockEncoder __hx_this, int alphabet_size, int num_block_types, global::Array<int> block_types, global::Array<int> block_lengths) {
			__hx_this.block_split_code_ = new global::encode.brotli_bit_stream.BlockSplitCode();
			__hx_this.alphabet_size_ = alphabet_size;
			__hx_this.num_block_types_ = num_block_types;
			__hx_this.block_types_ = block_types;
			__hx_this.block_lengths_ = block_lengths;
			__hx_this.block_ix_ = 0;
			__hx_this.block_len_ = ( (( block_lengths.length == 0 )) ? (0) : (block_lengths[0]) );
			__hx_this.entropy_ix_ = 0;
		}
		
		
		public virtual void BuildAndStoreBlockSwitchEntropyCodes(global::Array<int> storage_ix, uint[] storage) {
			global::encode.Brotli_bit_stream.BuildAndStoreBlockSplitCode(this.block_types_, this.block_lengths_, this.num_block_types_, this.block_split_code_, storage_ix, storage);
		}
		
		
		public virtual void BuildAndStoreEntropyCodes(global::Array<object> histograms, global::Array<int> storage_ix, uint[] storage) {
			this.depths_ = global::FunctionMalloc.mallocUInt(( histograms.length * this.alphabet_size_ ));
			this.bits_ = global::FunctionMalloc.mallocUInt(( histograms.length * this.alphabet_size_ ));
			{
				int _g1 = 0;
				int _g = histograms.length;
				while (( _g1 < _g )) {
					int i = _g1++;
					int ix = ( i * this.alphabet_size_ );
					global::encode.Brotli_bit_stream.BuildAndStoreHuffmanTree(((global::encode.histogram.Histogram) (histograms[i]) ).data_, this.alphabet_size_, this.depths_, ix, this.bits_, ix, storage_ix, storage);
				}
				
			}
			
		}
		
		
		public virtual void StoreSymbol(int symbol, global::Array<int> storage_ix, uint[] storage) {
			if (( this.block_len_ == 0 )) {
				 ++ this.block_ix_;
				this.block_len_ = this.block_lengths_[this.block_ix_];
				this.entropy_ix_ = ( this.block_types_[this.block_ix_] * this.alphabet_size_ );
				global::encode.Brotli_bit_stream.StoreBlockSwitch(this.block_split_code_, this.block_ix_, storage_ix, storage);
			}
			
			 -- this.block_len_;
			int ix = ( this.entropy_ix_ + symbol );
			global::encode.Write_bits.WriteBits(((int) (((uint[]) (this.depths_) )[ix]) ), ((uint[]) (this.bits_) )[ix], storage_ix, storage);
		}
		
		
		public virtual void StoreSymbolWithContext(int kContextBits, int symbol, int context, int[] context_map, global::Array<int> storage_ix, uint[] storage) {
			if (( this.block_len_ == 0 )) {
				 ++ this.block_ix_;
				this.block_len_ = this.block_lengths_[this.block_ix_];
				this.entropy_ix_ = ( this.block_types_[this.block_ix_] << kContextBits );
				global::encode.Brotli_bit_stream.StoreBlockSwitch(this.block_split_code_, this.block_ix_, storage_ix, storage);
			}
			
			 -- this.block_len_;
			int ix = ( ( ((int[]) (context_map) )[( this.entropy_ix_ + context )] * this.alphabet_size_ ) + symbol );
			global::encode.Write_bits.WriteBits(((int) (((uint[]) (this.depths_) )[ix]) ), ((uint[]) (this.bits_) )[ix], storage_ix, storage);
		}
		
		
		public int alphabet_size_;
		
		public int num_block_types_;
		
		public global::Array<int> block_types_;
		
		public global::Array<int> block_lengths_;
		
		public global::encode.brotli_bit_stream.BlockSplitCode block_split_code_;
		
		public int block_ix_;
		
		public int block_len_;
		
		public int entropy_ix_;
		
		public uint[] depths_;
		
		public uint[] bits_;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1073261442:
					{
						this.entropy_ix_ = ((int) (@value) );
						return @value;
					}
					
					
					case 1056398940:
					{
						this.block_len_ = ((int) (@value) );
						return @value;
					}
					
					
					case 1506867806:
					{
						this.block_ix_ = ((int) (@value) );
						return @value;
					}
					
					
					case 510872209:
					{
						this.num_block_types_ = ((int) (@value) );
						return @value;
					}
					
					
					case 1291834546:
					{
						this.alphabet_size_ = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 855943833:
					{
						this.bits_ = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 1783290959:
					{
						this.depths_ = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 1073261442:
					{
						this.entropy_ix_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1056398940:
					{
						this.block_len_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1506867806:
					{
						this.block_ix_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 793152251:
					{
						this.block_split_code_ = ((global::encode.brotli_bit_stream.BlockSplitCode) (@value) );
						return @value;
					}
					
					
					case 302804836:
					{
						this.block_lengths_ = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 713460152:
					{
						this.block_types_ = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 510872209:
					{
						this.num_block_types_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1291834546:
					{
						this.alphabet_size_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 855943833:
					{
						return this.bits_;
					}
					
					
					case 1783290959:
					{
						return this.depths_;
					}
					
					
					case 1073261442:
					{
						return this.entropy_ix_;
					}
					
					
					case 1056398940:
					{
						return this.block_len_;
					}
					
					
					case 1506867806:
					{
						return this.block_ix_;
					}
					
					
					case 793152251:
					{
						return this.block_split_code_;
					}
					
					
					case 302804836:
					{
						return this.block_lengths_;
					}
					
					
					case 713460152:
					{
						return this.block_types_;
					}
					
					
					case 510872209:
					{
						return this.num_block_types_;
					}
					
					
					case 1291834546:
					{
						return this.alphabet_size_;
					}
					
					
					case 2084740880:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "StoreSymbolWithContext", 2084740880)) );
					}
					
					
					case 1684565497:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "StoreSymbol", 1684565497)) );
					}
					
					
					case 523201357:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "BuildAndStoreEntropyCodes", 523201357)) );
					}
					
					
					case 1606060382:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "BuildAndStoreBlockSwitchEntropyCodes", 1606060382)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1073261442:
					{
						return ((double) (this.entropy_ix_) );
					}
					
					
					case 1056398940:
					{
						return ((double) (this.block_len_) );
					}
					
					
					case 1506867806:
					{
						return ((double) (this.block_ix_) );
					}
					
					
					case 510872209:
					{
						return ((double) (this.num_block_types_) );
					}
					
					
					case 1291834546:
					{
						return ((double) (this.alphabet_size_) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 2084740880:
					{
						this.StoreSymbolWithContext(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[2])) ), ((int[]) (dynargs[3]) ), ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (dynargs[4]) ))) ), ((uint[]) (dynargs[5]) ));
						break;
					}
					
					
					case 1684565497:
					{
						this.StoreSymbol(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (dynargs[1]) ))) ), ((uint[]) (dynargs[2]) ));
						break;
					}
					
					
					case 523201357:
					{
						this.BuildAndStoreEntropyCodes(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ), ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (dynargs[1]) ))) ), ((uint[]) (dynargs[2]) ));
						break;
					}
					
					
					case 1606060382:
					{
						this.BuildAndStoreBlockSwitchEntropyCodes(((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (dynargs[0]) ))) ), ((uint[]) (dynargs[1]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("bits_");
			baseArr.push("depths_");
			baseArr.push("entropy_ix_");
			baseArr.push("block_len_");
			baseArr.push("block_ix_");
			baseArr.push("block_split_code_");
			baseArr.push("block_lengths_");
			baseArr.push("block_types_");
			baseArr.push("num_block_types_");
			baseArr.push("alphabet_size_");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


