// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.entropy_encode {
	public class EntropyCode : global::haxe.lang.HxObject {
		
		public EntropyCode(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public EntropyCode(int kSize) {
			global::encode.entropy_encode.EntropyCode.__hx_ctor_encode_entropy_encode_EntropyCode(this, kSize);
		}
		
		
		public static void __hx_ctor_encode_entropy_encode_EntropyCode(global::encode.entropy_encode.EntropyCode __hx_this, int kSize) {
			unchecked {
				__hx_this.symbols_ = global::FunctionMalloc.mallocUInt(4);
				__hx_this.depth_ = global::FunctionMalloc.mallocUInt(kSize);
				__hx_this.bits_ = global::FunctionMalloc.mallocUInt(kSize);
			}
		}
		
		
		public uint[] depth_;
		
		public uint[] bits_;
		
		public int count_;
		
		public uint[] symbols_;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1282994352:
					{
						this.count_ = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 623548900:
					{
						this.symbols_ = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 1282994352:
					{
						this.count_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 855943833:
					{
						this.bits_ = ((uint[]) (@value) );
						return @value;
					}
					
					
					case 1837691388:
					{
						this.depth_ = ((uint[]) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 623548900:
					{
						return this.symbols_;
					}
					
					
					case 1282994352:
					{
						return this.count_;
					}
					
					
					case 855943833:
					{
						return this.bits_;
					}
					
					
					case 1837691388:
					{
						return this.depth_;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1282994352:
					{
						return ((double) (this.count_) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("symbols_");
			baseArr.push("count_");
			baseArr.push("bits_");
			baseArr.push("depth_");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


