// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.entropy_encode {
	public class HuffmanTree : global::haxe.lang.HxObject {
		
		public HuffmanTree(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public HuffmanTree() {
			global::encode.entropy_encode.HuffmanTree.__hx_ctor_encode_entropy_encode_HuffmanTree(this);
		}
		
		
		public static void __hx_ctor_encode_entropy_encode_HuffmanTree(global::encode.entropy_encode.HuffmanTree __hx_this) {
		}
		
		
		public virtual void HuffmanTree3(int count, int left, int right) {
			this.total_count_ = count;
			this.index_left_ = left;
			this.index_right_or_value_ = right;
		}
		
		
		public int total_count_;
		
		public int index_left_;
		
		public int index_right_or_value_;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1263960794:
					{
						this.index_right_or_value_ = ((int) (@value) );
						return @value;
					}
					
					
					case 1589344843:
					{
						this.index_left_ = ((int) (@value) );
						return @value;
					}
					
					
					case 379416331:
					{
						this.total_count_ = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1263960794:
					{
						this.index_right_or_value_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1589344843:
					{
						this.index_left_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 379416331:
					{
						this.total_count_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1263960794:
					{
						return this.index_right_or_value_;
					}
					
					
					case 1589344843:
					{
						return this.index_left_;
					}
					
					
					case 379416331:
					{
						return this.total_count_;
					}
					
					
					case 1309131464:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "HuffmanTree3", 1309131464)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1263960794:
					{
						return ((double) (this.index_right_or_value_) );
					}
					
					
					case 1589344843:
					{
						return ((double) (this.index_left_) );
					}
					
					
					case 379416331:
					{
						return ((double) (this.total_count_) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1309131464:
					{
						this.HuffmanTree3(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[2])) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("index_right_or_value_");
			baseArr.push("index_left_");
			baseArr.push("total_count_");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


