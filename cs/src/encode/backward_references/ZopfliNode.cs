// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.backward_references {
	public class ZopfliNode : global::haxe.lang.HxObject {
		
		public ZopfliNode(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ZopfliNode() {
			global::encode.backward_references.ZopfliNode.__hx_ctor_encode_backward_references_ZopfliNode(this);
		}
		
		
		public static void __hx_ctor_encode_backward_references_ZopfliNode(global::encode.backward_references.ZopfliNode __hx_this) {
			unchecked {
				__hx_this.distance_cache = global::FunctionMalloc.mallocInt(4);
				__hx_this.length = 1;
				__hx_this.distance = 0;
				__hx_this.distance_code = 0;
				__hx_this.length_code = 0;
				__hx_this.insert_length = 0;
				__hx_this.cost = global::encode.Backward_references.kInfinity;
			}
		}
		
		
		public int length;
		
		public int distance;
		
		public int distance_code;
		
		public int[] distance_cache;
		
		public int length_code;
		
		public int insert_length;
		
		public double cost;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1103412813:
					{
						this.cost = ((double) (@value) );
						return @value;
					}
					
					
					case 89861228:
					{
						this.insert_length = ((int) (@value) );
						return @value;
					}
					
					
					case 1139455590:
					{
						this.length_code = ((int) (@value) );
						return @value;
					}
					
					
					case 691108279:
					{
						this.distance_code = ((int) (@value) );
						return @value;
					}
					
					
					case 1811518261:
					{
						this.distance = ((int) (@value) );
						return @value;
					}
					
					
					case 520590566:
					{
						this.length = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1103412813:
					{
						this.cost = ((double) (global::haxe.lang.Runtime.toDouble(@value)) );
						return @value;
					}
					
					
					case 89861228:
					{
						this.insert_length = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1139455590:
					{
						this.length_code = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1490504312:
					{
						this.distance_cache = ((int[]) (@value) );
						return @value;
					}
					
					
					case 691108279:
					{
						this.distance_code = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1811518261:
					{
						this.distance = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 520590566:
					{
						this.length = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1103412813:
					{
						return this.cost;
					}
					
					
					case 89861228:
					{
						return this.insert_length;
					}
					
					
					case 1139455590:
					{
						return this.length_code;
					}
					
					
					case 1490504312:
					{
						return this.distance_cache;
					}
					
					
					case 691108279:
					{
						return this.distance_code;
					}
					
					
					case 1811518261:
					{
						return this.distance;
					}
					
					
					case 520590566:
					{
						return this.length;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1103412813:
					{
						return this.cost;
					}
					
					
					case 89861228:
					{
						return ((double) (this.insert_length) );
					}
					
					
					case 1139455590:
					{
						return ((double) (this.length_code) );
					}
					
					
					case 691108279:
					{
						return ((double) (this.distance_code) );
					}
					
					
					case 1811518261:
					{
						return ((double) (this.distance) );
					}
					
					
					case 520590566:
					{
						return ((double) (this.length) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("cost");
			baseArr.push("insert_length");
			baseArr.push("length_code");
			baseArr.push("distance_cache");
			baseArr.push("distance_code");
			baseArr.push("distance");
			baseArr.push("length");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


