// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode {
	public class Static_dict : global::haxe.lang.HxObject {
		
		static Static_dict() {
			unchecked {
				global::encode.Static_dict.kMaxDictionaryMatchLen = 37;
				global::encode.Static_dict.kInvalidMatch = 268435455;
			}
		}
		
		
		public Static_dict(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Static_dict() {
			global::encode.Static_dict.__hx_ctor_encode_Static_dict(this);
		}
		
		
		public static void __hx_ctor_encode_Static_dict(global::encode.Static_dict __hx_this) {
		}
		
		
		public static int kMaxDictionaryMatchLen;
		
		public static int kInvalidMatch;
		
		public static uint Hash_1(uint[] data, int data_off) {
			unchecked {
				return ((uint) (((uint) (( ((uint) (((uint) (((uint) (( ((uint) (((uint) (( (((uint) (( ((uint) (( ((uint) (( ((uint) (( ((uint) (((uint[]) (data) )[( data_off + 3 )]) ) << 24 )) ) | ((uint) (( ((uint) (((uint[]) (data) )[( data_off + 2 )]) ) << 16 )) ) )) ) | ((uint) (( ((uint) (((uint[]) (data) )[( data_off + 1 )]) ) << 8 )) ) )) ) | ((uint) (((uint[]) (data) )[data_off]) ) )) )) * ((uint) (506832829) ) )) )) ) >> 0 )) )) )) ) >> 17 )) )) );
			}
		}
		
		
		public static void AddMatch(int distance, int len, int len_code, int[] matches) {
			unchecked {
				((int[]) (matches) )[len] = ((int) (global::System.Math.Min(((double) (((int) (((int[]) (matches) )[len]) )) ), ((double) (( (( distance << 5 )) + len_code )) ))) );
			}
		}
		
		
		public static int DictMatchLength(uint[] data, int data_off, int id, int len) {
			return global::encode.Find_match_length.FindMatchLengthWithLimit(global::encode.Dictionary.kBrotliDictionary, ( global::encode.Dictionary.kBrotliDictionaryOffsetsByLength[len] + ( len * id ) ), data, data_off, len);
		}
		
		
		public static bool IsMatch(global::encode.static_dict_lut.DictWord w, uint[] data, int data_off) {
			unchecked {
				int offset = ((int) (((uint) (( ((uint) (( w.len * w.idx )) ) + global::encode.Dictionary.kBrotliDictionaryOffsetsByLength[((int) (w.len) )] )) )) );
				uint[] dict = global::encode.Dictionary.kBrotliDictionary;
				if (((bool) (( w.transform == 0 )) )) {
					return ((bool) (( global::encode.Find_match_length.FindMatchLengthWithLimit(dict, offset, data, data_off, ((int) (w.len) )) == w.len )) );
				}
				else if (((bool) (( w.transform == 10 )) )) {
					bool tmp = default(bool);
					bool tmp1 = default(bool);
					global::haxe.lang.Null<int> tmp2 = global::haxe.lang.StringExt.charCodeAt("a", 0);
					if (((bool) (( ((uint) (((uint[]) (dict) )[offset]) ) >= (tmp2).@value )) )) {
						global::haxe.lang.Null<int> tmp3 = global::haxe.lang.StringExt.charCodeAt("z", 0);
						tmp1 = ((bool) (( ((uint) (((uint[]) (dict) )[offset]) ) <= (tmp3).@value )) );
					}
					else {
						tmp1 = false;
					}
					
					if (tmp1) {
						tmp = ((bool) (( (((uint) (( ((uint) (((uint[]) (dict) )[offset]) ) ^ 32 )) )) == ((uint) (((uint[]) (data) )[data_off]) ) )) );
					}
					else {
						tmp = false;
					}
					
					if (tmp) {
						return ((bool) (( global::encode.Find_match_length.FindMatchLengthWithLimit(dict, ( offset + 1 ), data, ( data_off + 1 ), ((int) (((uint) (( w.len - 1 )) )) )) == ((uint) (( w.len - 1 )) ) )) );
					}
					else {
						return false;
					}
					
				}
				else {
					{
						int _g1 = 0;
						int _g = ((int) (w.len) );
						while (( _g1 < _g )) {
							int i = _g1++;
							bool tmp4 = default(bool);
							global::haxe.lang.Null<int> tmp5 = global::haxe.lang.StringExt.charCodeAt("a", 0);
							if (((bool) (( ((uint) (((uint[]) (dict) )[( offset + i )]) ) >= (tmp5).@value )) )) {
								global::haxe.lang.Null<int> tmp6 = global::haxe.lang.StringExt.charCodeAt("z", 0);
								tmp4 = ((bool) (( ((uint) (((uint[]) (dict) )[( offset + i )]) ) <= (tmp6).@value )) );
							}
							else {
								tmp4 = false;
							}
							
							if (tmp4) {
								if (((bool) (( (((uint) (( ((uint) (((uint[]) (dict) )[( offset + i )]) ) ^ 32 )) )) != ((uint) (((uint[]) (data) )[( data_off + i )]) ) )) )) {
									return false;
								}
								
							}
							else if (((bool) (( ((uint) (((uint[]) (dict) )[( offset + i )]) ) != ((uint) (((uint[]) (data) )[( data_off + i )]) ) )) )) {
								return false;
							}
							
						}
						
					}
					
					return true;
				}
				
			}
		}
		
		
		public static bool FindAllStaticDictionaryMatches(uint[] data, int data_off, int min_length, int[] matches, int matches_off) {
			unchecked {
				bool found_match = false;
				uint key = global::encode.Static_dict.Hash_1(data, data_off);
				uint bucket = global::encode.Static_dict_lut.kStaticDictionaryBuckets[((int) (key) )];
				if (((bool) (( bucket != 0 )) )) {
					int num = ((int) (((uint) (( bucket & 255 )) )) );
					int offset = ((int) (((uint) (((uint) (( ((uint) (bucket) ) >> 8 )) )) )) );
					{
						int _g1 = 0;
						while (( _g1 < num )) {
							global::encode.static_dict_lut.DictWord w = ((global::encode.static_dict_lut.DictWord) (global::encode.Static_dict_lut.kStaticDictionaryWords[( offset + _g1++ )]) );
							int l = ((int) (w.len) );
							int n = ( 1 << global::encode.Dictionary.kBrotliDictionarySizeBitsByLength[l] );
							int id = ((int) (w.idx) );
							if (((bool) (( w.transform == 0 )) )) {
								int matchlen = global::encode.Static_dict.DictMatchLength(data, data_off, id, l);
								if (( matchlen == l )) {
									global::encode.Static_dict.AddMatch(id, l, l, matches);
									found_match = true;
								}
								
								if (( matchlen >= ( l - 1 ) )) {
									global::encode.Static_dict.AddMatch(( id + ( 12 * n ) ), ( l - 1 ), l, matches);
									bool tmp = default(bool);
									bool tmp1 = default(bool);
									bool tmp2 = default(bool);
									global::haxe.lang.Null<int> tmp3 = global::haxe.lang.StringExt.charCodeAt("i", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( ( data_off + l ) - 1 )]) ), (tmp3).toDynamic())) )) {
										global::haxe.lang.Null<int> tmp4 = global::haxe.lang.StringExt.charCodeAt("n", 0);
										tmp2 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + l )]) ), (tmp4).toDynamic())) );
									}
									else {
										tmp2 = false;
									}
									
									if (tmp2) {
										global::haxe.lang.Null<int> tmp5 = global::haxe.lang.StringExt.charCodeAt("g", 0);
										tmp1 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( ( data_off + l ) + 1 )]) ), (tmp5).toDynamic())) );
									}
									else {
										tmp1 = false;
									}
									
									if (tmp1) {
										global::haxe.lang.Null<int> tmp6 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
										tmp = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( ( data_off + l ) + 2 )]) ), (tmp6).toDynamic())) );
									}
									else {
										tmp = false;
									}
									
									if (tmp) {
										global::encode.Static_dict.AddMatch(( id + ( 49 * n ) ), ( l + 3 ), l, matches);
									}
									
									found_match = true;
								}
								
								{
									int _g3 = ((int) (global::System.Math.Max(((double) (min_length) ), ((double) (( l - 9 )) ))) );
									int _g2 = ( ((int) (global::System.Math.Min(((double) (matchlen) ), ((double) (( l - 2 )) ))) ) + 1 );
									while (( _g3 < _g2 )) {
										int len = _g3++;
										global::encode.Static_dict.AddMatch(( id + ( global::encode.Transform.kOmitLastNTransforms[( l - len )] * n ) ), len, l, matches);
										found_match = true;
									}
									
								}
								
								if (( matchlen < l )) {
									continue;
								}
								
								int s_off = ( data_off + l );
								global::haxe.lang.Null<int> tmp7 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp7).toDynamic())) )) {
									global::encode.Static_dict.AddMatch(( id + n ), ( l + 1 ), l, matches);
									global::haxe.lang.Null<int> tmp8 = global::haxe.lang.StringExt.charCodeAt("a", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp8).toDynamic())) )) {
										global::haxe.lang.Null<int> tmp9 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp9).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id + ( 28 * n ) ), ( l + 3 ), l, matches);
										}
										else {
											global::haxe.lang.Null<int> tmp10 = global::haxe.lang.StringExt.charCodeAt("s", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp10).toDynamic())) )) {
												global::haxe.lang.Null<int> tmp11 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp11).toDynamic())) )) {
													global::encode.Static_dict.AddMatch(( id + ( 46 * n ) ), ( l + 4 ), l, matches);
												}
												
											}
											else {
												global::haxe.lang.Null<int> tmp12 = global::haxe.lang.StringExt.charCodeAt("t", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp12).toDynamic())) )) {
													global::haxe.lang.Null<int> tmp13 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp13).toDynamic())) )) {
														global::encode.Static_dict.AddMatch(( id + ( 60 * n ) ), ( l + 4 ), l, matches);
													}
													
												}
												else {
													global::haxe.lang.Null<int> tmp14 = global::haxe.lang.StringExt.charCodeAt("n", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp14).toDynamic())) )) {
														bool tmp15 = default(bool);
														global::haxe.lang.Null<int> tmp16 = global::haxe.lang.StringExt.charCodeAt("d", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp16).toDynamic())) )) {
															global::haxe.lang.Null<int> tmp17 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
															tmp15 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp17).toDynamic())) );
														}
														else {
															tmp15 = false;
														}
														
														if (tmp15) {
															global::encode.Static_dict.AddMatch(( id + ( 10 * n ) ), ( l + 5 ), l, matches);
														}
														
													}
													
												}
												
											}
											
										}
										
									}
									else {
										global::haxe.lang.Null<int> tmp18 = global::haxe.lang.StringExt.charCodeAt("b", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp18).toDynamic())) )) {
											bool tmp19 = default(bool);
											global::haxe.lang.Null<int> tmp20 = global::haxe.lang.StringExt.charCodeAt("y", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp20).toDynamic())) )) {
												global::haxe.lang.Null<int> tmp21 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
												tmp19 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp21).toDynamic())) );
											}
											else {
												tmp19 = false;
											}
											
											if (tmp19) {
												global::encode.Static_dict.AddMatch(( id + ( 38 * n ) ), ( l + 4 ), l, matches);
											}
											
										}
										else {
											global::haxe.lang.Null<int> tmp22 = global::haxe.lang.StringExt.charCodeAt("i", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp22).toDynamic())) )) {
												global::haxe.lang.Null<int> tmp23 = global::haxe.lang.StringExt.charCodeAt("n", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp23).toDynamic())) )) {
													global::haxe.lang.Null<int> tmp24 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp24).toDynamic())) )) {
														global::encode.Static_dict.AddMatch(( id + ( 16 * n ) ), ( l + 4 ), l, matches);
													}
													
												}
												else {
													global::haxe.lang.Null<int> tmp25 = global::haxe.lang.StringExt.charCodeAt("s", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp25).toDynamic())) )) {
														global::haxe.lang.Null<int> tmp26 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp26).toDynamic())) )) {
															global::encode.Static_dict.AddMatch(( id + ( 47 * n ) ), ( l + 4 ), l, matches);
														}
														
													}
													
												}
												
											}
											else {
												global::haxe.lang.Null<int> tmp27 = global::haxe.lang.StringExt.charCodeAt("f", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp27).toDynamic())) )) {
													global::haxe.lang.Null<int> tmp28 = global::haxe.lang.StringExt.charCodeAt("o", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp28).toDynamic())) )) {
														bool tmp29 = default(bool);
														global::haxe.lang.Null<int> tmp30 = global::haxe.lang.StringExt.charCodeAt("r", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp30).toDynamic())) )) {
															global::haxe.lang.Null<int> tmp31 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
															tmp29 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp31).toDynamic())) );
														}
														else {
															tmp29 = false;
														}
														
														if (tmp29) {
															global::encode.Static_dict.AddMatch(( id + ( 25 * n ) ), ( l + 5 ), l, matches);
														}
														
													}
													else {
														global::haxe.lang.Null<int> tmp32 = global::haxe.lang.StringExt.charCodeAt("r", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp32).toDynamic())) )) {
															bool tmp33 = default(bool);
															bool tmp34 = default(bool);
															global::haxe.lang.Null<int> tmp35 = global::haxe.lang.StringExt.charCodeAt("o", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp35).toDynamic())) )) {
																global::haxe.lang.Null<int> tmp36 = global::haxe.lang.StringExt.charCodeAt("m", 0);
																tmp34 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp36).toDynamic())) );
															}
															else {
																tmp34 = false;
															}
															
															if (tmp34) {
																global::haxe.lang.Null<int> tmp37 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																tmp33 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 5 )]) ), (tmp37).toDynamic())) );
															}
															else {
																tmp33 = false;
															}
															
															if (tmp33) {
																global::encode.Static_dict.AddMatch(( id + ( 37 * n ) ), ( l + 6 ), l, matches);
															}
															
														}
														
													}
													
												}
												else {
													global::haxe.lang.Null<int> tmp38 = global::haxe.lang.StringExt.charCodeAt("o", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp38).toDynamic())) )) {
														global::haxe.lang.Null<int> tmp39 = global::haxe.lang.StringExt.charCodeAt("f", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp39).toDynamic())) )) {
															global::haxe.lang.Null<int> tmp40 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp40).toDynamic())) )) {
																global::encode.Static_dict.AddMatch(( id + ( 8 * n ) ), ( l + 4 ), l, matches);
															}
															
														}
														else {
															global::haxe.lang.Null<int> tmp41 = global::haxe.lang.StringExt.charCodeAt("n", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp41).toDynamic())) )) {
																global::haxe.lang.Null<int> tmp42 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp42).toDynamic())) )) {
																	global::encode.Static_dict.AddMatch(( id + ( 45 * n ) ), ( l + 4 ), l, matches);
																}
																
															}
															
														}
														
													}
													else {
														global::haxe.lang.Null<int> tmp43 = global::haxe.lang.StringExt.charCodeAt("n", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp43).toDynamic())) )) {
															bool tmp44 = default(bool);
															bool tmp45 = default(bool);
															global::haxe.lang.Null<int> tmp46 = global::haxe.lang.StringExt.charCodeAt("o", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp46).toDynamic())) )) {
																global::haxe.lang.Null<int> tmp47 = global::haxe.lang.StringExt.charCodeAt("t", 0);
																tmp45 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp47).toDynamic())) );
															}
															else {
																tmp45 = false;
															}
															
															if (tmp45) {
																global::haxe.lang.Null<int> tmp48 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																tmp44 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp48).toDynamic())) );
															}
															else {
																tmp44 = false;
															}
															
															if (tmp44) {
																global::encode.Static_dict.AddMatch(( id + ( 80 * n ) ), ( l + 5 ), l, matches);
															}
															
														}
														else {
															global::haxe.lang.Null<int> tmp49 = global::haxe.lang.StringExt.charCodeAt("t", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp49).toDynamic())) )) {
																global::haxe.lang.Null<int> tmp50 = global::haxe.lang.StringExt.charCodeAt("h", 0);
																if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp50).toDynamic())) )) {
																	global::haxe.lang.Null<int> tmp51 = global::haxe.lang.StringExt.charCodeAt("e", 0);
																	if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp51).toDynamic())) )) {
																		global::haxe.lang.Null<int> tmp52 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																		if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp52).toDynamic())) )) {
																			global::encode.Static_dict.AddMatch(( id + ( 5 * n ) ), ( l + 5 ), l, matches);
																		}
																		
																	}
																	else {
																		global::haxe.lang.Null<int> tmp53 = global::haxe.lang.StringExt.charCodeAt("a", 0);
																		if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp53).toDynamic())) )) {
																			bool tmp54 = default(bool);
																			global::haxe.lang.Null<int> tmp55 = global::haxe.lang.StringExt.charCodeAt("t", 0);
																			if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp55).toDynamic())) )) {
																				global::haxe.lang.Null<int> tmp56 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																				tmp54 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 5 )]) ), (tmp56).toDynamic())) );
																			}
																			else {
																				tmp54 = false;
																			}
																			
																			if (tmp54) {
																				global::encode.Static_dict.AddMatch(( id + ( 29 * n ) ), ( l + 6 ), l, matches);
																			}
																			
																		}
																		
																	}
																	
																}
																else {
																	global::haxe.lang.Null<int> tmp57 = global::haxe.lang.StringExt.charCodeAt("o", 0);
																	if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp57).toDynamic())) )) {
																		global::haxe.lang.Null<int> tmp58 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																		if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp58).toDynamic())) )) {
																			global::encode.Static_dict.AddMatch(( id + ( 17 * n ) ), ( l + 4 ), l, matches);
																		}
																		
																	}
																	
																}
																
															}
															else {
																global::haxe.lang.Null<int> tmp59 = global::haxe.lang.StringExt.charCodeAt("w", 0);
																if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp59).toDynamic())) )) {
																	bool tmp60 = default(bool);
																	bool tmp61 = default(bool);
																	bool tmp62 = default(bool);
																	global::haxe.lang.Null<int> tmp63 = global::haxe.lang.StringExt.charCodeAt("i", 0);
																	if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp63).toDynamic())) )) {
																		global::haxe.lang.Null<int> tmp64 = global::haxe.lang.StringExt.charCodeAt("t", 0);
																		tmp62 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp64).toDynamic())) );
																	}
																	else {
																		tmp62 = false;
																	}
																	
																	if (tmp62) {
																		global::haxe.lang.Null<int> tmp65 = global::haxe.lang.StringExt.charCodeAt("h", 0);
																		tmp61 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp65).toDynamic())) );
																	}
																	else {
																		tmp61 = false;
																	}
																	
																	if (tmp61) {
																		global::haxe.lang.Null<int> tmp66 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																		tmp60 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 5 )]) ), (tmp66).toDynamic())) );
																	}
																	else {
																		tmp60 = false;
																	}
																	
																	if (tmp60) {
																		global::encode.Static_dict.AddMatch(( id + ( 35 * n ) ), ( l + 6 ), l, matches);
																	}
																	
																}
																
															}
															
														}
														
													}
													
												}
												
											}
											
										}
										
									}
									
								}
								else {
									global::haxe.lang.Null<int> tmp67 = global::haxe.lang.StringExt.charCodeAt("\"", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp67).toDynamic())) )) {
										global::encode.Static_dict.AddMatch(( id + ( 19 * n ) ), ( l + 1 ), l, matches);
										global::haxe.lang.Null<int> tmp68 = global::haxe.lang.StringExt.charCodeAt(">", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp68).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id + ( 21 * n ) ), ( l + 2 ), l, matches);
										}
										
									}
									else {
										global::haxe.lang.Null<int> tmp69 = global::haxe.lang.StringExt.charCodeAt(".", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp69).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id + ( 20 * n ) ), ( l + 1 ), l, matches);
											global::haxe.lang.Null<int> tmp70 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp70).toDynamic())) )) {
												global::encode.Static_dict.AddMatch(( id + ( 31 * n ) ), ( l + 2 ), l, matches);
												bool tmp71 = default(bool);
												global::haxe.lang.Null<int> tmp72 = global::haxe.lang.StringExt.charCodeAt("T", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp72).toDynamic())) )) {
													global::haxe.lang.Null<int> tmp73 = global::haxe.lang.StringExt.charCodeAt("h", 0);
													tmp71 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp73).toDynamic())) );
												}
												else {
													tmp71 = false;
												}
												
												if (tmp71) {
													global::haxe.lang.Null<int> tmp74 = global::haxe.lang.StringExt.charCodeAt("e", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp74).toDynamic())) )) {
														global::haxe.lang.Null<int> tmp75 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 5 )]) ), (tmp75).toDynamic())) )) {
															global::encode.Static_dict.AddMatch(( id + ( 43 * n ) ), ( l + 6 ), l, matches);
														}
														
													}
													else {
														global::haxe.lang.Null<int> tmp76 = global::haxe.lang.StringExt.charCodeAt("i", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp76).toDynamic())) )) {
															bool tmp77 = default(bool);
															global::haxe.lang.Null<int> tmp78 = global::haxe.lang.StringExt.charCodeAt("s", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 5 )]) ), (tmp78).toDynamic())) )) {
																global::haxe.lang.Null<int> tmp79 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																tmp77 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 6 )]) ), (tmp79).toDynamic())) );
															}
															else {
																tmp77 = false;
															}
															
															if (tmp77) {
																global::encode.Static_dict.AddMatch(( id + ( 75 * n ) ), ( l + 7 ), l, matches);
															}
															
														}
														
													}
													
												}
												
											}
											
										}
										else {
											global::haxe.lang.Null<int> tmp80 = global::haxe.lang.StringExt.charCodeAt(",", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp80).toDynamic())) )) {
												global::encode.Static_dict.AddMatch(( id + ( 76 * n ) ), ( l + 1 ), l, matches);
												global::haxe.lang.Null<int> tmp81 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp81).toDynamic())) )) {
													global::encode.Static_dict.AddMatch(( id + ( 14 * n ) ), ( l + 2 ), l, matches);
												}
												
											}
											else {
												global::haxe.lang.Null<int> tmp82 = global::haxe.lang.StringExt.charCodeAt("\n", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp82).toDynamic())) )) {
													global::encode.Static_dict.AddMatch(( id + ( 22 * n ) ), ( l + 1 ), l, matches);
													global::haxe.lang.Null<int> tmp83 = global::haxe.lang.StringExt.charCodeAt("\t", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp83).toDynamic())) )) {
														global::encode.Static_dict.AddMatch(( id + ( 50 * n ) ), ( l + 2 ), l, matches);
													}
													
												}
												else {
													global::haxe.lang.Null<int> tmp84 = global::haxe.lang.StringExt.charCodeAt("]", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp84).toDynamic())) )) {
														global::encode.Static_dict.AddMatch(( id + ( 24 * n ) ), ( l + 1 ), l, matches);
													}
													else {
														global::haxe.lang.Null<int> tmp85 = global::haxe.lang.StringExt.charCodeAt("\'", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp85).toDynamic())) )) {
															global::encode.Static_dict.AddMatch(( id + ( 36 * n ) ), ( l + 1 ), l, matches);
														}
														else {
															global::haxe.lang.Null<int> tmp86 = global::haxe.lang.StringExt.charCodeAt(":", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp86).toDynamic())) )) {
																global::encode.Static_dict.AddMatch(( id + ( 51 * n ) ), ( l + 1 ), l, matches);
															}
															else {
																global::haxe.lang.Null<int> tmp87 = global::haxe.lang.StringExt.charCodeAt("(", 0);
																if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp87).toDynamic())) )) {
																	global::encode.Static_dict.AddMatch(( id + ( 57 * n ) ), ( l + 1 ), l, matches);
																}
																else {
																	global::haxe.lang.Null<int> tmp88 = global::haxe.lang.StringExt.charCodeAt("=", 0);
																	if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp88).toDynamic())) )) {
																		global::haxe.lang.Null<int> tmp89 = global::haxe.lang.StringExt.charCodeAt("\"", 0);
																		if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp89).toDynamic())) )) {
																			global::encode.Static_dict.AddMatch(( id + ( 70 * n ) ), ( l + 2 ), l, matches);
																		}
																		else {
																			global::haxe.lang.Null<int> tmp90 = global::haxe.lang.StringExt.charCodeAt("\'", 0);
																			if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp90).toDynamic())) )) {
																				global::encode.Static_dict.AddMatch(( id + ( 86 * n ) ), ( l + 2 ), l, matches);
																			}
																			
																		}
																		
																	}
																	else {
																		global::haxe.lang.Null<int> tmp91 = global::haxe.lang.StringExt.charCodeAt("a", 0);
																		if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp91).toDynamic())) )) {
																			bool tmp92 = default(bool);
																			global::haxe.lang.Null<int> tmp93 = global::haxe.lang.StringExt.charCodeAt("l", 0);
																			if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp93).toDynamic())) )) {
																				global::haxe.lang.Null<int> tmp94 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																				tmp92 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp94).toDynamic())) );
																			}
																			else {
																				tmp92 = false;
																			}
																			
																			if (tmp92) {
																				global::encode.Static_dict.AddMatch(( id + ( 84 * n ) ), ( l + 3 ), l, matches);
																			}
																			
																		}
																		else {
																			global::haxe.lang.Null<int> tmp95 = global::haxe.lang.StringExt.charCodeAt("e", 0);
																			if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp95).toDynamic())) )) {
																				global::haxe.lang.Null<int> tmp96 = global::haxe.lang.StringExt.charCodeAt("d", 0);
																				if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp96).toDynamic())) )) {
																					global::haxe.lang.Null<int> tmp97 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																					if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp97).toDynamic())) )) {
																						global::encode.Static_dict.AddMatch(( id + ( 53 * n ) ), ( l + 3 ), l, matches);
																					}
																					
																				}
																				else {
																					global::haxe.lang.Null<int> tmp98 = global::haxe.lang.StringExt.charCodeAt("r", 0);
																					if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp98).toDynamic())) )) {
																						global::haxe.lang.Null<int> tmp99 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																						if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp99).toDynamic())) )) {
																							global::encode.Static_dict.AddMatch(( id + ( 82 * n ) ), ( l + 3 ), l, matches);
																						}
																						
																					}
																					else {
																						global::haxe.lang.Null<int> tmp100 = global::haxe.lang.StringExt.charCodeAt("s", 0);
																						if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp100).toDynamic())) )) {
																							bool tmp101 = default(bool);
																							global::haxe.lang.Null<int> tmp102 = global::haxe.lang.StringExt.charCodeAt("t", 0);
																							if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp102).toDynamic())) )) {
																								global::haxe.lang.Null<int> tmp103 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																								tmp101 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp103).toDynamic())) );
																							}
																							else {
																								tmp101 = false;
																							}
																							
																							if (tmp101) {
																								global::encode.Static_dict.AddMatch(( id + ( 95 * n ) ), ( l + 4 ), l, matches);
																							}
																							
																						}
																						
																					}
																					
																				}
																				
																			}
																			else {
																				global::haxe.lang.Null<int> tmp104 = global::haxe.lang.StringExt.charCodeAt("f", 0);
																				if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp104).toDynamic())) )) {
																					bool tmp105 = default(bool);
																					bool tmp106 = default(bool);
																					global::haxe.lang.Null<int> tmp107 = global::haxe.lang.StringExt.charCodeAt("u", 0);
																					if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp107).toDynamic())) )) {
																						global::haxe.lang.Null<int> tmp108 = global::haxe.lang.StringExt.charCodeAt("l", 0);
																						tmp106 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp108).toDynamic())) );
																					}
																					else {
																						tmp106 = false;
																					}
																					
																					if (tmp106) {
																						global::haxe.lang.Null<int> tmp109 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																						tmp105 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp109).toDynamic())) );
																					}
																					else {
																						tmp105 = false;
																					}
																					
																					if (tmp105) {
																						global::encode.Static_dict.AddMatch(( id + ( 90 * n ) ), ( l + 4 ), l, matches);
																					}
																					
																				}
																				else {
																					global::haxe.lang.Null<int> tmp110 = global::haxe.lang.StringExt.charCodeAt("i", 0);
																					if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp110).toDynamic())) )) {
																						global::haxe.lang.Null<int> tmp111 = global::haxe.lang.StringExt.charCodeAt("v", 0);
																						if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp111).toDynamic())) )) {
																							bool tmp112 = default(bool);
																							global::haxe.lang.Null<int> tmp113 = global::haxe.lang.StringExt.charCodeAt("e", 0);
																							if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp113).toDynamic())) )) {
																								global::haxe.lang.Null<int> tmp114 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																								tmp112 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp114).toDynamic())) );
																							}
																							else {
																								tmp112 = false;
																							}
																							
																							if (tmp112) {
																								global::encode.Static_dict.AddMatch(( id + ( 92 * n ) ), ( l + 4 ), l, matches);
																							}
																							
																						}
																						else {
																							global::haxe.lang.Null<int> tmp115 = global::haxe.lang.StringExt.charCodeAt("z", 0);
																							if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp115).toDynamic())) )) {
																								bool tmp116 = default(bool);
																								global::haxe.lang.Null<int> tmp117 = global::haxe.lang.StringExt.charCodeAt("e", 0);
																								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp117).toDynamic())) )) {
																									global::haxe.lang.Null<int> tmp118 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																									tmp116 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp118).toDynamic())) );
																								}
																								else {
																									tmp116 = false;
																								}
																								
																								if (tmp116) {
																									global::encode.Static_dict.AddMatch(( id + ( 100 * n ) ), ( l + 4 ), l, matches);
																								}
																								
																							}
																							
																						}
																						
																					}
																					else {
																						global::haxe.lang.Null<int> tmp119 = global::haxe.lang.StringExt.charCodeAt("l", 0);
																						if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp119).toDynamic())) )) {
																							global::haxe.lang.Null<int> tmp120 = global::haxe.lang.StringExt.charCodeAt("e", 0);
																							if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp120).toDynamic())) )) {
																								bool tmp121 = default(bool);
																								bool tmp122 = default(bool);
																								global::haxe.lang.Null<int> tmp123 = global::haxe.lang.StringExt.charCodeAt("s", 0);
																								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp123).toDynamic())) )) {
																									global::haxe.lang.Null<int> tmp124 = global::haxe.lang.StringExt.charCodeAt("s", 0);
																									tmp122 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp124).toDynamic())) );
																								}
																								else {
																									tmp122 = false;
																								}
																								
																								if (tmp122) {
																									global::haxe.lang.Null<int> tmp125 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																									tmp121 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 4 )]) ), (tmp125).toDynamic())) );
																								}
																								else {
																									tmp121 = false;
																								}
																								
																								if (tmp121) {
																									global::encode.Static_dict.AddMatch(( id + ( 93 * n ) ), ( l + 5 ), l, matches);
																								}
																								
																							}
																							else {
																								global::haxe.lang.Null<int> tmp126 = global::haxe.lang.StringExt.charCodeAt("y", 0);
																								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp126).toDynamic())) )) {
																									global::haxe.lang.Null<int> tmp127 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp127).toDynamic())) )) {
																										global::encode.Static_dict.AddMatch(( id + ( 61 * n ) ), ( l + 3 ), l, matches);
																									}
																									
																								}
																								
																							}
																							
																						}
																						else {
																							global::haxe.lang.Null<int> tmp128 = global::haxe.lang.StringExt.charCodeAt("o", 0);
																							if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off]) ), (tmp128).toDynamic())) )) {
																								bool tmp129 = default(bool);
																								bool tmp130 = default(bool);
																								global::haxe.lang.Null<int> tmp131 = global::haxe.lang.StringExt.charCodeAt("u", 0);
																								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 1 )]) ), (tmp131).toDynamic())) )) {
																									global::haxe.lang.Null<int> tmp132 = global::haxe.lang.StringExt.charCodeAt("s", 0);
																									tmp130 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 2 )]) ), (tmp132).toDynamic())) );
																								}
																								else {
																									tmp130 = false;
																								}
																								
																								if (tmp130) {
																									global::haxe.lang.Null<int> tmp133 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
																									tmp129 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off + 3 )]) ), (tmp133).toDynamic())) );
																								}
																								else {
																									tmp129 = false;
																								}
																								
																								if (tmp129) {
																									global::encode.Static_dict.AddMatch(( id + ( 106 * n ) ), ( l + 4 ), l, matches);
																								}
																								
																							}
																							
																						}
																						
																					}
																					
																				}
																				
																			}
																			
																		}
																		
																	}
																	
																}
																
															}
															
														}
														
													}
													
												}
												
											}
											
										}
										
									}
									
								}
								
							}
							else {
								int t = ((int) (((uint) (( w.transform - 10 )) )) );
								if ( ! (global::encode.Static_dict.IsMatch(w, data, data_off)) ) {
									continue;
								}
								
								global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (44) : (9) )) * n ) ), l, l, matches);
								found_match = true;
								int s_off1 = ( data_off + l );
								global::haxe.lang.Null<int> tmp134 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off1]) ), (tmp134).toDynamic())) )) {
									global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (68) : (4) )) * n ) ), ( l + 1 ), l, matches);
								}
								else {
									global::haxe.lang.Null<int> tmp135 = global::haxe.lang.StringExt.charCodeAt("\"", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off1]) ), (tmp135).toDynamic())) )) {
										global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (87) : (66) )) * n ) ), ( l + 1 ), l, matches);
										global::haxe.lang.Null<int> tmp136 = global::haxe.lang.StringExt.charCodeAt(">", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off1 + 1 )]) ), (tmp136).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (97) : (69) )) * n ) ), ( l + 2 ), l, matches);
										}
										
									}
									else {
										global::haxe.lang.Null<int> tmp137 = global::haxe.lang.StringExt.charCodeAt(".", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off1]) ), (tmp137).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (101) : (79) )) * n ) ), ( l + 1 ), l, matches);
											global::haxe.lang.Null<int> tmp138 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off1 + 1 )]) ), (tmp138).toDynamic())) )) {
												global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (114) : (88) )) * n ) ), ( l + 2 ), l, matches);
											}
											
										}
										else {
											global::haxe.lang.Null<int> tmp139 = global::haxe.lang.StringExt.charCodeAt(",", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off1]) ), (tmp139).toDynamic())) )) {
												global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (112) : (99) )) * n ) ), ( l + 1 ), l, matches);
												global::haxe.lang.Null<int> tmp140 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off1 + 1 )]) ), (tmp140).toDynamic())) )) {
													global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (107) : (58) )) * n ) ), ( l + 2 ), l, matches);
												}
												
											}
											else {
												global::haxe.lang.Null<int> tmp141 = global::haxe.lang.StringExt.charCodeAt("\'", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off1]) ), (tmp141).toDynamic())) )) {
													global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (94) : (74) )) * n ) ), ( l + 1 ), l, matches);
												}
												else {
													global::haxe.lang.Null<int> tmp142 = global::haxe.lang.StringExt.charCodeAt("(", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off1]) ), (tmp142).toDynamic())) )) {
														global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (113) : (78) )) * n ) ), ( l + 1 ), l, matches);
													}
													else {
														global::haxe.lang.Null<int> tmp143 = global::haxe.lang.StringExt.charCodeAt("=", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off1]) ), (tmp143).toDynamic())) )) {
															global::haxe.lang.Null<int> tmp144 = global::haxe.lang.StringExt.charCodeAt("\"", 0);
															if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off1 + 1 )]) ), (tmp144).toDynamic())) )) {
																global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (105) : (104) )) * n ) ), ( l + 2 ), l, matches);
															}
															else {
																global::haxe.lang.Null<int> tmp145 = global::haxe.lang.StringExt.charCodeAt("\'", 0);
																if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off1 + 1 )]) ), (tmp145).toDynamic())) )) {
																	global::encode.Static_dict.AddMatch(( id + ( (( (( t > 0 )) ? (116) : (108) )) * n ) ), ( l + 2 ), l, matches);
																}
																
															}
															
														}
														
													}
													
												}
												
											}
											
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
				bool tmp146 = default(bool);
				global::haxe.lang.Null<int> tmp147 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
				if ( ! ((((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp147).toDynamic())) ))) ) {
					global::haxe.lang.Null<int> tmp148 = global::haxe.lang.StringExt.charCodeAt(".", 0);
					tmp146 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp148).toDynamic())) );
				}
				else {
					tmp146 = true;
				}
				
				if (tmp146) {
					global::haxe.lang.Null<int> is_space = global::haxe.lang.StringExt.charCodeAt(" ", 0);
					bool is_space1 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (is_space).toDynamic())) );
					key = global::encode.Static_dict.Hash_1(data, ( data_off + 1 ));
					bucket = global::encode.Static_dict_lut.kStaticDictionaryBuckets[((int) (key) )];
					int num1 = ((int) (((uint) (( bucket & 255 )) )) );
					int offset1 = ((int) (((uint) (((uint) (( ((uint) (bucket) ) >> 8 )) )) )) );
					{
						int _g11 = 0;
						while (( _g11 < num1 )) {
							global::encode.static_dict_lut.DictWord w1 = ((global::encode.static_dict_lut.DictWord) (global::encode.Static_dict_lut.kStaticDictionaryWords[( offset1 + _g11++ )]) );
							int l1 = ((int) (w1.len) );
							int n1 = ( 1 << global::encode.Dictionary.kBrotliDictionarySizeBitsByLength[l1] );
							int id1 = ((int) (w1.idx) );
							if (((bool) (( w1.transform == 0 )) )) {
								if ( ! (global::encode.Static_dict.IsMatch(w1, data, ( data_off + 1 ))) ) {
									continue;
								}
								
								global::encode.Static_dict.AddMatch(( id1 + ( (( (is_space1) ? (6) : (32) )) * n1 ) ), ( l1 + 1 ), l1, matches);
								found_match = true;
								int s_off2 = ( ( data_off + l1 ) + 1 );
								global::haxe.lang.Null<int> tmp149 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off2]) ), (tmp149).toDynamic())) )) {
									global::encode.Static_dict.AddMatch(( id1 + ( (( (is_space1) ? (2) : (77) )) * n1 ) ), ( l1 + 2 ), l1, matches);
								}
								else {
									global::haxe.lang.Null<int> tmp150 = global::haxe.lang.StringExt.charCodeAt("(", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off2]) ), (tmp150).toDynamic())) )) {
										global::encode.Static_dict.AddMatch(( id1 + ( (( (is_space1) ? (89) : (67) )) * n1 ) ), ( l1 + 2 ), l1, matches);
									}
									else if (is_space1) {
										global::haxe.lang.Null<int> tmp151 = global::haxe.lang.StringExt.charCodeAt(",", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off2]) ), (tmp151).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id1 + ( 103 * n1 ) ), ( l1 + 2 ), l1, matches);
											global::haxe.lang.Null<int> tmp152 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off2 + 1 )]) ), (tmp152).toDynamic())) )) {
												global::encode.Static_dict.AddMatch(( id1 + ( 33 * n1 ) ), ( l1 + 3 ), l1, matches);
											}
											
										}
										else {
											global::haxe.lang.Null<int> tmp153 = global::haxe.lang.StringExt.charCodeAt(".", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off2]) ), (tmp153).toDynamic())) )) {
												global::encode.Static_dict.AddMatch(( id1 + ( 71 * n1 ) ), ( l1 + 2 ), l1, matches);
												global::haxe.lang.Null<int> tmp154 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off2 + 1 )]) ), (tmp154).toDynamic())) )) {
													global::encode.Static_dict.AddMatch(( id1 + ( 52 * n1 ) ), ( l1 + 3 ), l1, matches);
												}
												
											}
											else {
												global::haxe.lang.Null<int> tmp155 = global::haxe.lang.StringExt.charCodeAt("=", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off2]) ), (tmp155).toDynamic())) )) {
													global::haxe.lang.Null<int> tmp156 = global::haxe.lang.StringExt.charCodeAt("\"", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off2 + 1 )]) ), (tmp156).toDynamic())) )) {
														global::encode.Static_dict.AddMatch(( id1 + ( 81 * n1 ) ), ( l1 + 3 ), l1, matches);
													}
													else {
														global::haxe.lang.Null<int> tmp157 = global::haxe.lang.StringExt.charCodeAt("\'", 0);
														if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off2 + 1 )]) ), (tmp157).toDynamic())) )) {
															global::encode.Static_dict.AddMatch(( id1 + ( 98 * n1 ) ), ( l1 + 3 ), l1, matches);
														}
														
													}
													
												}
												
											}
											
										}
										
									}
									
								}
								
							}
							else if (is_space1) {
								int t1 = ((int) (((uint) (( w1.transform - 10 )) )) );
								if ( ! (global::encode.Static_dict.IsMatch(w1, data, ( data_off + 1 ))) ) {
									continue;
								}
								
								global::encode.Static_dict.AddMatch(( id1 + ( (( (( t1 > 0 )) ? (85) : (30) )) * n1 ) ), ( l1 + 1 ), l1, matches);
								found_match = true;
								int s_off3 = ( ( data_off + l1 ) + 1 );
								global::haxe.lang.Null<int> tmp158 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off3]) ), (tmp158).toDynamic())) )) {
									global::encode.Static_dict.AddMatch(( id1 + ( (( (( t1 > 0 )) ? (83) : (15) )) * n1 ) ), ( l1 + 2 ), l1, matches);
								}
								else {
									global::haxe.lang.Null<int> tmp159 = global::haxe.lang.StringExt.charCodeAt(",", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off3]) ), (tmp159).toDynamic())) )) {
										if (( t1 == 0 )) {
											global::encode.Static_dict.AddMatch(( id1 + ( 109 * n1 ) ), ( l1 + 2 ), l1, matches);
										}
										
										global::haxe.lang.Null<int> tmp160 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off3 + 1 )]) ), (tmp160).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id1 + ( (( (( t1 > 0 )) ? (111) : (65) )) * n1 ) ), ( l1 + 3 ), l1, matches);
										}
										
									}
									else {
										global::haxe.lang.Null<int> tmp161 = global::haxe.lang.StringExt.charCodeAt(".", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off3]) ), (tmp161).toDynamic())) )) {
											global::encode.Static_dict.AddMatch(( id1 + ( (( (( t1 > 0 )) ? (115) : (96) )) * n1 ) ), ( l1 + 2 ), l1, matches);
											global::haxe.lang.Null<int> tmp162 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off3 + 1 )]) ), (tmp162).toDynamic())) )) {
												global::encode.Static_dict.AddMatch(( id1 + ( (( (( t1 > 0 )) ? (117) : (91) )) * n1 ) ), ( l1 + 3 ), l1, matches);
											}
											
										}
										else {
											global::haxe.lang.Null<int> tmp163 = global::haxe.lang.StringExt.charCodeAt("=", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off3]) ), (tmp163).toDynamic())) )) {
												global::haxe.lang.Null<int> tmp164 = global::haxe.lang.StringExt.charCodeAt("\"", 0);
												if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off3 + 1 )]) ), (tmp164).toDynamic())) )) {
													global::encode.Static_dict.AddMatch(( id1 + ( (( (( t1 > 0 )) ? (110) : (118) )) * n1 ) ), ( l1 + 3 ), l1, matches);
												}
												else {
													global::haxe.lang.Null<int> tmp165 = global::haxe.lang.StringExt.charCodeAt("\'", 0);
													if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off3 + 1 )]) ), (tmp165).toDynamic())) )) {
														global::encode.Static_dict.AddMatch(( id1 + ( (( (( t1 > 0 )) ? (119) : (120) )) * n1 ) ), ( l1 + 3 ), l1, matches);
													}
													
												}
												
											}
											
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
				bool tmp166 = default(bool);
				bool tmp167 = default(bool);
				global::haxe.lang.Null<int> tmp168 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
				if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 1 )]) ), (tmp168).toDynamic())) )) {
					bool tmp169 = default(bool);
					global::haxe.lang.Null<int> tmp170 = global::haxe.lang.StringExt.charCodeAt("e", 0);
					if ( ! ((((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp170).toDynamic())) ))) ) {
						global::haxe.lang.Null<int> tmp171 = global::haxe.lang.StringExt.charCodeAt("s", 0);
						tmp169 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp171).toDynamic())) );
					}
					else {
						tmp169 = true;
					}
					
					if ( ! (tmp169) ) {
						global::haxe.lang.Null<int> tmp172 = global::haxe.lang.StringExt.charCodeAt(",", 0);
						tmp167 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp172).toDynamic())) );
					}
					else {
						tmp167 = true;
					}
					
				}
				else {
					tmp167 = false;
				}
				
				if ( ! (tmp167) ) {
					if (((bool) (( ((uint) (((uint[]) (data) )[data_off]) ) == 194 )) )) {
						tmp166 = ((bool) (( ((uint) (((uint[]) (data) )[( data_off + 1 )]) ) == 160 )) );
					}
					else {
						tmp166 = false;
					}
					
				}
				else {
					tmp166 = true;
				}
				
				if (tmp166) {
					key = global::encode.Static_dict.Hash_1(data, ( data_off + 2 ));
					bucket = global::encode.Static_dict_lut.kStaticDictionaryBuckets[((int) (key) )];
					int num2 = ((int) (((uint) (( bucket & 255 )) )) );
					int offset2 = ((int) (((uint) (((uint) (( ((uint) (bucket) ) >> 8 )) )) )) );
					{
						int _g12 = 0;
						while (( _g12 < num2 )) {
							global::encode.static_dict_lut.DictWord w2 = ((global::encode.static_dict_lut.DictWord) (global::encode.Static_dict_lut.kStaticDictionaryWords[( offset2 + _g12++ )]) );
							int l2 = ((int) (w2.len) );
							int n2 = ( 1 << global::encode.Dictionary.kBrotliDictionarySizeBitsByLength[l2] );
							int id2 = ((int) (w2.idx) );
							if (( ((bool) (( w2.transform == 0 )) ) && global::encode.Static_dict.IsMatch(w2, data, ( data_off + 2 )) )) {
								if (((bool) (( ((uint) (((uint[]) (data) )[data_off]) ) == 194 )) )) {
									global::encode.Static_dict.AddMatch(( id2 + ( 102 * n2 ) ), ( l2 + 2 ), l2, matches);
									found_match = true;
								}
								else {
									global::haxe.lang.Null<int> tmp173 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( ( data_off + l2 ) + 2 )]) ), (tmp173).toDynamic())) )) {
										int t2 = default(int);
										global::haxe.lang.Null<int> t3 = global::haxe.lang.StringExt.charCodeAt("e", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (t3).toDynamic())) )) {
											t2 = 18;
										}
										else {
											global::haxe.lang.Null<int> t4 = global::haxe.lang.StringExt.charCodeAt("s", 0);
											if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (t4).toDynamic())) )) {
												t2 = 7;
											}
											else {
												t2 = 13;
											}
											
										}
										
										global::encode.Static_dict.AddMatch(( id2 + ( t2 * n2 ) ), ( l2 + 3 ), l2, matches);
										found_match = true;
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
				bool tmp174 = default(bool);
				bool tmp175 = default(bool);
				bool tmp176 = default(bool);
				bool tmp177 = default(bool);
				bool tmp178 = default(bool);
				global::haxe.lang.Null<int> tmp179 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
				if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp179).toDynamic())) )) {
					global::haxe.lang.Null<int> tmp180 = global::haxe.lang.StringExt.charCodeAt("t", 0);
					tmp178 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 1 )]) ), (tmp180).toDynamic())) );
				}
				else {
					tmp178 = false;
				}
				
				if (tmp178) {
					global::haxe.lang.Null<int> tmp181 = global::haxe.lang.StringExt.charCodeAt("h", 0);
					tmp177 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 2 )]) ), (tmp181).toDynamic())) );
				}
				else {
					tmp177 = false;
				}
				
				if (tmp177) {
					global::haxe.lang.Null<int> tmp182 = global::haxe.lang.StringExt.charCodeAt("e", 0);
					tmp176 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 3 )]) ), (tmp182).toDynamic())) );
				}
				else {
					tmp176 = false;
				}
				
				if (tmp176) {
					global::haxe.lang.Null<int> tmp183 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
					tmp175 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 4 )]) ), (tmp183).toDynamic())) );
				}
				else {
					tmp175 = false;
				}
				
				if ( ! (tmp175) ) {
					bool tmp184 = default(bool);
					bool tmp185 = default(bool);
					bool tmp186 = default(bool);
					global::haxe.lang.Null<int> tmp187 = global::haxe.lang.StringExt.charCodeAt(".", 0);
					if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp187).toDynamic())) )) {
						global::haxe.lang.Null<int> tmp188 = global::haxe.lang.StringExt.charCodeAt("c", 0);
						tmp186 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 1 )]) ), (tmp188).toDynamic())) );
					}
					else {
						tmp186 = false;
					}
					
					if (tmp186) {
						global::haxe.lang.Null<int> tmp189 = global::haxe.lang.StringExt.charCodeAt("o", 0);
						tmp185 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 2 )]) ), (tmp189).toDynamic())) );
					}
					else {
						tmp185 = false;
					}
					
					if (tmp185) {
						global::haxe.lang.Null<int> tmp190 = global::haxe.lang.StringExt.charCodeAt("m", 0);
						tmp184 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 3 )]) ), (tmp190).toDynamic())) );
					}
					else {
						tmp184 = false;
					}
					
					if (tmp184) {
						global::haxe.lang.Null<int> tmp191 = global::haxe.lang.StringExt.charCodeAt("/", 0);
						tmp174 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( data_off + 4 )]) ), (tmp191).toDynamic())) );
					}
					else {
						tmp174 = false;
					}
					
				}
				else {
					tmp174 = true;
				}
				
				if (tmp174) {
					key = global::encode.Static_dict.Hash_1(data, ( data_off + 5 ));
					bucket = global::encode.Static_dict_lut.kStaticDictionaryBuckets[((int) (key) )];
					int num3 = ((int) (((uint) (( bucket & 255 )) )) );
					int offset3 = ((int) (((uint) (((uint) (( ((uint) (bucket) ) >> 8 )) )) )) );
					{
						int _g13 = 0;
						while (( _g13 < num3 )) {
							global::encode.static_dict_lut.DictWord w3 = ((global::encode.static_dict_lut.DictWord) (global::encode.Static_dict_lut.kStaticDictionaryWords[( offset3 + _g13++ )]) );
							int l3 = ((int) (w3.len) );
							int n3 = ( 1 << global::encode.Dictionary.kBrotliDictionarySizeBitsByLength[l3] );
							int id3 = ((int) (w3.idx) );
							if (( ((bool) (( w3.transform == 0 )) ) && global::encode.Static_dict.IsMatch(w3, data, ( data_off + 5 )) )) {
								int tmp192 = default(int);
								global::haxe.lang.Null<int> tmp193 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp193).toDynamic())) )) {
									tmp192 = 41;
								}
								else {
									tmp192 = 72;
								}
								
								global::encode.Static_dict.AddMatch(( id3 + ( tmp192 * n3 ) ), ( l3 + 5 ), l3, matches);
								found_match = true;
								int s_off4 = ( ( data_off + l3 ) + 5 );
								global::haxe.lang.Null<int> tmp194 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
								if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[data_off]) ), (tmp194).toDynamic())) )) {
									bool tmp195 = default(bool);
									bool tmp196 = default(bool);
									bool tmp197 = default(bool);
									global::haxe.lang.Null<int> tmp198 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
									if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[s_off4]) ), (tmp198).toDynamic())) )) {
										global::haxe.lang.Null<int> tmp199 = global::haxe.lang.StringExt.charCodeAt("o", 0);
										tmp197 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off4 + 1 )]) ), (tmp199).toDynamic())) );
									}
									else {
										tmp197 = false;
									}
									
									if (tmp197) {
										global::haxe.lang.Null<int> tmp200 = global::haxe.lang.StringExt.charCodeAt("f", 0);
										tmp196 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off4 + 2 )]) ), (tmp200).toDynamic())) );
									}
									else {
										tmp196 = false;
									}
									
									if (tmp196) {
										global::haxe.lang.Null<int> tmp201 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
										tmp195 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off4 + 3 )]) ), (tmp201).toDynamic())) );
									}
									else {
										tmp195 = false;
									}
									
									if (tmp195) {
										global::encode.Static_dict.AddMatch(( id3 + ( 62 * n3 ) ), ( l3 + 9 ), l3, matches);
										bool tmp202 = default(bool);
										bool tmp203 = default(bool);
										bool tmp204 = default(bool);
										global::haxe.lang.Null<int> tmp205 = global::haxe.lang.StringExt.charCodeAt("t", 0);
										if (((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off4 + 4 )]) ), (tmp205).toDynamic())) )) {
											global::haxe.lang.Null<int> tmp206 = global::haxe.lang.StringExt.charCodeAt("h", 0);
											tmp204 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off4 + 5 )]) ), (tmp206).toDynamic())) );
										}
										else {
											tmp204 = false;
										}
										
										if (tmp204) {
											global::haxe.lang.Null<int> tmp207 = global::haxe.lang.StringExt.charCodeAt("e", 0);
											tmp203 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off4 + 6 )]) ), (tmp207).toDynamic())) );
										}
										else {
											tmp203 = false;
										}
										
										if (tmp203) {
											global::haxe.lang.Null<int> tmp208 = global::haxe.lang.StringExt.charCodeAt(" ", 0);
											tmp202 = ((bool) (global::haxe.lang.Runtime.eq(((uint) (((uint[]) (data) )[( s_off4 + 7 )]) ), (tmp208).toDynamic())) );
										}
										else {
											tmp202 = false;
										}
										
										if (tmp202) {
											global::encode.Static_dict.AddMatch(( id3 + ( 73 * n3 ) ), ( l3 + 13 ), l3, matches);
										}
										
									}
									
								}
								
							}
							
						}
						
					}
					
				}
				
				return found_match;
			}
		}
		
		
	}
}


