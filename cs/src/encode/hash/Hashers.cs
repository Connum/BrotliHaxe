// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.hash {
	public class Hashers : global::haxe.lang.HxObject {
		
		public Hashers(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Hashers() {
			global::encode.hash.Hashers.__hx_ctor_encode_hash_Hashers(this);
		}
		
		
		public static void __hx_ctor_encode_hash_Hashers(global::encode.hash.Hashers __hx_this) {
		}
		
		
		public virtual void Init(int type) {
			unchecked {
				switch (type) {
					case 1:
					{
						this.hash_h1 = new global::encode.hash.HashLongestMatchQuickly(16, 1, true);
						break;
					}
					
					
					case 2:
					{
						this.hash_h2 = new global::encode.hash.HashLongestMatchQuickly(16, 2, false);
						break;
					}
					
					
					case 3:
					{
						this.hash_h3 = new global::encode.hash.HashLongestMatchQuickly(16, 4, false);
						break;
					}
					
					
					case 4:
					{
						this.hash_h4 = new global::encode.hash.HashLongestMatchQuickly(17, 4, true);
						break;
					}
					
					
					case 5:
					{
						this.hash_h5 = new global::encode.hash.HashLongestMatch(14, 4, 4);
						break;
					}
					
					
					case 6:
					{
						this.hash_h6 = new global::encode.hash.HashLongestMatch(14, 5, 4);
						break;
					}
					
					
					case 7:
					{
						this.hash_h7 = new global::encode.hash.HashLongestMatch(15, 6, 10);
						break;
					}
					
					
					case 8:
					{
						this.hash_h8 = new global::encode.hash.HashLongestMatch(15, 7, 10);
						break;
					}
					
					
					case 9:
					{
						this.hash_h9 = new global::encode.hash.HashLongestMatch(15, 8, 16);
						break;
					}
					
					
					default:
					{
						break;
					}
					
				}
				
			}
		}
		
		
		public virtual void WarmupHashHashLongestMatchQuickly(int size, uint[] dict, global::encode.hash.HashLongestMatchQuickly hasher) {
			int _g1 = 0;
			while (( _g1 < size )) {
				hasher.Store(dict, 0, _g1++);
			}
			
		}
		
		
		public virtual void WarmupHashHashLongestMatch(int size, uint[] dict, global::encode.hash.HashLongestMatch hasher) {
			int _g1 = 0;
			while (( _g1 < size )) {
				hasher.Store(dict, 0, _g1++);
			}
			
		}
		
		
		public virtual void PrependCustomDictionary(int type, int size, uint[] dict) {
			unchecked {
				switch (type) {
					case 1:
					{
						this.WarmupHashHashLongestMatchQuickly(size, dict, this.hash_h1);
						break;
					}
					
					
					case 2:
					{
						this.WarmupHashHashLongestMatchQuickly(size, dict, this.hash_h2);
						break;
					}
					
					
					case 3:
					{
						this.WarmupHashHashLongestMatchQuickly(size, dict, this.hash_h3);
						break;
					}
					
					
					case 4:
					{
						this.WarmupHashHashLongestMatchQuickly(size, dict, this.hash_h4);
						break;
					}
					
					
					case 5:
					{
						this.WarmupHashHashLongestMatch(size, dict, this.hash_h5);
						break;
					}
					
					
					case 6:
					{
						this.WarmupHashHashLongestMatch(size, dict, this.hash_h6);
						break;
					}
					
					
					case 7:
					{
						this.WarmupHashHashLongestMatch(size, dict, this.hash_h7);
						break;
					}
					
					
					case 8:
					{
						this.WarmupHashHashLongestMatch(size, dict, this.hash_h8);
						break;
					}
					
					
					case 9:
					{
						this.WarmupHashHashLongestMatch(size, dict, this.hash_h9);
						break;
					}
					
					
					default:
					{
						break;
					}
					
				}
				
			}
		}
		
		
		public global::encode.hash.HashLongestMatchQuickly hash_h1;
		
		public global::encode.hash.HashLongestMatchQuickly hash_h2;
		
		public global::encode.hash.HashLongestMatchQuickly hash_h3;
		
		public global::encode.hash.HashLongestMatchQuickly hash_h4;
		
		public global::encode.hash.HashLongestMatch hash_h5;
		
		public global::encode.hash.HashLongestMatch hash_h6;
		
		public global::encode.hash.HashLongestMatch hash_h7;
		
		public global::encode.hash.HashLongestMatch hash_h8;
		
		public global::encode.hash.HashLongestMatch hash_h9;
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 695309794:
					{
						this.hash_h9 = ((global::encode.hash.HashLongestMatch) (@value) );
						return @value;
					}
					
					
					case 695309793:
					{
						this.hash_h8 = ((global::encode.hash.HashLongestMatch) (@value) );
						return @value;
					}
					
					
					case 695309792:
					{
						this.hash_h7 = ((global::encode.hash.HashLongestMatch) (@value) );
						return @value;
					}
					
					
					case 695309791:
					{
						this.hash_h6 = ((global::encode.hash.HashLongestMatch) (@value) );
						return @value;
					}
					
					
					case 695309790:
					{
						this.hash_h5 = ((global::encode.hash.HashLongestMatch) (@value) );
						return @value;
					}
					
					
					case 695309789:
					{
						this.hash_h4 = ((global::encode.hash.HashLongestMatchQuickly) (@value) );
						return @value;
					}
					
					
					case 695309788:
					{
						this.hash_h3 = ((global::encode.hash.HashLongestMatchQuickly) (@value) );
						return @value;
					}
					
					
					case 695309787:
					{
						this.hash_h2 = ((global::encode.hash.HashLongestMatchQuickly) (@value) );
						return @value;
					}
					
					
					case 695309786:
					{
						this.hash_h1 = ((global::encode.hash.HashLongestMatchQuickly) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 695309794:
					{
						return this.hash_h9;
					}
					
					
					case 695309793:
					{
						return this.hash_h8;
					}
					
					
					case 695309792:
					{
						return this.hash_h7;
					}
					
					
					case 695309791:
					{
						return this.hash_h6;
					}
					
					
					case 695309790:
					{
						return this.hash_h5;
					}
					
					
					case 695309789:
					{
						return this.hash_h4;
					}
					
					
					case 695309788:
					{
						return this.hash_h3;
					}
					
					
					case 695309787:
					{
						return this.hash_h2;
					}
					
					
					case 695309786:
					{
						return this.hash_h1;
					}
					
					
					case 1360649653:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "PrependCustomDictionary", 1360649653)) );
					}
					
					
					case 1719859607:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "WarmupHashHashLongestMatch", 1719859607)) );
					}
					
					
					case 1113577955:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "WarmupHashHashLongestMatchQuickly", 1113577955)) );
					}
					
					
					case 815032112:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Init", 815032112)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 1360649653:
					{
						this.PrependCustomDictionary(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((int) (global::haxe.lang.Runtime.toInt(dynargs[1])) ), ((uint[]) (dynargs[2]) ));
						break;
					}
					
					
					case 1719859607:
					{
						this.WarmupHashHashLongestMatch(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((uint[]) (dynargs[1]) ), ((global::encode.hash.HashLongestMatch) (dynargs[2]) ));
						break;
					}
					
					
					case 1113577955:
					{
						this.WarmupHashHashLongestMatchQuickly(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((uint[]) (dynargs[1]) ), ((global::encode.hash.HashLongestMatchQuickly) (dynargs[2]) ));
						break;
					}
					
					
					case 815032112:
					{
						this.Init(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("hash_h9");
			baseArr.push("hash_h8");
			baseArr.push("hash_h7");
			baseArr.push("hash_h6");
			baseArr.push("hash_h5");
			baseArr.push("hash_h4");
			baseArr.push("hash_h3");
			baseArr.push("hash_h2");
			baseArr.push("hash_h1");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


