// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace encode.block_splitter {
	public class BlockSplitIterator : global::haxe.lang.HxObject {
		
		public BlockSplitIterator(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public BlockSplitIterator(global::encode.metablock.BlockSplit split) {
			global::encode.block_splitter.BlockSplitIterator.__hx_ctor_encode_block_splitter_BlockSplitIterator(this, split);
		}
		
		
		public static void __hx_ctor_encode_block_splitter_BlockSplitIterator(global::encode.block_splitter.BlockSplitIterator __hx_this, global::encode.metablock.BlockSplit split) {
			__hx_this.split_ = split;
			__hx_this.idx_ = 0;
			__hx_this.type_ = 0;
			__hx_this.length_ = 0;
			if (( split.lengths.length != 0 )) {
				__hx_this.length_ = split.lengths[0];
			}
			
		}
		
		
		public virtual void Next() {
			if (( this.length_ == 0 )) {
				 ++ this.idx_;
				this.type_ = this.split_.types[this.idx_];
				this.length_ = this.split_.lengths[this.idx_];
			}
			
			 -- this.length_;
		}
		
		
		public global::encode.metablock.BlockSplit split_;
		
		public int idx_;
		
		public int type_;
		
		public int length_;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 127579321:
					{
						this.length_ = ((int) (@value) );
						return @value;
					}
					
					
					case 449540197:
					{
						this.type_ = ((int) (@value) );
						return @value;
					}
					
					
					case 1169404290:
					{
						this.idx_ = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 127579321:
					{
						this.length_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 449540197:
					{
						this.type_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1169404290:
					{
						this.idx_ = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1067357253:
					{
						this.split_ = ((global::encode.metablock.BlockSplit) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 127579321:
					{
						return this.length_;
					}
					
					
					case 449540197:
					{
						return this.type_;
					}
					
					
					case 1169404290:
					{
						return this.idx_;
					}
					
					
					case 1067357253:
					{
						return this.split_;
					}
					
					
					case 870035731:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "Next", 870035731)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 127579321:
					{
						return ((double) (this.length_) );
					}
					
					
					case 449540197:
					{
						return ((double) (this.type_) );
					}
					
					
					case 1169404290:
					{
						return ((double) (this.idx_) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, global::Array dynargs) {
			unchecked {
				switch (hash) {
					case 870035731:
					{
						this.Next();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("length_");
			baseArr.push("type_");
			baseArr.push("idx_");
			baseArr.push("split_");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


