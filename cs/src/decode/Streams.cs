// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace decode {
	public class Streams : global::haxe.lang.HxObject {
		
		public Streams(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Streams() {
			global::decode.Streams.__hx_ctor_decode_Streams(this);
		}
		
		
		public static void __hx_ctor_decode_Streams(global::decode.Streams __hx_this) {
		}
		
		
		public static int BrotliRead(global::decode.streams.BrotliInput input, uint[] buf, int buf_off, int len) {
			return ((int) (global::haxe.lang.Runtime.toInt(((object) (((global::haxe.lang.Function) (input.cb_) ).__hx_invoke4_o(default(double), input.data_, default(double), buf, ((double) (buf_off) ), global::haxe.lang.Runtime.undefined, ((double) (len) ), global::haxe.lang.Runtime.undefined)) ))) );
		}
		
		
		public static int BrotliWrite(global::decode.streams.BrotliOutput @out, uint[] buf, int buf_off, int len) {
			return ((int) (global::haxe.lang.Runtime.toInt(((object) (((global::haxe.lang.Function) (@out.cb_) ).__hx_invoke4_o(default(double), @out.data_, default(double), buf, ((double) (buf_off) ), global::haxe.lang.Runtime.undefined, ((double) (len) ), global::haxe.lang.Runtime.undefined)) ))) );
		}
		
		
		public static int BrotliMemInputFunction(global::decode.streams.BrotliMemInput data, uint[] buf, int buf_off, int count) {
			unchecked {
				if (((bool) (( data.pos > data.length )) )) {
					return -1;
				}
				
				if (((bool) (( ((uint) (( data.pos + count )) ) > data.length )) )) {
					count = ((int) (((uint) (( data.length - data.pos )) )) );
				}
				
				global::DefaultFunctions.memcpyVectorArray(buf, buf_off, data.buffer, ((int) (((uint) (( data.pos + 0 )) )) ), count);
				data.pos = ((uint) (( data.pos + count )) );
				return count;
			}
		}
		
		
		public static global::decode.streams.BrotliInput BrotliInitMemInput(global::Array<uint> buffer, int length) {
			global::decode.streams.BrotliInput input = new global::decode.streams.BrotliInput();
			global::decode.streams.BrotliMemInput mem_input = new global::decode.streams.BrotliMemInput();
			mem_input.buffer = buffer;
			mem_input.length = ((uint) (length) );
			mem_input.pos = ((uint) (0) );
			input.cb_ = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::decode.Streams), "BrotliMemInputFunction", 1638974175)) );
			input.data_ = mem_input;
			return input;
		}
		
		
		public static int BrotliMemOutputFunction(global::decode.streams.BrotliMemOutput data, uint[] buf, int buf_off, int count) {
			global::DefaultFunctions.memcpyArrayVector(data.buffer, ((int) (((uint) (( data.pos + 0 )) )) ), buf, buf_off, count);
			data.pos = ((uint) (( data.pos + count )) );
			return count;
		}
		
		
		public static global::decode.streams.BrotliOutput BrotliInitMemOutput(global::Array<uint> buffer) {
			global::decode.streams.BrotliOutput output = new global::decode.streams.BrotliOutput();
			global::decode.streams.BrotliMemOutput mem_output = new global::decode.streams.BrotliMemOutput();
			mem_output.buffer = buffer;
			mem_output.pos = ((uint) (0) );
			output.cb_ = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::decode.Streams), "BrotliMemOutputFunction", 30362364)) );
			output.data_ = mem_output;
			return output;
		}
		
		
		public static int BrotliFileInputFunction(global::sys.io.FileInput data, uint[] buf, int buf_off, int count) {
			global::haxe.io.Bytes bytes = global::haxe.io.Bytes.alloc(count);
			int size = data.readBytes(bytes, 0, count);
			{
				int _g1 = 0;
				while (( _g1 < size )) {
					int i = _g1++;
					((uint[]) (buf) )[( buf_off + i )] = ((uint) (((int) (bytes.b[i]) )) );
				}
				
			}
			
			return size;
		}
		
		
		public static global::decode.streams.BrotliInput BrotliFileInput(global::sys.io.FileInput f) {
			global::decode.streams.BrotliInput input = new global::decode.streams.BrotliInput();
			input.cb_ = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::decode.Streams), "BrotliFileInputFunction", 675059700)) );
			input.data_ = f;
			return input;
		}
		
		
		public static int BrotliFileOutputFunction(global::sys.io.FileOutput data, uint[] buf, int buf_off, int count) {
			global::haxe.io.Bytes bytes = global::haxe.io.Bytes.alloc(count);
			{
				int _g1 = 0;
				while (( _g1 < count )) {
					int i = _g1++;
					bytes.b[i] = ((byte) (((uint) (((uint[]) (buf) )[i]) )) );
				}
				
			}
			
			data.write(bytes);
			return bytes.length;
		}
		
		
		public static global::decode.streams.BrotliOutput BrotliFileOutput(global::sys.io.FileOutput f) {
			global::decode.streams.BrotliOutput @out = new global::decode.streams.BrotliOutput();
			@out.cb_ = ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::decode.Streams), "BrotliFileOutputFunction", 1973282887)) );
			@out.data_ = f;
			return @out;
		}
		
		
	}
}


