// Generated by Haxe 3.4.0

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace decode.huffman {
	public class HuffmanTreeGroup : global::haxe.lang.HxObject {
		
		public HuffmanTreeGroup(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public HuffmanTreeGroup() {
			global::decode.huffman.HuffmanTreeGroup.__hx_ctor_decode_huffman_HuffmanTreeGroup(this);
		}
		
		
		public static void __hx_ctor_decode_huffman_HuffmanTreeGroup(global::decode.huffman.HuffmanTreeGroup __hx_this) {
		}
		
		
		public int alphabet_size;
		
		public int num_htrees;
		
		public global::decode.huffman.HuffmanCode[] codes;
		
		public global::Array<object> htrees;
		
		public global::Array<int> htrees_off;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2089175046:
					{
						this.num_htrees = ((int) (@value) );
						return @value;
					}
					
					
					case 1171019533:
					{
						this.alphabet_size = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1817375453:
					{
						this.htrees_off = ((global::Array<int>) (global::Array<object>.__hx_cast<int>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 725622765:
					{
						this.htrees = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1247172262:
					{
						this.codes = ((global::decode.huffman.HuffmanCode[]) (@value) );
						return @value;
					}
					
					
					case 2089175046:
					{
						this.num_htrees = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1171019533:
					{
						this.alphabet_size = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1817375453:
					{
						return this.htrees_off;
					}
					
					
					case 725622765:
					{
						return this.htrees;
					}
					
					
					case 1247172262:
					{
						return this.codes;
					}
					
					
					case 2089175046:
					{
						return this.num_htrees;
					}
					
					
					case 1171019533:
					{
						return this.alphabet_size;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2089175046:
					{
						return ((double) (this.num_htrees) );
					}
					
					
					case 1171019533:
					{
						return ((double) (this.alphabet_size) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("htrees_off");
			baseArr.push("htrees");
			baseArr.push("codes");
			baseArr.push("num_htrees");
			baseArr.push("alphabet_size");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


