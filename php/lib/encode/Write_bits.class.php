<?php

// Generated by Haxe 3.4.0
class encode_Write_bits {
	public function __construct() {}
	static function WriteBits($n_bits, $bits, $pos, $array) {
		$array_pos_off = $pos->a[0] >> 3;
		$bits_reserved_in_first_byte = $pos->a[0] & 7;
		$bits = $bits << $bits_reserved_in_first_byte;
		{
			$array_pos_off = $array_pos_off + 1;
			$_g = $array_pos_off - 1;
			$array[$_g] = $array[$_g] | $bits & 255;
		}
		$bits_left_to_write = $n_bits - 8 + $bits_reserved_in_first_byte;
		while($bits_left_to_write >= 1) {
			$bits = _hx_shift_right($bits, 8);
			{
				$array_pos_off = $array_pos_off + 1;
				$array[$array_pos_off - 1] = $bits & 255;
			}
			$bits_left_to_write = $bits_left_to_write - 8;
		}
		$array[$array_pos_off] = 0;
		$pos[0] = $pos->a[0] + $n_bits;
	}
	static function WriteBitsPrepareStorage($pos, $array) {
		$array[$pos >> 3] = 0;
	}
	function __toString() { return 'encode.Write_bits'; }
}
