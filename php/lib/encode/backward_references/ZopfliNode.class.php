<?php

// Generated by Haxe 3.4.0
class encode_backward_references_ZopfliNode {
	public function __construct() {
		if(!php_Boot::$skip_constructor) {
		$this->distance_cache = FunctionMalloc::mallocInt(4);
		$this->length = 1;
		$this->distance = 0;
		$this->distance_code = 0;
		$this->length_code = 0;
		$this->insert_length = 0;
		$this->cost = encode_Backward_references::$kInfinity;
	}}
	public $length;
	public $distance;
	public $distance_code;
	public $distance_cache;
	public $length_code;
	public $insert_length;
	public $cost;
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'encode.backward_references.ZopfliNode'; }
}
