<?php

// Generated by Haxe 3.4.0
class encode_Static_dict {
	public function __construct() {}
	static $kMaxDictionaryMatchLen = 37;
	static $kInvalidMatch = 268435455;
	static function Hash_1($data, $data_off) {
		return _hx_shift_right(_hx_shift_right(($data[$data_off + 3] << 24 | $data[$data_off + 2] << 16 | $data[$data_off + 1] << 8 | $data[$data_off]) * 506832829, 32), 17);
	}
	static function AddMatch($distance, $len, $len_code, $matches) {
		$matches[$len] = Std::int(Math::min($matches[$len], ($distance << 5) + $len_code));
	}
	static function DictMatchLength($data, $data_off, $id, $len) {
		return encode_Find_match_length::FindMatchLengthWithLimit(encode_Dictionary::$kBrotliDictionary, encode_Dictionary::$kBrotliDictionaryOffsetsByLength->a[$len] + $len * $id, $data, $data_off, $len);
	}
	static function IsMatch($w, $data, $data_off) {
		$offset = encode_Dictionary::$kBrotliDictionaryOffsetsByLength[$w->len] + $w->len * $w->idx;
		$dict = encode_Dictionary::$kBrotliDictionary;
		if($w->transform === 0) {
			return encode_Find_match_length::FindMatchLengthWithLimit($dict, $offset, $data, $data_off, $w->len) === $w->len;
		} else {
			if($w->transform === 10) {
				$tmp = null;
				$tmp1 = null;
				$a = $dict[$offset];
				$b = _hx_char_code_at("a", 0);
				$aNeg = $a < 0;
				$tmp2 = null;
				if($aNeg !== $b < 0) {
					$tmp2 = $aNeg;
				} else {
					$tmp2 = $a >= $b;
				}
				if($tmp2) {
					$a1 = $dict[$offset];
					$b1 = _hx_char_code_at("z", 0);
					$aNeg1 = $b1 < 0;
					if($aNeg1 !== $a1 < 0) {
						$tmp1 = $aNeg1;
					} else {
						$tmp1 = $b1 >= $a1;
					}
				} else {
					$tmp1 = false;
				}
				if($tmp1) {
					$tmp = ($dict[$offset] ^ 32) === $data[$data_off];
				} else {
					$tmp = false;
				}
				if($tmp) {
					return encode_Find_match_length::FindMatchLengthWithLimit($dict, $offset + 1, $data, $data_off + 1, $w->len - 1) === $w->len - 1;
				} else {
					return false;
				}
			} else {
				{
					$_g1 = 0;
					$_g = $w->len;
					while($_g1 < $_g) {
						$_g1 = $_g1 + 1;
						$i = $_g1 - 1;
						$tmp3 = null;
						$a2 = $dict[$offset + $i];
						$b2 = _hx_char_code_at("a", 0);
						$aNeg2 = $a2 < 0;
						$tmp4 = null;
						if($aNeg2 !== $b2 < 0) {
							$tmp4 = $aNeg2;
						} else {
							$tmp4 = $a2 >= $b2;
						}
						if($tmp4) {
							$a3 = $dict[$offset + $i];
							$b3 = _hx_char_code_at("z", 0);
							$aNeg3 = $b3 < 0;
							if($aNeg3 !== $a3 < 0) {
								$tmp3 = $aNeg3;
							} else {
								$tmp3 = $b3 >= $a3;
							}
							unset($b3,$aNeg3,$a3);
						} else {
							$tmp3 = false;
						}
						if($tmp3) {
							if(($dict[$offset + $i] ^ 32) !== $data[$data_off + $i]) {
								return false;
							}
						} else {
							if($dict[$offset + $i] !== $data[$data_off + $i]) {
								return false;
							}
						}
						unset($tmp4,$tmp3,$i,$b2,$aNeg2,$a2);
					}
				}
				return true;
			}
		}
	}
	static function FindAllStaticDictionaryMatches($data, $data_off, $min_length, $matches, $matches_off) {
		$found_match = false;
		$key = encode_Static_dict::Hash_1($data, $data_off);
		$bucket = encode_Static_dict_lut::$kStaticDictionaryBuckets[$key];
		if($bucket !== 0) {
			$num = $bucket & 255;
			$offset = _hx_shift_right($bucket, 8);
			{
				$_g1 = 0;
				while($_g1 < $num) {
					$_g1 = $_g1 + 1;
					$w = encode_Static_dict_lut::$kStaticDictionaryWords[$offset + ($_g1 - 1)];
					$l = $w->len;
					$n = 1 << encode_Dictionary::$kBrotliDictionarySizeBitsByLength[$l];
					$id = $w->idx;
					if($w->transform === 0) {
						$matchlen = encode_Static_dict::DictMatchLength($data, $data_off, $id, $l);
						if($matchlen === $l) {
							encode_Static_dict::AddMatch($id, $l, $l, $matches);
							$found_match = true;
						}
						if($matchlen >= $l - 1) {
							encode_Static_dict::AddMatch($id + 12 * $n, $l - 1, $l, $matches);
							$tmp = null;
							$tmp1 = null;
							$tmp2 = null;
							$b = _hx_char_code_at("i", 0);
							if($data[$data_off + $l - 1] === $b) {
								$b1 = _hx_char_code_at("n", 0);
								$tmp2 = $data[$data_off + $l] === $b1;
								unset($b1);
							} else {
								$tmp2 = false;
							}
							if($tmp2) {
								$b2 = _hx_char_code_at("g", 0);
								$tmp1 = $data[$data_off + $l + 1] === $b2;
								unset($b2);
							} else {
								$tmp1 = false;
							}
							if($tmp1) {
								$b3 = _hx_char_code_at(" ", 0);
								$tmp = $data[$data_off + $l + 2] === $b3;
								unset($b3);
							} else {
								$tmp = false;
							}
							if($tmp) {
								encode_Static_dict::AddMatch($id + 49 * $n, $l + 3, $l, $matches);
							}
							$found_match = true;
							unset($tmp2,$tmp1,$tmp,$b);
						}
						{
							$_g3 = Std::int(Math::max($min_length, $l - 9));
							$_g2 = Std::int(Math::min($matchlen, $l - 2)) + 1;
							while($_g3 < $_g2) {
								$_g3 = $_g3 + 1;
								$len = $_g3 - 1;
								encode_Static_dict::AddMatch($id + encode_Transform::$kOmitLastNTransforms->a[$l - $len] * $n, $len, $l, $matches);
								$found_match = true;
								unset($len);
							}
							unset($_g3,$_g2);
						}
						if($matchlen < $l) {
							continue;
						}
						$s_off = $data_off + $l;
						$b4 = _hx_char_code_at(" ", 0);
						if($data[$s_off] === $b4) {
							encode_Static_dict::AddMatch($id + $n, $l + 1, $l, $matches);
							$b5 = _hx_char_code_at("a", 0);
							if($data[$s_off + 1] === $b5) {
								$b6 = _hx_char_code_at(" ", 0);
								if($data[$s_off + 2] === $b6) {
									encode_Static_dict::AddMatch($id + 28 * $n, $l + 3, $l, $matches);
								} else {
									$b7 = _hx_char_code_at("s", 0);
									if($data[$s_off + 2] === $b7) {
										$b8 = _hx_char_code_at(" ", 0);
										if($data[$s_off + 3] === $b8) {
											encode_Static_dict::AddMatch($id + 46 * $n, $l + 4, $l, $matches);
										}
										unset($b8);
									} else {
										$b9 = _hx_char_code_at("t", 0);
										if($data[$s_off + 2] === $b9) {
											$b10 = _hx_char_code_at(" ", 0);
											if($data[$s_off + 3] === $b10) {
												encode_Static_dict::AddMatch($id + 60 * $n, $l + 4, $l, $matches);
											}
											unset($b10);
										} else {
											$b11 = _hx_char_code_at("n", 0);
											if($data[$s_off + 2] === $b11) {
												$tmp3 = null;
												$b12 = _hx_char_code_at("d", 0);
												if($data[$s_off + 3] === $b12) {
													$b13 = _hx_char_code_at(" ", 0);
													$tmp3 = $data[$s_off + 4] === $b13;
													unset($b13);
												} else {
													$tmp3 = false;
												}
												if($tmp3) {
													encode_Static_dict::AddMatch($id + 10 * $n, $l + 5, $l, $matches);
												}
												unset($tmp3,$b12);
											}
											unset($b11);
										}
										unset($b9);
									}
									unset($b7);
								}
								unset($b6);
							} else {
								$b14 = _hx_char_code_at("b", 0);
								if($data[$s_off + 1] === $b14) {
									$tmp4 = null;
									$b15 = _hx_char_code_at("y", 0);
									if($data[$s_off + 2] === $b15) {
										$b16 = _hx_char_code_at(" ", 0);
										$tmp4 = $data[$s_off + 3] === $b16;
										unset($b16);
									} else {
										$tmp4 = false;
									}
									if($tmp4) {
										encode_Static_dict::AddMatch($id + 38 * $n, $l + 4, $l, $matches);
									}
									unset($tmp4,$b15);
								} else {
									$b17 = _hx_char_code_at("i", 0);
									if($data[$s_off + 1] === $b17) {
										$b18 = _hx_char_code_at("n", 0);
										if($data[$s_off + 2] === $b18) {
											$b19 = _hx_char_code_at(" ", 0);
											if($data[$s_off + 3] === $b19) {
												encode_Static_dict::AddMatch($id + 16 * $n, $l + 4, $l, $matches);
											}
											unset($b19);
										} else {
											$b20 = _hx_char_code_at("s", 0);
											if($data[$s_off + 2] === $b20) {
												$b21 = _hx_char_code_at(" ", 0);
												if($data[$s_off + 3] === $b21) {
													encode_Static_dict::AddMatch($id + 47 * $n, $l + 4, $l, $matches);
												}
												unset($b21);
											}
											unset($b20);
										}
										unset($b18);
									} else {
										$b22 = _hx_char_code_at("f", 0);
										if($data[$s_off + 1] === $b22) {
											$b23 = _hx_char_code_at("o", 0);
											if($data[$s_off + 2] === $b23) {
												$tmp5 = null;
												$b24 = _hx_char_code_at("r", 0);
												if($data[$s_off + 3] === $b24) {
													$b25 = _hx_char_code_at(" ", 0);
													$tmp5 = $data[$s_off + 4] === $b25;
													unset($b25);
												} else {
													$tmp5 = false;
												}
												if($tmp5) {
													encode_Static_dict::AddMatch($id + 25 * $n, $l + 5, $l, $matches);
												}
												unset($tmp5,$b24);
											} else {
												$b26 = _hx_char_code_at("r", 0);
												if($data[$s_off + 2] === $b26) {
													$tmp6 = null;
													$tmp7 = null;
													$b27 = _hx_char_code_at("o", 0);
													if($data[$s_off + 3] === $b27) {
														$b28 = _hx_char_code_at("m", 0);
														$tmp7 = $data[$s_off + 4] === $b28;
														unset($b28);
													} else {
														$tmp7 = false;
													}
													if($tmp7) {
														$b29 = _hx_char_code_at(" ", 0);
														$tmp6 = $data[$s_off + 5] === $b29;
														unset($b29);
													} else {
														$tmp6 = false;
													}
													if($tmp6) {
														encode_Static_dict::AddMatch($id + 37 * $n, $l + 6, $l, $matches);
													}
													unset($tmp7,$tmp6,$b27);
												}
												unset($b26);
											}
											unset($b23);
										} else {
											$b30 = _hx_char_code_at("o", 0);
											if($data[$s_off + 1] === $b30) {
												$b31 = _hx_char_code_at("f", 0);
												if($data[$s_off + 2] === $b31) {
													$b32 = _hx_char_code_at(" ", 0);
													if($data[$s_off + 3] === $b32) {
														encode_Static_dict::AddMatch($id + 8 * $n, $l + 4, $l, $matches);
													}
													unset($b32);
												} else {
													$b33 = _hx_char_code_at("n", 0);
													if($data[$s_off + 2] === $b33) {
														$b34 = _hx_char_code_at(" ", 0);
														if($data[$s_off + 3] === $b34) {
															encode_Static_dict::AddMatch($id + 45 * $n, $l + 4, $l, $matches);
														}
														unset($b34);
													}
													unset($b33);
												}
												unset($b31);
											} else {
												$b35 = _hx_char_code_at("n", 0);
												if($data[$s_off + 1] === $b35) {
													$tmp8 = null;
													$tmp9 = null;
													$b36 = _hx_char_code_at("o", 0);
													if($data[$s_off + 2] === $b36) {
														$b37 = _hx_char_code_at("t", 0);
														$tmp9 = $data[$s_off + 3] === $b37;
														unset($b37);
													} else {
														$tmp9 = false;
													}
													if($tmp9) {
														$b38 = _hx_char_code_at(" ", 0);
														$tmp8 = $data[$s_off + 4] === $b38;
														unset($b38);
													} else {
														$tmp8 = false;
													}
													if($tmp8) {
														encode_Static_dict::AddMatch($id + 80 * $n, $l + 5, $l, $matches);
													}
													unset($tmp9,$tmp8,$b36);
												} else {
													$b39 = _hx_char_code_at("t", 0);
													if($data[$s_off + 1] === $b39) {
														$b40 = _hx_char_code_at("h", 0);
														if($data[$s_off + 2] === $b40) {
															$b41 = _hx_char_code_at("e", 0);
															if($data[$s_off + 3] === $b41) {
																$b42 = _hx_char_code_at(" ", 0);
																if($data[$s_off + 4] === $b42) {
																	encode_Static_dict::AddMatch($id + 5 * $n, $l + 5, $l, $matches);
																}
																unset($b42);
															} else {
																$b43 = _hx_char_code_at("a", 0);
																if($data[$s_off + 3] === $b43) {
																	$tmp10 = null;
																	$b44 = _hx_char_code_at("t", 0);
																	if($data[$s_off + 4] === $b44) {
																		$b45 = _hx_char_code_at(" ", 0);
																		$tmp10 = $data[$s_off + 5] === $b45;
																		unset($b45);
																	} else {
																		$tmp10 = false;
																	}
																	if($tmp10) {
																		encode_Static_dict::AddMatch($id + 29 * $n, $l + 6, $l, $matches);
																	}
																	unset($tmp10,$b44);
																}
																unset($b43);
															}
															unset($b41);
														} else {
															$b46 = _hx_char_code_at("o", 0);
															if($data[$s_off + 2] === $b46) {
																$b47 = _hx_char_code_at(" ", 0);
																if($data[$s_off + 3] === $b47) {
																	encode_Static_dict::AddMatch($id + 17 * $n, $l + 4, $l, $matches);
																}
																unset($b47);
															}
															unset($b46);
														}
														unset($b40);
													} else {
														$b48 = _hx_char_code_at("w", 0);
														if($data[$s_off + 1] === $b48) {
															$tmp11 = null;
															$tmp12 = null;
															$tmp13 = null;
															$b49 = _hx_char_code_at("i", 0);
															if($data[$s_off + 2] === $b49) {
																$b50 = _hx_char_code_at("t", 0);
																$tmp13 = $data[$s_off + 3] === $b50;
																unset($b50);
															} else {
																$tmp13 = false;
															}
															if($tmp13) {
																$b51 = _hx_char_code_at("h", 0);
																$tmp12 = $data[$s_off + 4] === $b51;
																unset($b51);
															} else {
																$tmp12 = false;
															}
															if($tmp12) {
																$b52 = _hx_char_code_at(" ", 0);
																$tmp11 = $data[$s_off + 5] === $b52;
																unset($b52);
															} else {
																$tmp11 = false;
															}
															if($tmp11) {
																encode_Static_dict::AddMatch($id + 35 * $n, $l + 6, $l, $matches);
															}
															unset($tmp13,$tmp12,$tmp11,$b49);
														}
														unset($b48);
													}
													unset($b39);
												}
												unset($b35);
											}
											unset($b30);
										}
										unset($b22);
									}
									unset($b17);
								}
								unset($b14);
							}
							unset($b5);
						} else {
							$b53 = _hx_char_code_at("\"", 0);
							if($data[$s_off] === $b53) {
								encode_Static_dict::AddMatch($id + 19 * $n, $l + 1, $l, $matches);
								$b54 = _hx_char_code_at(">", 0);
								if($data[$s_off + 1] === $b54) {
									encode_Static_dict::AddMatch($id + 21 * $n, $l + 2, $l, $matches);
								}
								unset($b54);
							} else {
								$b55 = _hx_char_code_at(".", 0);
								if($data[$s_off] === $b55) {
									encode_Static_dict::AddMatch($id + 20 * $n, $l + 1, $l, $matches);
									$b56 = _hx_char_code_at(" ", 0);
									if($data[$s_off + 1] === $b56) {
										encode_Static_dict::AddMatch($id + 31 * $n, $l + 2, $l, $matches);
										$tmp14 = null;
										$b57 = _hx_char_code_at("T", 0);
										if($data[$s_off + 2] === $b57) {
											$b58 = _hx_char_code_at("h", 0);
											$tmp14 = $data[$s_off + 3] === $b58;
											unset($b58);
										} else {
											$tmp14 = false;
										}
										if($tmp14) {
											$b59 = _hx_char_code_at("e", 0);
											if($data[$s_off + 4] === $b59) {
												$b60 = _hx_char_code_at(" ", 0);
												if($data[$s_off + 5] === $b60) {
													encode_Static_dict::AddMatch($id + 43 * $n, $l + 6, $l, $matches);
												}
												unset($b60);
											} else {
												$b61 = _hx_char_code_at("i", 0);
												if($data[$s_off + 4] === $b61) {
													$tmp15 = null;
													$b62 = _hx_char_code_at("s", 0);
													if($data[$s_off + 5] === $b62) {
														$b63 = _hx_char_code_at(" ", 0);
														$tmp15 = $data[$s_off + 6] === $b63;
														unset($b63);
													} else {
														$tmp15 = false;
													}
													if($tmp15) {
														encode_Static_dict::AddMatch($id + 75 * $n, $l + 7, $l, $matches);
													}
													unset($tmp15,$b62);
												}
												unset($b61);
											}
											unset($b59);
										}
										unset($tmp14,$b57);
									}
									unset($b56);
								} else {
									$b64 = _hx_char_code_at(",", 0);
									if($data[$s_off] === $b64) {
										encode_Static_dict::AddMatch($id + 76 * $n, $l + 1, $l, $matches);
										$b65 = _hx_char_code_at(" ", 0);
										if($data[$s_off + 1] === $b65) {
											encode_Static_dict::AddMatch($id + 14 * $n, $l + 2, $l, $matches);
										}
										unset($b65);
									} else {
										$b66 = _hx_char_code_at("\x0A", 0);
										if($data[$s_off] === $b66) {
											encode_Static_dict::AddMatch($id + 22 * $n, $l + 1, $l, $matches);
											$b67 = _hx_char_code_at("\x09", 0);
											if($data[$s_off + 1] === $b67) {
												encode_Static_dict::AddMatch($id + 50 * $n, $l + 2, $l, $matches);
											}
											unset($b67);
										} else {
											$b68 = _hx_char_code_at("]", 0);
											if($data[$s_off] === $b68) {
												encode_Static_dict::AddMatch($id + 24 * $n, $l + 1, $l, $matches);
											} else {
												$b69 = _hx_char_code_at("'", 0);
												if($data[$s_off] === $b69) {
													encode_Static_dict::AddMatch($id + 36 * $n, $l + 1, $l, $matches);
												} else {
													$b70 = _hx_char_code_at(":", 0);
													if($data[$s_off] === $b70) {
														encode_Static_dict::AddMatch($id + 51 * $n, $l + 1, $l, $matches);
													} else {
														$b71 = _hx_char_code_at("(", 0);
														if($data[$s_off] === $b71) {
															encode_Static_dict::AddMatch($id + 57 * $n, $l + 1, $l, $matches);
														} else {
															$b72 = _hx_char_code_at("=", 0);
															if($data[$s_off] === $b72) {
																$b73 = _hx_char_code_at("\"", 0);
																if($data[$s_off + 1] === $b73) {
																	encode_Static_dict::AddMatch($id + 70 * $n, $l + 2, $l, $matches);
																} else {
																	$b74 = _hx_char_code_at("'", 0);
																	if($data[$s_off + 1] === $b74) {
																		encode_Static_dict::AddMatch($id + 86 * $n, $l + 2, $l, $matches);
																	}
																	unset($b74);
																}
																unset($b73);
															} else {
																$b75 = _hx_char_code_at("a", 0);
																if($data[$s_off] === $b75) {
																	$tmp16 = null;
																	$b76 = _hx_char_code_at("l", 0);
																	if($data[$s_off + 1] === $b76) {
																		$b77 = _hx_char_code_at(" ", 0);
																		$tmp16 = $data[$s_off + 2] === $b77;
																		unset($b77);
																	} else {
																		$tmp16 = false;
																	}
																	if($tmp16) {
																		encode_Static_dict::AddMatch($id + 84 * $n, $l + 3, $l, $matches);
																	}
																	unset($tmp16,$b76);
																} else {
																	$b78 = _hx_char_code_at("e", 0);
																	if($data[$s_off] === $b78) {
																		$b79 = _hx_char_code_at("d", 0);
																		if($data[$s_off + 1] === $b79) {
																			$b80 = _hx_char_code_at(" ", 0);
																			if($data[$s_off + 2] === $b80) {
																				encode_Static_dict::AddMatch($id + 53 * $n, $l + 3, $l, $matches);
																			}
																			unset($b80);
																		} else {
																			$b81 = _hx_char_code_at("r", 0);
																			if($data[$s_off + 1] === $b81) {
																				$b82 = _hx_char_code_at(" ", 0);
																				if($data[$s_off + 2] === $b82) {
																					encode_Static_dict::AddMatch($id + 82 * $n, $l + 3, $l, $matches);
																				}
																				unset($b82);
																			} else {
																				$b83 = _hx_char_code_at("s", 0);
																				if($data[$s_off + 1] === $b83) {
																					$tmp17 = null;
																					$b84 = _hx_char_code_at("t", 0);
																					if($data[$s_off + 2] === $b84) {
																						$b85 = _hx_char_code_at(" ", 0);
																						$tmp17 = $data[$s_off + 3] === $b85;
																						unset($b85);
																					} else {
																						$tmp17 = false;
																					}
																					if($tmp17) {
																						encode_Static_dict::AddMatch($id + 95 * $n, $l + 4, $l, $matches);
																					}
																					unset($tmp17,$b84);
																				}
																				unset($b83);
																			}
																			unset($b81);
																		}
																		unset($b79);
																	} else {
																		$b86 = _hx_char_code_at("f", 0);
																		if($data[$s_off] === $b86) {
																			$tmp18 = null;
																			$tmp19 = null;
																			$b87 = _hx_char_code_at("u", 0);
																			if($data[$s_off + 1] === $b87) {
																				$b88 = _hx_char_code_at("l", 0);
																				$tmp19 = $data[$s_off + 2] === $b88;
																				unset($b88);
																			} else {
																				$tmp19 = false;
																			}
																			if($tmp19) {
																				$b89 = _hx_char_code_at(" ", 0);
																				$tmp18 = $data[$s_off + 3] === $b89;
																				unset($b89);
																			} else {
																				$tmp18 = false;
																			}
																			if($tmp18) {
																				encode_Static_dict::AddMatch($id + 90 * $n, $l + 4, $l, $matches);
																			}
																			unset($tmp19,$tmp18,$b87);
																		} else {
																			$b90 = _hx_char_code_at("i", 0);
																			if($data[$s_off] === $b90) {
																				$b91 = _hx_char_code_at("v", 0);
																				if($data[$s_off + 1] === $b91) {
																					$tmp20 = null;
																					$b92 = _hx_char_code_at("e", 0);
																					if($data[$s_off + 2] === $b92) {
																						$b93 = _hx_char_code_at(" ", 0);
																						$tmp20 = $data[$s_off + 3] === $b93;
																						unset($b93);
																					} else {
																						$tmp20 = false;
																					}
																					if($tmp20) {
																						encode_Static_dict::AddMatch($id + 92 * $n, $l + 4, $l, $matches);
																					}
																					unset($tmp20,$b92);
																				} else {
																					$b94 = _hx_char_code_at("z", 0);
																					if($data[$s_off + 1] === $b94) {
																						$tmp21 = null;
																						$b95 = _hx_char_code_at("e", 0);
																						if($data[$s_off + 2] === $b95) {
																							$b96 = _hx_char_code_at(" ", 0);
																							$tmp21 = $data[$s_off + 3] === $b96;
																							unset($b96);
																						} else {
																							$tmp21 = false;
																						}
																						if($tmp21) {
																							encode_Static_dict::AddMatch($id + 100 * $n, $l + 4, $l, $matches);
																						}
																						unset($tmp21,$b95);
																					}
																					unset($b94);
																				}
																				unset($b91);
																			} else {
																				$b97 = _hx_char_code_at("l", 0);
																				if($data[$s_off] === $b97) {
																					$b98 = _hx_char_code_at("e", 0);
																					if($data[$s_off + 1] === $b98) {
																						$tmp22 = null;
																						$tmp23 = null;
																						$b99 = _hx_char_code_at("s", 0);
																						if($data[$s_off + 2] === $b99) {
																							$b100 = _hx_char_code_at("s", 0);
																							$tmp23 = $data[$s_off + 3] === $b100;
																							unset($b100);
																						} else {
																							$tmp23 = false;
																						}
																						if($tmp23) {
																							$b101 = _hx_char_code_at(" ", 0);
																							$tmp22 = $data[$s_off + 4] === $b101;
																							unset($b101);
																						} else {
																							$tmp22 = false;
																						}
																						if($tmp22) {
																							encode_Static_dict::AddMatch($id + 93 * $n, $l + 5, $l, $matches);
																						}
																						unset($tmp23,$tmp22,$b99);
																					} else {
																						$b102 = _hx_char_code_at("y", 0);
																						if($data[$s_off + 1] === $b102) {
																							$b103 = _hx_char_code_at(" ", 0);
																							if($data[$s_off + 2] === $b103) {
																								encode_Static_dict::AddMatch($id + 61 * $n, $l + 3, $l, $matches);
																							}
																							unset($b103);
																						}
																						unset($b102);
																					}
																					unset($b98);
																				} else {
																					$b104 = _hx_char_code_at("o", 0);
																					if($data[$s_off] === $b104) {
																						$tmp24 = null;
																						$tmp25 = null;
																						$b105 = _hx_char_code_at("u", 0);
																						if($data[$s_off + 1] === $b105) {
																							$b106 = _hx_char_code_at("s", 0);
																							$tmp25 = $data[$s_off + 2] === $b106;
																							unset($b106);
																						} else {
																							$tmp25 = false;
																						}
																						if($tmp25) {
																							$b107 = _hx_char_code_at(" ", 0);
																							$tmp24 = $data[$s_off + 3] === $b107;
																							unset($b107);
																						} else {
																							$tmp24 = false;
																						}
																						if($tmp24) {
																							encode_Static_dict::AddMatch($id + 106 * $n, $l + 4, $l, $matches);
																						}
																						unset($tmp25,$tmp24,$b105);
																					}
																					unset($b104);
																				}
																				unset($b97);
																			}
																			unset($b90);
																		}
																		unset($b86);
																	}
																	unset($b78);
																}
																unset($b75);
															}
															unset($b72);
														}
														unset($b71);
													}
													unset($b70);
												}
												unset($b69);
											}
											unset($b68);
										}
										unset($b66);
									}
									unset($b64);
								}
								unset($b55);
							}
							unset($b53);
						}
						unset($s_off,$matchlen,$b4);
					} else {
						$t = $w->transform - 10;
						if(!encode_Static_dict::IsMatch($w, $data, $data_off)) {
							continue;
						}
						$tmp26 = null;
						if($t > 0) {
							$tmp26 = 44;
						} else {
							$tmp26 = 9;
						}
						encode_Static_dict::AddMatch($id + $tmp26 * $n, $l, $l, $matches);
						$found_match = true;
						$s_off1 = $data_off + $l;
						$b108 = _hx_char_code_at(" ", 0);
						if($data[$s_off1] === $b108) {
							$tmp27 = null;
							if($t > 0) {
								$tmp27 = 68;
							} else {
								$tmp27 = 4;
							}
							encode_Static_dict::AddMatch($id + $tmp27 * $n, $l + 1, $l, $matches);
							unset($tmp27);
						} else {
							$b109 = _hx_char_code_at("\"", 0);
							if($data[$s_off1] === $b109) {
								$tmp28 = null;
								if($t > 0) {
									$tmp28 = 87;
								} else {
									$tmp28 = 66;
								}
								encode_Static_dict::AddMatch($id + $tmp28 * $n, $l + 1, $l, $matches);
								$b110 = _hx_char_code_at(">", 0);
								if($data[$s_off1 + 1] === $b110) {
									$tmp29 = null;
									if($t > 0) {
										$tmp29 = 97;
									} else {
										$tmp29 = 69;
									}
									encode_Static_dict::AddMatch($id + $tmp29 * $n, $l + 2, $l, $matches);
									unset($tmp29);
								}
								unset($tmp28,$b110);
							} else {
								$b111 = _hx_char_code_at(".", 0);
								if($data[$s_off1] === $b111) {
									$tmp30 = null;
									if($t > 0) {
										$tmp30 = 101;
									} else {
										$tmp30 = 79;
									}
									encode_Static_dict::AddMatch($id + $tmp30 * $n, $l + 1, $l, $matches);
									$b112 = _hx_char_code_at(" ", 0);
									if($data[$s_off1 + 1] === $b112) {
										$tmp31 = null;
										if($t > 0) {
											$tmp31 = 114;
										} else {
											$tmp31 = 88;
										}
										encode_Static_dict::AddMatch($id + $tmp31 * $n, $l + 2, $l, $matches);
										unset($tmp31);
									}
									unset($tmp30,$b112);
								} else {
									$b113 = _hx_char_code_at(",", 0);
									if($data[$s_off1] === $b113) {
										$tmp32 = null;
										if($t > 0) {
											$tmp32 = 112;
										} else {
											$tmp32 = 99;
										}
										encode_Static_dict::AddMatch($id + $tmp32 * $n, $l + 1, $l, $matches);
										$b114 = _hx_char_code_at(" ", 0);
										if($data[$s_off1 + 1] === $b114) {
											$tmp33 = null;
											if($t > 0) {
												$tmp33 = 107;
											} else {
												$tmp33 = 58;
											}
											encode_Static_dict::AddMatch($id + $tmp33 * $n, $l + 2, $l, $matches);
											unset($tmp33);
										}
										unset($tmp32,$b114);
									} else {
										$b115 = _hx_char_code_at("'", 0);
										if($data[$s_off1] === $b115) {
											$tmp34 = null;
											if($t > 0) {
												$tmp34 = 94;
											} else {
												$tmp34 = 74;
											}
											encode_Static_dict::AddMatch($id + $tmp34 * $n, $l + 1, $l, $matches);
											unset($tmp34);
										} else {
											$b116 = _hx_char_code_at("(", 0);
											if($data[$s_off1] === $b116) {
												$tmp35 = null;
												if($t > 0) {
													$tmp35 = 113;
												} else {
													$tmp35 = 78;
												}
												encode_Static_dict::AddMatch($id + $tmp35 * $n, $l + 1, $l, $matches);
												unset($tmp35);
											} else {
												$b117 = _hx_char_code_at("=", 0);
												if($data[$s_off1] === $b117) {
													$b118 = _hx_char_code_at("\"", 0);
													if($data[$s_off1 + 1] === $b118) {
														$tmp36 = null;
														if($t > 0) {
															$tmp36 = 105;
														} else {
															$tmp36 = 104;
														}
														encode_Static_dict::AddMatch($id + $tmp36 * $n, $l + 2, $l, $matches);
														unset($tmp36);
													} else {
														$b119 = _hx_char_code_at("'", 0);
														if($data[$s_off1 + 1] === $b119) {
															$tmp37 = null;
															if($t > 0) {
																$tmp37 = 116;
															} else {
																$tmp37 = 108;
															}
															encode_Static_dict::AddMatch($id + $tmp37 * $n, $l + 2, $l, $matches);
															unset($tmp37);
														}
														unset($b119);
													}
													unset($b118);
												}
												unset($b117);
											}
											unset($b116);
										}
										unset($b115);
									}
									unset($b113);
								}
								unset($b111);
							}
							unset($b109);
						}
						unset($tmp26,$t,$s_off1,$b108);
					}
					unset($w,$n,$l,$id);
				}
			}
		}
		$tmp38 = null;
		$b120 = _hx_char_code_at(" ", 0);
		if($data[$data_off] !== $b120) {
			$b121 = _hx_char_code_at(".", 0);
			$tmp38 = $data[$data_off] === $b121;
		} else {
			$tmp38 = true;
		}
		if($tmp38) {
			$b122 = _hx_char_code_at(" ", 0);
			$is_space = $data[$data_off] === $b122;
			$key = encode_Static_dict::Hash_1($data, $data_off + 1);
			$bucket = encode_Static_dict_lut::$kStaticDictionaryBuckets[$key];
			$num1 = $bucket & 255;
			$offset1 = _hx_shift_right($bucket, 8);
			{
				$_g11 = 0;
				while($_g11 < $num1) {
					$_g11 = $_g11 + 1;
					$w1 = encode_Static_dict_lut::$kStaticDictionaryWords[$offset1 + ($_g11 - 1)];
					$l1 = $w1->len;
					$n1 = 1 << encode_Dictionary::$kBrotliDictionarySizeBitsByLength[$l1];
					$id1 = $w1->idx;
					if($w1->transform === 0) {
						if(!encode_Static_dict::IsMatch($w1, $data, $data_off + 1)) {
							continue;
						}
						$tmp39 = null;
						if($is_space) {
							$tmp39 = 6;
						} else {
							$tmp39 = 32;
						}
						encode_Static_dict::AddMatch($id1 + $tmp39 * $n1, $l1 + 1, $l1, $matches);
						$found_match = true;
						$s_off2 = $data_off + $l1 + 1;
						$b123 = _hx_char_code_at(" ", 0);
						if($data[$s_off2] === $b123) {
							$tmp40 = null;
							if($is_space) {
								$tmp40 = 2;
							} else {
								$tmp40 = 77;
							}
							encode_Static_dict::AddMatch($id1 + $tmp40 * $n1, $l1 + 2, $l1, $matches);
							unset($tmp40);
						} else {
							$b124 = _hx_char_code_at("(", 0);
							if($data[$s_off2] === $b124) {
								$tmp41 = null;
								if($is_space) {
									$tmp41 = 89;
								} else {
									$tmp41 = 67;
								}
								encode_Static_dict::AddMatch($id1 + $tmp41 * $n1, $l1 + 2, $l1, $matches);
								unset($tmp41);
							} else {
								if($is_space) {
									$b125 = _hx_char_code_at(",", 0);
									if($data[$s_off2] === $b125) {
										encode_Static_dict::AddMatch($id1 + 103 * $n1, $l1 + 2, $l1, $matches);
										$b126 = _hx_char_code_at(" ", 0);
										if($data[$s_off2 + 1] === $b126) {
											encode_Static_dict::AddMatch($id1 + 33 * $n1, $l1 + 3, $l1, $matches);
										}
										unset($b126);
									} else {
										$b127 = _hx_char_code_at(".", 0);
										if($data[$s_off2] === $b127) {
											encode_Static_dict::AddMatch($id1 + 71 * $n1, $l1 + 2, $l1, $matches);
											$b128 = _hx_char_code_at(" ", 0);
											if($data[$s_off2 + 1] === $b128) {
												encode_Static_dict::AddMatch($id1 + 52 * $n1, $l1 + 3, $l1, $matches);
											}
											unset($b128);
										} else {
											$b129 = _hx_char_code_at("=", 0);
											if($data[$s_off2] === $b129) {
												$b130 = _hx_char_code_at("\"", 0);
												if($data[$s_off2 + 1] === $b130) {
													encode_Static_dict::AddMatch($id1 + 81 * $n1, $l1 + 3, $l1, $matches);
												} else {
													$b131 = _hx_char_code_at("'", 0);
													if($data[$s_off2 + 1] === $b131) {
														encode_Static_dict::AddMatch($id1 + 98 * $n1, $l1 + 3, $l1, $matches);
													}
													unset($b131);
												}
												unset($b130);
											}
											unset($b129);
										}
										unset($b127);
									}
									unset($b125);
								}
							}
							unset($b124);
						}
						unset($tmp39,$s_off2,$b123);
					} else {
						if($is_space) {
							$t1 = $w1->transform - 10;
							if(!encode_Static_dict::IsMatch($w1, $data, $data_off + 1)) {
								continue;
							}
							$tmp42 = null;
							if($t1 > 0) {
								$tmp42 = 85;
							} else {
								$tmp42 = 30;
							}
							encode_Static_dict::AddMatch($id1 + $tmp42 * $n1, $l1 + 1, $l1, $matches);
							$found_match = true;
							$s_off3 = $data_off + $l1 + 1;
							$b132 = _hx_char_code_at(" ", 0);
							if($data[$s_off3] === $b132) {
								$tmp43 = null;
								if($t1 > 0) {
									$tmp43 = 83;
								} else {
									$tmp43 = 15;
								}
								encode_Static_dict::AddMatch($id1 + $tmp43 * $n1, $l1 + 2, $l1, $matches);
								unset($tmp43);
							} else {
								$b133 = _hx_char_code_at(",", 0);
								if($data[$s_off3] === $b133) {
									if($t1 === 0) {
										encode_Static_dict::AddMatch($id1 + 109 * $n1, $l1 + 2, $l1, $matches);
									}
									$b134 = _hx_char_code_at(" ", 0);
									if($data[$s_off3 + 1] === $b134) {
										$tmp44 = null;
										if($t1 > 0) {
											$tmp44 = 111;
										} else {
											$tmp44 = 65;
										}
										encode_Static_dict::AddMatch($id1 + $tmp44 * $n1, $l1 + 3, $l1, $matches);
										unset($tmp44);
									}
									unset($b134);
								} else {
									$b135 = _hx_char_code_at(".", 0);
									if($data[$s_off3] === $b135) {
										$tmp45 = null;
										if($t1 > 0) {
											$tmp45 = 115;
										} else {
											$tmp45 = 96;
										}
										encode_Static_dict::AddMatch($id1 + $tmp45 * $n1, $l1 + 2, $l1, $matches);
										$b136 = _hx_char_code_at(" ", 0);
										if($data[$s_off3 + 1] === $b136) {
											$tmp46 = null;
											if($t1 > 0) {
												$tmp46 = 117;
											} else {
												$tmp46 = 91;
											}
											encode_Static_dict::AddMatch($id1 + $tmp46 * $n1, $l1 + 3, $l1, $matches);
											unset($tmp46);
										}
										unset($tmp45,$b136);
									} else {
										$b137 = _hx_char_code_at("=", 0);
										if($data[$s_off3] === $b137) {
											$b138 = _hx_char_code_at("\"", 0);
											if($data[$s_off3 + 1] === $b138) {
												$tmp47 = null;
												if($t1 > 0) {
													$tmp47 = 110;
												} else {
													$tmp47 = 118;
												}
												encode_Static_dict::AddMatch($id1 + $tmp47 * $n1, $l1 + 3, $l1, $matches);
												unset($tmp47);
											} else {
												$b139 = _hx_char_code_at("'", 0);
												if($data[$s_off3 + 1] === $b139) {
													$tmp48 = null;
													if($t1 > 0) {
														$tmp48 = 119;
													} else {
														$tmp48 = 120;
													}
													encode_Static_dict::AddMatch($id1 + $tmp48 * $n1, $l1 + 3, $l1, $matches);
													unset($tmp48);
												}
												unset($b139);
											}
											unset($b138);
										}
										unset($b137);
									}
									unset($b135);
								}
								unset($b133);
							}
							unset($tmp42,$t1,$s_off3,$b132);
						}
					}
					unset($w1,$n1,$l1,$id1);
				}
			}
		}
		$tmp49 = null;
		$tmp50 = null;
		$b140 = _hx_char_code_at(" ", 0);
		if($data[$data_off + 1] === $b140) {
			$tmp51 = null;
			$b141 = _hx_char_code_at("e", 0);
			if($data[$data_off] !== $b141) {
				$b142 = _hx_char_code_at("s", 0);
				$tmp51 = $data[$data_off] === $b142;
			} else {
				$tmp51 = true;
			}
			if(!$tmp51) {
				$b143 = _hx_char_code_at(",", 0);
				$tmp50 = $data[$data_off] === $b143;
			} else {
				$tmp50 = true;
			}
		} else {
			$tmp50 = false;
		}
		if(!$tmp50) {
			if($data[$data_off] === 194) {
				$tmp49 = $data[$data_off + 1] === 160;
			} else {
				$tmp49 = false;
			}
		} else {
			$tmp49 = true;
		}
		if($tmp49) {
			$key = encode_Static_dict::Hash_1($data, $data_off + 2);
			$bucket = encode_Static_dict_lut::$kStaticDictionaryBuckets[$key];
			$num2 = $bucket & 255;
			$offset2 = _hx_shift_right($bucket, 8);
			{
				$_g12 = 0;
				while($_g12 < $num2) {
					$_g12 = $_g12 + 1;
					$w2 = encode_Static_dict_lut::$kStaticDictionaryWords[$offset2 + ($_g12 - 1)];
					$l2 = $w2->len;
					$n2 = 1 << encode_Dictionary::$kBrotliDictionarySizeBitsByLength[$l2];
					$id2 = $w2->idx;
					$tmp52 = null;
					if($w2->transform === 0) {
						$tmp52 = encode_Static_dict::IsMatch($w2, $data, $data_off + 2);
					} else {
						$tmp52 = false;
					}
					if($tmp52) {
						if($data[$data_off] === 194) {
							encode_Static_dict::AddMatch($id2 + 102 * $n2, $l2 + 2, $l2, $matches);
							$found_match = true;
						} else {
							$b144 = _hx_char_code_at(" ", 0);
							if($data[$data_off + $l2 + 2] === $b144) {
								$t2 = null;
								$b145 = _hx_char_code_at("e", 0);
								if($data[$data_off] === $b145) {
									$t2 = 18;
								} else {
									$b146 = _hx_char_code_at("s", 0);
									if($data[$data_off] === $b146) {
										$t2 = 7;
									} else {
										$t2 = 13;
									}
									unset($b146);
								}
								encode_Static_dict::AddMatch($id2 + $t2 * $n2, $l2 + 3, $l2, $matches);
								$found_match = true;
								unset($t2,$b145);
							}
							unset($b144);
						}
					}
					unset($w2,$tmp52,$n2,$l2,$id2);
				}
			}
		}
		$tmp53 = null;
		$tmp54 = null;
		$tmp55 = null;
		$tmp56 = null;
		$tmp57 = null;
		$b147 = _hx_char_code_at(" ", 0);
		if($data[$data_off] === $b147) {
			$b148 = _hx_char_code_at("t", 0);
			$tmp57 = $data[$data_off + 1] === $b148;
		} else {
			$tmp57 = false;
		}
		if($tmp57) {
			$b149 = _hx_char_code_at("h", 0);
			$tmp56 = $data[$data_off + 2] === $b149;
		} else {
			$tmp56 = false;
		}
		if($tmp56) {
			$b150 = _hx_char_code_at("e", 0);
			$tmp55 = $data[$data_off + 3] === $b150;
		} else {
			$tmp55 = false;
		}
		if($tmp55) {
			$b151 = _hx_char_code_at(" ", 0);
			$tmp54 = $data[$data_off + 4] === $b151;
		} else {
			$tmp54 = false;
		}
		if(!$tmp54) {
			$tmp58 = null;
			$tmp59 = null;
			$tmp60 = null;
			$b152 = _hx_char_code_at(".", 0);
			if($data[$data_off] === $b152) {
				$b153 = _hx_char_code_at("c", 0);
				$tmp60 = $data[$data_off + 1] === $b153;
			} else {
				$tmp60 = false;
			}
			if($tmp60) {
				$b154 = _hx_char_code_at("o", 0);
				$tmp59 = $data[$data_off + 2] === $b154;
			} else {
				$tmp59 = false;
			}
			if($tmp59) {
				$b155 = _hx_char_code_at("m", 0);
				$tmp58 = $data[$data_off + 3] === $b155;
			} else {
				$tmp58 = false;
			}
			if($tmp58) {
				$b156 = _hx_char_code_at("/", 0);
				$tmp53 = $data[$data_off + 4] === $b156;
			} else {
				$tmp53 = false;
			}
		} else {
			$tmp53 = true;
		}
		if($tmp53) {
			$key = encode_Static_dict::Hash_1($data, $data_off + 5);
			$bucket = encode_Static_dict_lut::$kStaticDictionaryBuckets[$key];
			$num3 = $bucket & 255;
			$offset3 = _hx_shift_right($bucket, 8);
			{
				$_g13 = 0;
				while($_g13 < $num3) {
					$_g13 = $_g13 + 1;
					$w3 = encode_Static_dict_lut::$kStaticDictionaryWords[$offset3 + ($_g13 - 1)];
					$l3 = $w3->len;
					$n3 = 1 << encode_Dictionary::$kBrotliDictionarySizeBitsByLength[$l3];
					$id3 = $w3->idx;
					$tmp61 = null;
					if($w3->transform === 0) {
						$tmp61 = encode_Static_dict::IsMatch($w3, $data, $data_off + 5);
					} else {
						$tmp61 = false;
					}
					if($tmp61) {
						$tmp62 = null;
						$b157 = _hx_char_code_at(" ", 0);
						if($data[$data_off] === $b157) {
							$tmp62 = 41;
						} else {
							$tmp62 = 72;
						}
						encode_Static_dict::AddMatch($id3 + $tmp62 * $n3, $l3 + 5, $l3, $matches);
						$found_match = true;
						$s_off4 = $data_off + $l3 + 5;
						$b158 = _hx_char_code_at(" ", 0);
						if($data[$data_off] === $b158) {
							$tmp63 = null;
							$tmp64 = null;
							$tmp65 = null;
							$b159 = _hx_char_code_at(" ", 0);
							if($data[$s_off4] === $b159) {
								$b160 = _hx_char_code_at("o", 0);
								$tmp65 = $data[$s_off4 + 1] === $b160;
								unset($b160);
							} else {
								$tmp65 = false;
							}
							if($tmp65) {
								$b161 = _hx_char_code_at("f", 0);
								$tmp64 = $data[$s_off4 + 2] === $b161;
								unset($b161);
							} else {
								$tmp64 = false;
							}
							if($tmp64) {
								$b162 = _hx_char_code_at(" ", 0);
								$tmp63 = $data[$s_off4 + 3] === $b162;
								unset($b162);
							} else {
								$tmp63 = false;
							}
							if($tmp63) {
								encode_Static_dict::AddMatch($id3 + 62 * $n3, $l3 + 9, $l3, $matches);
								$tmp66 = null;
								$tmp67 = null;
								$tmp68 = null;
								$b163 = _hx_char_code_at("t", 0);
								if($data[$s_off4 + 4] === $b163) {
									$b164 = _hx_char_code_at("h", 0);
									$tmp68 = $data[$s_off4 + 5] === $b164;
									unset($b164);
								} else {
									$tmp68 = false;
								}
								if($tmp68) {
									$b165 = _hx_char_code_at("e", 0);
									$tmp67 = $data[$s_off4 + 6] === $b165;
									unset($b165);
								} else {
									$tmp67 = false;
								}
								if($tmp67) {
									$b166 = _hx_char_code_at(" ", 0);
									$tmp66 = $data[$s_off4 + 7] === $b166;
									unset($b166);
								} else {
									$tmp66 = false;
								}
								if($tmp66) {
									encode_Static_dict::AddMatch($id3 + 73 * $n3, $l3 + 13, $l3, $matches);
								}
								unset($tmp68,$tmp67,$tmp66,$b163);
							}
							unset($tmp65,$tmp64,$tmp63,$b159);
						}
						unset($tmp62,$s_off4,$b158,$b157);
					}
					unset($w3,$tmp61,$n3,$l3,$id3);
				}
			}
		}
		return $found_match;
	}
	function __toString() { return 'encode.Static_dict'; }
}
