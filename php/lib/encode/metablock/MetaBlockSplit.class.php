<?php

// Generated by Haxe 3.4.0
class encode_metablock_MetaBlockSplit {
	public function __construct() {
		if(!php_Boot::$skip_constructor) {
		$this->distance_histograms = new _hx_array(array());
		$this->command_histograms = new _hx_array(array());
		$this->literal_histograms = new _hx_array(array());
		$this1 = (new _hx_array(array()));
		$this1->length = 0;
		$this->distance_context_map = $this1;
		$this11 = (new _hx_array(array()));
		$this11->length = 0;
		$this->literal_context_map = $this11;
		$this->distance_split = new encode_metablock_BlockSplit();
		$this->command_split = new encode_metablock_BlockSplit();
		$this->literal_split = new encode_metablock_BlockSplit();
	}}
	public $literal_split;
	public $command_split;
	public $distance_split;
	public $literal_context_map;
	public $distance_context_map;
	public $literal_histograms;
	public $command_histograms;
	public $distance_histograms;
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'encode.metablock.MetaBlockSplit'; }
}
