<?php

// Generated by Haxe 3.4.0
class encode_Prefix {
	public function __construct() {}
	static $kNumInsertLenPrefixes = 24;
	static $kNumCopyLenPrefixes = 24;
	static $kNumCommandPrefixes = 704;
	static $kNumBlockLenPrefixes = 26;
	static $kNumDistanceShortCodes = 16;
	static $kNumDistancePrefixes = 520;
	static $kBlockLengthPrefixCode;
	static function GetBlockLengthPrefixCode($len, $code, $code_off, $n_extra, $n_extra_off, $extra, $extra_off) {
		$code[$code_off] = 0;
		while(true) {
			$tmp = null;
			if($code[$code_off] < 25) {
				$tmp = $len >= _hx_array_get(encode_Prefix::$kBlockLengthPrefixCode, $code[$code_off] + 1)->offset;
			} else {
				$tmp = false;
			}
			if(!$tmp) {
				break;
			}
			$code[$code_off] = $code[$code_off] + 1;
			unset($tmp);
		}
		$n_extra[$n_extra_off] = _hx_array_get(encode_Prefix::$kBlockLengthPrefixCode, $code[$code_off])->nbits;
		$extra[$extra_off] = $len - _hx_array_get(encode_Prefix::$kBlockLengthPrefixCode, $code[$code_off])->offset;
	}
	static function PrefixEncodeCopyDistance($distance_code, $num_direct_codes, $postfix_bits, $code, $extra_bits) {
		if($distance_code < 16 + $num_direct_codes) {
			$code[0] = $distance_code;
			$extra_bits[0] = 0;
			return;
		}
		$distance_code = $distance_code - (16 + $num_direct_codes);
		$distance_code = $distance_code + (1 << $postfix_bits + 2);
		$bucket = encode_Fast_log::Log2Floor($distance_code) - 1;
		$prefix = $distance_code >> $bucket & 1;
		$nbits = $bucket - $postfix_bits;
		$code[0] = 16 + $num_direct_codes + (2 * ($nbits - 1) + $prefix << $postfix_bits) + ($distance_code & (1 << $postfix_bits) - 1);
		$extra_bits[0] = $nbits << 24 | $distance_code - (2 + $prefix << $bucket) >> $postfix_bits;
	}
	function __toString() { return 'encode.Prefix'; }
}
encode_Prefix::$kBlockLengthPrefixCode = (new _hx_array(array(new encode_prefix_PrefixCodeRange(1, 2), new encode_prefix_PrefixCodeRange(5, 2), new encode_prefix_PrefixCodeRange(9, 2), new encode_prefix_PrefixCodeRange(13, 2), new encode_prefix_PrefixCodeRange(17, 3), new encode_prefix_PrefixCodeRange(25, 3), new encode_prefix_PrefixCodeRange(33, 3), new encode_prefix_PrefixCodeRange(41, 3), new encode_prefix_PrefixCodeRange(49, 4), new encode_prefix_PrefixCodeRange(65, 4), new encode_prefix_PrefixCodeRange(81, 4), new encode_prefix_PrefixCodeRange(97, 4), new encode_prefix_PrefixCodeRange(113, 5), new encode_prefix_PrefixCodeRange(145, 5), new encode_prefix_PrefixCodeRange(177, 5), new encode_prefix_PrefixCodeRange(209, 5), new encode_prefix_PrefixCodeRange(241, 6), new encode_prefix_PrefixCodeRange(305, 6), new encode_prefix_PrefixCodeRange(369, 7), new encode_prefix_PrefixCodeRange(497, 8), new encode_prefix_PrefixCodeRange(753, 9), new encode_prefix_PrefixCodeRange(1265, 10), new encode_prefix_PrefixCodeRange(2289, 11), new encode_prefix_PrefixCodeRange(4337, 12), new encode_prefix_PrefixCodeRange(8433, 13), new encode_prefix_PrefixCodeRange(16625, 24))));
